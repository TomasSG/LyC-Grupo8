Gramática

    0 $accept: programa $end

    1 programa: listaDeclaraciones bloque
    2         | bloque

    3 bloque: sentencia
    4       | bloque sentencia

    5 sentencia: asignacion PUNTO_COMA
    6          | salida PUNTO_COMA
    7          | entrada PUNTO_COMA
    8          | bloqueWhile
    9          | bloqueIf
   10          | expresion PUNTO_COMA

   11 listaDeclaraciones: declaracion PUNTO_COMA
   12                   | listaDeclaraciones declaracion PUNTO_COMA

   13 asignacion: ID OP_ASIGNACION expresion
   14           | ID OP_ASIGNACION CONST_STRING

   15 $@1: /* vacío */

   16 funcionContar: CONTAR PAR_ABIERTO expresion $@1 PUNTO_COMA listaConstantes PAR_CERRADO

   17 listaConstantes: COR_ABIERTO constantes COR_CERRADO

   18 constantes: constantes COMA constante
   19           | constante

   20 expresion: expresion OP_SUMA termino
   21          | expresion OP_RESTA termino
   22          | termino

   23 termino: termino OP_MULT factor
   24        | termino OP_DIVISION factor
   25        | factor

   26 factor: ID
   27       | constante
   28       | PAR_ABIERTO expresion PAR_CERRADO
   29       | funcionContar

   30 constante: CONST_BINARIA
   31          | CONST_HEXA
   32          | CONST_REAL
   33          | CONST_ENTERA

   34 declaracion: DIM OP_LE lista_declaracion OP_GE

   35 lista_declaracion: ID COMA lista_declaracion COMA tipoDeDato
   36                  | ID OP_GE AS OP_LE tipoDeDato

   37 tipoDeDato: FLOAT
   38           | INTEGER
   39           | STRING

   40 salida: PUT ID
   41       | PUT CONST_STRING

   42 entrada: GET ID

   43 bloqueWhile: WHILE PAR_ABIERTO condicion PAR_CERRADO LLAVE_ABIERTO bloque LLAVE_CERRADO
   44            | WHILE PAR_ABIERTO condicion PAR_CERRADO sentencia

   45 $@2: /* vacío */

   46 bloqueIf: IF PAR_ABIERTO condicion PAR_CERRADO LLAVE_ABIERTO bloque LLAVE_CERRADO ELSE $@2 LLAVE_ABIERTO bloque LLAVE_CERRADO
   47         | IF PAR_ABIERTO condicion PAR_CERRADO sentencia
   48         | IF PAR_ABIERTO condicion PAR_CERRADO LLAVE_ABIERTO bloque LLAVE_CERRADO

   49 condicion: expLogica OP_AND expLogica

   50 $@3: /* vacío */

   51 condicion: expLogica $@3 OP_OR expLogica
   52          | OP_NOT expLogica
   53          | expLogica

   54 expLogica: PAR_ABIERTO condicion PAR_CERRADO

   55 $@4: /* vacío */

   56 expLogica: expresion $@4 comparador expresion

   57 comparador: OP_IGUAL
   58           | OP_LE
   59           | OP_LEQ
   60           | OP_GE
   61           | OP_GEQ
   62           | OP_NE


Terminales con las reglas donde aparecen

$end (0) 0
error (256)
WHILE (258) 43 44
IF (259) 46 47 48
ELSE (260) 46
PUT (261) 40 41
GET (262) 42
DIM (263) 34
AS (264) 36
CONTAR (265) 16
INTEGER (266) 38
FLOAT (267) 37
STRING (268) 39
LLAVE_ABIERTO (269) 43 46 48
LLAVE_CERRADO (270) 43 46 48
PAR_ABIERTO (271) 16 28 43 44 46 47 48 54
PAR_CERRADO (272) 16 28 43 44 46 47 48 54
COR_ABIERTO (273) 17
COR_CERRADO (274) 17
PUNTO_COMA (275) 5 6 7 10 11 12 16
COMA (276) 18 35
OP_ASIGNACION (277) 13 14
OP_SUMA (278) 20
OP_RESTA (279) 21
OP_DIVISION (280) 24
OP_MULT (281) 23
OP_LE (282) 34 36 58
OP_LEQ (283) 59
OP_GE (284) 34 36 60
OP_GEQ (285) 61
OP_NE (286) 62
OP_IGUAL (287) 57
OP_AND (288) 49
OP_OR (289) 51
OP_NOT (290) 52
CONST_ENTERA (291) 33
CONST_REAL (292) 32
CONST_STRING (293) 14 41
CONST_BINARIA (294) 30
CONST_HEXA (295) 31
ID (296) 13 14 26 35 36 40 42


No terminales con las reglas donde aparecen

$accept (42)
    en la izquierda: 0
programa (43)
    en la izquierda: 1 2, en la derecha: 0
bloque (44)
    en la izquierda: 3 4, en la derecha: 1 2 4 43 46 48
sentencia (45)
    en la izquierda: 5 6 7 8 9 10, en la derecha: 3 4 44 47
listaDeclaraciones (46)
    en la izquierda: 11 12, en la derecha: 1 12
asignacion (47)
    en la izquierda: 13 14, en la derecha: 5
funcionContar (48)
    en la izquierda: 16, en la derecha: 29
$@1 (49)
    en la izquierda: 15, en la derecha: 16
listaConstantes (50)
    en la izquierda: 17, en la derecha: 16
constantes (51)
    en la izquierda: 18 19, en la derecha: 17 18
expresion (52)
    en la izquierda: 20 21 22, en la derecha: 10 13 16 20 21 28 56
termino (53)
    en la izquierda: 23 24 25, en la derecha: 20 21 22 23 24
factor (54)
    en la izquierda: 26 27 28 29, en la derecha: 23 24 25
constante (55)
    en la izquierda: 30 31 32 33, en la derecha: 18 19 27
declaracion (56)
    en la izquierda: 34, en la derecha: 11 12
lista_declaracion (57)
    en la izquierda: 35 36, en la derecha: 34 35
tipoDeDato (58)
    en la izquierda: 37 38 39, en la derecha: 35 36
salida (59)
    en la izquierda: 40 41, en la derecha: 6
entrada (60)
    en la izquierda: 42, en la derecha: 7
bloqueWhile (61)
    en la izquierda: 43 44, en la derecha: 8
bloqueIf (62)
    en la izquierda: 46 47 48, en la derecha: 9
$@2 (63)
    en la izquierda: 45, en la derecha: 46
condicion (64)
    en la izquierda: 49 51 52 53, en la derecha: 43 44 46 47 48 54
$@3 (65)
    en la izquierda: 50, en la derecha: 51
expLogica (66)
    en la izquierda: 54 56, en la derecha: 49 51 52 53
$@4 (67)
    en la izquierda: 55, en la derecha: 56
comparador (68)
    en la izquierda: 57 58 59 60 61 62, en la derecha: 56


estado 0

    0 $accept: . programa $end

    WHILE          desplazar e ir al estado 1
    IF             desplazar e ir al estado 2
    PUT            desplazar e ir al estado 3
    GET            desplazar e ir al estado 4
    DIM            desplazar e ir al estado 5
    CONTAR         desplazar e ir al estado 6
    PAR_ABIERTO    desplazar e ir al estado 7
    CONST_ENTERA   desplazar e ir al estado 8
    CONST_REAL     desplazar e ir al estado 9
    CONST_BINARIA  desplazar e ir al estado 10
    CONST_HEXA     desplazar e ir al estado 11
    ID             desplazar e ir al estado 12

    programa            ir al estado 13
    bloque              ir al estado 14
    sentencia           ir al estado 15
    listaDeclaraciones  ir al estado 16
    asignacion          ir al estado 17
    funcionContar       ir al estado 18
    expresion           ir al estado 19
    termino             ir al estado 20
    factor              ir al estado 21
    constante           ir al estado 22
    declaracion         ir al estado 23
    salida              ir al estado 24
    entrada             ir al estado 25
    bloqueWhile         ir al estado 26
    bloqueIf            ir al estado 27


estado 1

   43 bloqueWhile: WHILE . PAR_ABIERTO condicion PAR_CERRADO LLAVE_ABIERTO bloque LLAVE_CERRADO
   44            | WHILE . PAR_ABIERTO condicion PAR_CERRADO sentencia

    PAR_ABIERTO  desplazar e ir al estado 28


estado 2

   46 bloqueIf: IF . PAR_ABIERTO condicion PAR_CERRADO LLAVE_ABIERTO bloque LLAVE_CERRADO ELSE $@2 LLAVE_ABIERTO bloque LLAVE_CERRADO
   47         | IF . PAR_ABIERTO condicion PAR_CERRADO sentencia
   48         | IF . PAR_ABIERTO condicion PAR_CERRADO LLAVE_ABIERTO bloque LLAVE_CERRADO

    PAR_ABIERTO  desplazar e ir al estado 29


estado 3

   40 salida: PUT . ID
   41       | PUT . CONST_STRING

    CONST_STRING  desplazar e ir al estado 30
    ID            desplazar e ir al estado 31


estado 4

   42 entrada: GET . ID

    ID  desplazar e ir al estado 32


estado 5

   34 declaracion: DIM . OP_LE lista_declaracion OP_GE

    OP_LE  desplazar e ir al estado 33


estado 6

   16 funcionContar: CONTAR . PAR_ABIERTO expresion $@1 PUNTO_COMA listaConstantes PAR_CERRADO

    PAR_ABIERTO  desplazar e ir al estado 34


estado 7

   28 factor: PAR_ABIERTO . expresion PAR_CERRADO

    CONTAR         desplazar e ir al estado 6
    PAR_ABIERTO    desplazar e ir al estado 7
    CONST_ENTERA   desplazar e ir al estado 8
    CONST_REAL     desplazar e ir al estado 9
    CONST_BINARIA  desplazar e ir al estado 10
    CONST_HEXA     desplazar e ir al estado 11
    ID             desplazar e ir al estado 35

    funcionContar  ir al estado 18
    expresion      ir al estado 36
    termino        ir al estado 20
    factor         ir al estado 21
    constante      ir al estado 22


estado 8

   33 constante: CONST_ENTERA .

    $default  reduce usando la regla 33 (constante)


estado 9

   32 constante: CONST_REAL .

    $default  reduce usando la regla 32 (constante)


estado 10

   30 constante: CONST_BINARIA .

    $default  reduce usando la regla 30 (constante)


estado 11

   31 constante: CONST_HEXA .

    $default  reduce usando la regla 31 (constante)


estado 12

   13 asignacion: ID . OP_ASIGNACION expresion
   14           | ID . OP_ASIGNACION CONST_STRING
   26 factor: ID .

    OP_ASIGNACION  desplazar e ir al estado 37

    $default  reduce usando la regla 26 (factor)


estado 13

    0 $accept: programa . $end

    $end  desplazar e ir al estado 38


estado 14

    2 programa: bloque .
    4 bloque: bloque . sentencia

    WHILE          desplazar e ir al estado 1
    IF             desplazar e ir al estado 2
    PUT            desplazar e ir al estado 3
    GET            desplazar e ir al estado 4
    CONTAR         desplazar e ir al estado 6
    PAR_ABIERTO    desplazar e ir al estado 7
    CONST_ENTERA   desplazar e ir al estado 8
    CONST_REAL     desplazar e ir al estado 9
    CONST_BINARIA  desplazar e ir al estado 10
    CONST_HEXA     desplazar e ir al estado 11
    ID             desplazar e ir al estado 12

    $default  reduce usando la regla 2 (programa)

    sentencia      ir al estado 39
    asignacion     ir al estado 17
    funcionContar  ir al estado 18
    expresion      ir al estado 19
    termino        ir al estado 20
    factor         ir al estado 21
    constante      ir al estado 22
    salida         ir al estado 24
    entrada        ir al estado 25
    bloqueWhile    ir al estado 26
    bloqueIf       ir al estado 27


estado 15

    3 bloque: sentencia .

    $default  reduce usando la regla 3 (bloque)


estado 16

    1 programa: listaDeclaraciones . bloque
   12 listaDeclaraciones: listaDeclaraciones . declaracion PUNTO_COMA

    WHILE          desplazar e ir al estado 1
    IF             desplazar e ir al estado 2
    PUT            desplazar e ir al estado 3
    GET            desplazar e ir al estado 4
    DIM            desplazar e ir al estado 5
    CONTAR         desplazar e ir al estado 6
    PAR_ABIERTO    desplazar e ir al estado 7
    CONST_ENTERA   desplazar e ir al estado 8
    CONST_REAL     desplazar e ir al estado 9
    CONST_BINARIA  desplazar e ir al estado 10
    CONST_HEXA     desplazar e ir al estado 11
    ID             desplazar e ir al estado 12

    bloque         ir al estado 40
    sentencia      ir al estado 15
    asignacion     ir al estado 17
    funcionContar  ir al estado 18
    expresion      ir al estado 19
    termino        ir al estado 20
    factor         ir al estado 21
    constante      ir al estado 22
    declaracion    ir al estado 41
    salida         ir al estado 24
    entrada        ir al estado 25
    bloqueWhile    ir al estado 26
    bloqueIf       ir al estado 27


estado 17

    5 sentencia: asignacion . PUNTO_COMA

    PUNTO_COMA  desplazar e ir al estado 42


estado 18

   29 factor: funcionContar .

    $default  reduce usando la regla 29 (factor)


estado 19

   10 sentencia: expresion . PUNTO_COMA
   20 expresion: expresion . OP_SUMA termino
   21          | expresion . OP_RESTA termino

    PUNTO_COMA  desplazar e ir al estado 43
    OP_SUMA     desplazar e ir al estado 44
    OP_RESTA    desplazar e ir al estado 45


estado 20

   22 expresion: termino .
   23 termino: termino . OP_MULT factor
   24        | termino . OP_DIVISION factor

    OP_DIVISION  desplazar e ir al estado 46
    OP_MULT      desplazar e ir al estado 47

    $default  reduce usando la regla 22 (expresion)


estado 21

   25 termino: factor .

    $default  reduce usando la regla 25 (termino)


estado 22

   27 factor: constante .

    $default  reduce usando la regla 27 (factor)


estado 23

   11 listaDeclaraciones: declaracion . PUNTO_COMA

    PUNTO_COMA  desplazar e ir al estado 48


estado 24

    6 sentencia: salida . PUNTO_COMA

    PUNTO_COMA  desplazar e ir al estado 49


estado 25

    7 sentencia: entrada . PUNTO_COMA

    PUNTO_COMA  desplazar e ir al estado 50


estado 26

    8 sentencia: bloqueWhile .

    $default  reduce usando la regla 8 (sentencia)


estado 27

    9 sentencia: bloqueIf .

    $default  reduce usando la regla 9 (sentencia)


estado 28

   43 bloqueWhile: WHILE PAR_ABIERTO . condicion PAR_CERRADO LLAVE_ABIERTO bloque LLAVE_CERRADO
   44            | WHILE PAR_ABIERTO . condicion PAR_CERRADO sentencia

    CONTAR         desplazar e ir al estado 6
    PAR_ABIERTO    desplazar e ir al estado 51
    OP_NOT         desplazar e ir al estado 52
    CONST_ENTERA   desplazar e ir al estado 8
    CONST_REAL     desplazar e ir al estado 9
    CONST_BINARIA  desplazar e ir al estado 10
    CONST_HEXA     desplazar e ir al estado 11
    ID             desplazar e ir al estado 35

    funcionContar  ir al estado 18
    expresion      ir al estado 53
    termino        ir al estado 20
    factor         ir al estado 21
    constante      ir al estado 22
    condicion      ir al estado 54
    expLogica      ir al estado 55


estado 29

   46 bloqueIf: IF PAR_ABIERTO . condicion PAR_CERRADO LLAVE_ABIERTO bloque LLAVE_CERRADO ELSE $@2 LLAVE_ABIERTO bloque LLAVE_CERRADO
   47         | IF PAR_ABIERTO . condicion PAR_CERRADO sentencia
   48         | IF PAR_ABIERTO . condicion PAR_CERRADO LLAVE_ABIERTO bloque LLAVE_CERRADO

    CONTAR         desplazar e ir al estado 6
    PAR_ABIERTO    desplazar e ir al estado 51
    OP_NOT         desplazar e ir al estado 52
    CONST_ENTERA   desplazar e ir al estado 8
    CONST_REAL     desplazar e ir al estado 9
    CONST_BINARIA  desplazar e ir al estado 10
    CONST_HEXA     desplazar e ir al estado 11
    ID             desplazar e ir al estado 35

    funcionContar  ir al estado 18
    expresion      ir al estado 53
    termino        ir al estado 20
    factor         ir al estado 21
    constante      ir al estado 22
    condicion      ir al estado 56
    expLogica      ir al estado 55


estado 30

   41 salida: PUT CONST_STRING .

    $default  reduce usando la regla 41 (salida)


estado 31

   40 salida: PUT ID .

    $default  reduce usando la regla 40 (salida)


estado 32

   42 entrada: GET ID .

    $default  reduce usando la regla 42 (entrada)


estado 33

   34 declaracion: DIM OP_LE . lista_declaracion OP_GE

    ID  desplazar e ir al estado 57

    lista_declaracion  ir al estado 58


estado 34

   16 funcionContar: CONTAR PAR_ABIERTO . expresion $@1 PUNTO_COMA listaConstantes PAR_CERRADO

    CONTAR         desplazar e ir al estado 6
    PAR_ABIERTO    desplazar e ir al estado 7
    CONST_ENTERA   desplazar e ir al estado 8
    CONST_REAL     desplazar e ir al estado 9
    CONST_BINARIA  desplazar e ir al estado 10
    CONST_HEXA     desplazar e ir al estado 11
    ID             desplazar e ir al estado 35

    funcionContar  ir al estado 18
    expresion      ir al estado 59
    termino        ir al estado 20
    factor         ir al estado 21
    constante      ir al estado 22


estado 35

   26 factor: ID .

    $default  reduce usando la regla 26 (factor)


estado 36

   20 expresion: expresion . OP_SUMA termino
   21          | expresion . OP_RESTA termino
   28 factor: PAR_ABIERTO expresion . PAR_CERRADO

    PAR_CERRADO  desplazar e ir al estado 60
    OP_SUMA      desplazar e ir al estado 44
    OP_RESTA     desplazar e ir al estado 45


estado 37

   13 asignacion: ID OP_ASIGNACION . expresion
   14           | ID OP_ASIGNACION . CONST_STRING

    CONTAR         desplazar e ir al estado 6
    PAR_ABIERTO    desplazar e ir al estado 7
    CONST_ENTERA   desplazar e ir al estado 8
    CONST_REAL     desplazar e ir al estado 9
    CONST_STRING   desplazar e ir al estado 61
    CONST_BINARIA  desplazar e ir al estado 10
    CONST_HEXA     desplazar e ir al estado 11
    ID             desplazar e ir al estado 35

    funcionContar  ir al estado 18
    expresion      ir al estado 62
    termino        ir al estado 20
    factor         ir al estado 21
    constante      ir al estado 22


estado 38

    0 $accept: programa $end .

    $default  aceptar


estado 39

    4 bloque: bloque sentencia .

    $default  reduce usando la regla 4 (bloque)


estado 40

    1 programa: listaDeclaraciones bloque .
    4 bloque: bloque . sentencia

    WHILE          desplazar e ir al estado 1
    IF             desplazar e ir al estado 2
    PUT            desplazar e ir al estado 3
    GET            desplazar e ir al estado 4
    CONTAR         desplazar e ir al estado 6
    PAR_ABIERTO    desplazar e ir al estado 7
    CONST_ENTERA   desplazar e ir al estado 8
    CONST_REAL     desplazar e ir al estado 9
    CONST_BINARIA  desplazar e ir al estado 10
    CONST_HEXA     desplazar e ir al estado 11
    ID             desplazar e ir al estado 12

    $default  reduce usando la regla 1 (programa)

    sentencia      ir al estado 39
    asignacion     ir al estado 17
    funcionContar  ir al estado 18
    expresion      ir al estado 19
    termino        ir al estado 20
    factor         ir al estado 21
    constante      ir al estado 22
    salida         ir al estado 24
    entrada        ir al estado 25
    bloqueWhile    ir al estado 26
    bloqueIf       ir al estado 27


estado 41

   12 listaDeclaraciones: listaDeclaraciones declaracion . PUNTO_COMA

    PUNTO_COMA  desplazar e ir al estado 63


estado 42

    5 sentencia: asignacion PUNTO_COMA .

    $default  reduce usando la regla 5 (sentencia)


estado 43

   10 sentencia: expresion PUNTO_COMA .

    $default  reduce usando la regla 10 (sentencia)


estado 44

   20 expresion: expresion OP_SUMA . termino

    CONTAR         desplazar e ir al estado 6
    PAR_ABIERTO    desplazar e ir al estado 7
    CONST_ENTERA   desplazar e ir al estado 8
    CONST_REAL     desplazar e ir al estado 9
    CONST_BINARIA  desplazar e ir al estado 10
    CONST_HEXA     desplazar e ir al estado 11
    ID             desplazar e ir al estado 35

    funcionContar  ir al estado 18
    termino        ir al estado 64
    factor         ir al estado 21
    constante      ir al estado 22


estado 45

   21 expresion: expresion OP_RESTA . termino

    CONTAR         desplazar e ir al estado 6
    PAR_ABIERTO    desplazar e ir al estado 7
    CONST_ENTERA   desplazar e ir al estado 8
    CONST_REAL     desplazar e ir al estado 9
    CONST_BINARIA  desplazar e ir al estado 10
    CONST_HEXA     desplazar e ir al estado 11
    ID             desplazar e ir al estado 35

    funcionContar  ir al estado 18
    termino        ir al estado 65
    factor         ir al estado 21
    constante      ir al estado 22


estado 46

   24 termino: termino OP_DIVISION . factor

    CONTAR         desplazar e ir al estado 6
    PAR_ABIERTO    desplazar e ir al estado 7
    CONST_ENTERA   desplazar e ir al estado 8
    CONST_REAL     desplazar e ir al estado 9
    CONST_BINARIA  desplazar e ir al estado 10
    CONST_HEXA     desplazar e ir al estado 11
    ID             desplazar e ir al estado 35

    funcionContar  ir al estado 18
    factor         ir al estado 66
    constante      ir al estado 22


estado 47

   23 termino: termino OP_MULT . factor

    CONTAR         desplazar e ir al estado 6
    PAR_ABIERTO    desplazar e ir al estado 7
    CONST_ENTERA   desplazar e ir al estado 8
    CONST_REAL     desplazar e ir al estado 9
    CONST_BINARIA  desplazar e ir al estado 10
    CONST_HEXA     desplazar e ir al estado 11
    ID             desplazar e ir al estado 35

    funcionContar  ir al estado 18
    factor         ir al estado 67
    constante      ir al estado 22


estado 48

   11 listaDeclaraciones: declaracion PUNTO_COMA .

    $default  reduce usando la regla 11 (listaDeclaraciones)


estado 49

    6 sentencia: salida PUNTO_COMA .

    $default  reduce usando la regla 6 (sentencia)


estado 50

    7 sentencia: entrada PUNTO_COMA .

    $default  reduce usando la regla 7 (sentencia)


estado 51

   28 factor: PAR_ABIERTO . expresion PAR_CERRADO
   54 expLogica: PAR_ABIERTO . condicion PAR_CERRADO

    CONTAR         desplazar e ir al estado 6
    PAR_ABIERTO    desplazar e ir al estado 51
    OP_NOT         desplazar e ir al estado 52
    CONST_ENTERA   desplazar e ir al estado 8
    CONST_REAL     desplazar e ir al estado 9
    CONST_BINARIA  desplazar e ir al estado 10
    CONST_HEXA     desplazar e ir al estado 11
    ID             desplazar e ir al estado 35

    funcionContar  ir al estado 18
    expresion      ir al estado 68
    termino        ir al estado 20
    factor         ir al estado 21
    constante      ir al estado 22
    condicion      ir al estado 69
    expLogica      ir al estado 55


estado 52

   52 condicion: OP_NOT . expLogica

    CONTAR         desplazar e ir al estado 6
    PAR_ABIERTO    desplazar e ir al estado 51
    CONST_ENTERA   desplazar e ir al estado 8
    CONST_REAL     desplazar e ir al estado 9
    CONST_BINARIA  desplazar e ir al estado 10
    CONST_HEXA     desplazar e ir al estado 11
    ID             desplazar e ir al estado 35

    funcionContar  ir al estado 18
    expresion      ir al estado 53
    termino        ir al estado 20
    factor         ir al estado 21
    constante      ir al estado 22
    expLogica      ir al estado 70


estado 53

   20 expresion: expresion . OP_SUMA termino
   21          | expresion . OP_RESTA termino
   56 expLogica: expresion . $@4 comparador expresion

    OP_SUMA   desplazar e ir al estado 44
    OP_RESTA  desplazar e ir al estado 45

    $default  reduce usando la regla 55 ($@4)

    $@4  ir al estado 71


estado 54

   43 bloqueWhile: WHILE PAR_ABIERTO condicion . PAR_CERRADO LLAVE_ABIERTO bloque LLAVE_CERRADO
   44            | WHILE PAR_ABIERTO condicion . PAR_CERRADO sentencia

    PAR_CERRADO  desplazar e ir al estado 72


estado 55

   49 condicion: expLogica . OP_AND expLogica
   51          | expLogica . $@3 OP_OR expLogica
   53          | expLogica .

    OP_AND  desplazar e ir al estado 73

    PAR_CERRADO  reduce usando la regla 53 (condicion)
    $default     reduce usando la regla 50 ($@3)

    $@3  ir al estado 74


estado 56

   46 bloqueIf: IF PAR_ABIERTO condicion . PAR_CERRADO LLAVE_ABIERTO bloque LLAVE_CERRADO ELSE $@2 LLAVE_ABIERTO bloque LLAVE_CERRADO
   47         | IF PAR_ABIERTO condicion . PAR_CERRADO sentencia
   48         | IF PAR_ABIERTO condicion . PAR_CERRADO LLAVE_ABIERTO bloque LLAVE_CERRADO

    PAR_CERRADO  desplazar e ir al estado 75


estado 57

   35 lista_declaracion: ID . COMA lista_declaracion COMA tipoDeDato
   36                  | ID . OP_GE AS OP_LE tipoDeDato

    COMA   desplazar e ir al estado 76
    OP_GE  desplazar e ir al estado 77


estado 58

   34 declaracion: DIM OP_LE lista_declaracion . OP_GE

    OP_GE  desplazar e ir al estado 78


estado 59

   16 funcionContar: CONTAR PAR_ABIERTO expresion . $@1 PUNTO_COMA listaConstantes PAR_CERRADO
   20 expresion: expresion . OP_SUMA termino
   21          | expresion . OP_RESTA termino

    OP_SUMA   desplazar e ir al estado 44
    OP_RESTA  desplazar e ir al estado 45

    $default  reduce usando la regla 15 ($@1)

    $@1  ir al estado 79


estado 60

   28 factor: PAR_ABIERTO expresion PAR_CERRADO .

    $default  reduce usando la regla 28 (factor)


estado 61

   14 asignacion: ID OP_ASIGNACION CONST_STRING .

    $default  reduce usando la regla 14 (asignacion)


estado 62

   13 asignacion: ID OP_ASIGNACION expresion .
   20 expresion: expresion . OP_SUMA termino
   21          | expresion . OP_RESTA termino

    OP_SUMA   desplazar e ir al estado 44
    OP_RESTA  desplazar e ir al estado 45

    $default  reduce usando la regla 13 (asignacion)


estado 63

   12 listaDeclaraciones: listaDeclaraciones declaracion PUNTO_COMA .

    $default  reduce usando la regla 12 (listaDeclaraciones)


estado 64

   20 expresion: expresion OP_SUMA termino .
   23 termino: termino . OP_MULT factor
   24        | termino . OP_DIVISION factor

    OP_DIVISION  desplazar e ir al estado 46
    OP_MULT      desplazar e ir al estado 47

    $default  reduce usando la regla 20 (expresion)


estado 65

   21 expresion: expresion OP_RESTA termino .
   23 termino: termino . OP_MULT factor
   24        | termino . OP_DIVISION factor

    OP_DIVISION  desplazar e ir al estado 46
    OP_MULT      desplazar e ir al estado 47

    $default  reduce usando la regla 21 (expresion)


estado 66

   24 termino: termino OP_DIVISION factor .

    $default  reduce usando la regla 24 (termino)


estado 67

   23 termino: termino OP_MULT factor .

    $default  reduce usando la regla 23 (termino)


estado 68

   20 expresion: expresion . OP_SUMA termino
   21          | expresion . OP_RESTA termino
   28 factor: PAR_ABIERTO expresion . PAR_CERRADO
   56 expLogica: expresion . $@4 comparador expresion

    PAR_CERRADO  desplazar e ir al estado 60
    OP_SUMA      desplazar e ir al estado 44
    OP_RESTA     desplazar e ir al estado 45

    $default  reduce usando la regla 55 ($@4)

    $@4  ir al estado 71


estado 69

   54 expLogica: PAR_ABIERTO condicion . PAR_CERRADO

    PAR_CERRADO  desplazar e ir al estado 80


estado 70

   52 condicion: OP_NOT expLogica .

    $default  reduce usando la regla 52 (condicion)


estado 71

   56 expLogica: expresion $@4 . comparador expresion

    OP_LE     desplazar e ir al estado 81
    OP_LEQ    desplazar e ir al estado 82
    OP_GE     desplazar e ir al estado 83
    OP_GEQ    desplazar e ir al estado 84
    OP_NE     desplazar e ir al estado 85
    OP_IGUAL  desplazar e ir al estado 86

    comparador  ir al estado 87


estado 72

   43 bloqueWhile: WHILE PAR_ABIERTO condicion PAR_CERRADO . LLAVE_ABIERTO bloque LLAVE_CERRADO
   44            | WHILE PAR_ABIERTO condicion PAR_CERRADO . sentencia

    WHILE          desplazar e ir al estado 1
    IF             desplazar e ir al estado 2
    PUT            desplazar e ir al estado 3
    GET            desplazar e ir al estado 4
    CONTAR         desplazar e ir al estado 6
    LLAVE_ABIERTO  desplazar e ir al estado 88
    PAR_ABIERTO    desplazar e ir al estado 7
    CONST_ENTERA   desplazar e ir al estado 8
    CONST_REAL     desplazar e ir al estado 9
    CONST_BINARIA  desplazar e ir al estado 10
    CONST_HEXA     desplazar e ir al estado 11
    ID             desplazar e ir al estado 12

    sentencia      ir al estado 89
    asignacion     ir al estado 17
    funcionContar  ir al estado 18
    expresion      ir al estado 19
    termino        ir al estado 20
    factor         ir al estado 21
    constante      ir al estado 22
    salida         ir al estado 24
    entrada        ir al estado 25
    bloqueWhile    ir al estado 26
    bloqueIf       ir al estado 27


estado 73

   49 condicion: expLogica OP_AND . expLogica

    CONTAR         desplazar e ir al estado 6
    PAR_ABIERTO    desplazar e ir al estado 51
    CONST_ENTERA   desplazar e ir al estado 8
    CONST_REAL     desplazar e ir al estado 9
    CONST_BINARIA  desplazar e ir al estado 10
    CONST_HEXA     desplazar e ir al estado 11
    ID             desplazar e ir al estado 35

    funcionContar  ir al estado 18
    expresion      ir al estado 53
    termino        ir al estado 20
    factor         ir al estado 21
    constante      ir al estado 22
    expLogica      ir al estado 90


estado 74

   51 condicion: expLogica $@3 . OP_OR expLogica

    OP_OR  desplazar e ir al estado 91


estado 75

   46 bloqueIf: IF PAR_ABIERTO condicion PAR_CERRADO . LLAVE_ABIERTO bloque LLAVE_CERRADO ELSE $@2 LLAVE_ABIERTO bloque LLAVE_CERRADO
   47         | IF PAR_ABIERTO condicion PAR_CERRADO . sentencia
   48         | IF PAR_ABIERTO condicion PAR_CERRADO . LLAVE_ABIERTO bloque LLAVE_CERRADO

    WHILE          desplazar e ir al estado 1
    IF             desplazar e ir al estado 2
    PUT            desplazar e ir al estado 3
    GET            desplazar e ir al estado 4
    CONTAR         desplazar e ir al estado 6
    LLAVE_ABIERTO  desplazar e ir al estado 92
    PAR_ABIERTO    desplazar e ir al estado 7
    CONST_ENTERA   desplazar e ir al estado 8
    CONST_REAL     desplazar e ir al estado 9
    CONST_BINARIA  desplazar e ir al estado 10
    CONST_HEXA     desplazar e ir al estado 11
    ID             desplazar e ir al estado 12

    sentencia      ir al estado 93
    asignacion     ir al estado 17
    funcionContar  ir al estado 18
    expresion      ir al estado 19
    termino        ir al estado 20
    factor         ir al estado 21
    constante      ir al estado 22
    salida         ir al estado 24
    entrada        ir al estado 25
    bloqueWhile    ir al estado 26
    bloqueIf       ir al estado 27


estado 76

   35 lista_declaracion: ID COMA . lista_declaracion COMA tipoDeDato

    ID  desplazar e ir al estado 57

    lista_declaracion  ir al estado 94


estado 77

   36 lista_declaracion: ID OP_GE . AS OP_LE tipoDeDato

    AS  desplazar e ir al estado 95


estado 78

   34 declaracion: DIM OP_LE lista_declaracion OP_GE .

    $default  reduce usando la regla 34 (declaracion)


estado 79

   16 funcionContar: CONTAR PAR_ABIERTO expresion $@1 . PUNTO_COMA listaConstantes PAR_CERRADO

    PUNTO_COMA  desplazar e ir al estado 96


estado 80

   54 expLogica: PAR_ABIERTO condicion PAR_CERRADO .

    $default  reduce usando la regla 54 (expLogica)


estado 81

   58 comparador: OP_LE .

    $default  reduce usando la regla 58 (comparador)


estado 82

   59 comparador: OP_LEQ .

    $default  reduce usando la regla 59 (comparador)


estado 83

   60 comparador: OP_GE .

    $default  reduce usando la regla 60 (comparador)


estado 84

   61 comparador: OP_GEQ .

    $default  reduce usando la regla 61 (comparador)


estado 85

   62 comparador: OP_NE .

    $default  reduce usando la regla 62 (comparador)


estado 86

   57 comparador: OP_IGUAL .

    $default  reduce usando la regla 57 (comparador)


estado 87

   56 expLogica: expresion $@4 comparador . expresion

    CONTAR         desplazar e ir al estado 6
    PAR_ABIERTO    desplazar e ir al estado 7
    CONST_ENTERA   desplazar e ir al estado 8
    CONST_REAL     desplazar e ir al estado 9
    CONST_BINARIA  desplazar e ir al estado 10
    CONST_HEXA     desplazar e ir al estado 11
    ID             desplazar e ir al estado 35

    funcionContar  ir al estado 18
    expresion      ir al estado 97
    termino        ir al estado 20
    factor         ir al estado 21
    constante      ir al estado 22


estado 88

   43 bloqueWhile: WHILE PAR_ABIERTO condicion PAR_CERRADO LLAVE_ABIERTO . bloque LLAVE_CERRADO

    WHILE          desplazar e ir al estado 1
    IF             desplazar e ir al estado 2
    PUT            desplazar e ir al estado 3
    GET            desplazar e ir al estado 4
    CONTAR         desplazar e ir al estado 6
    PAR_ABIERTO    desplazar e ir al estado 7
    CONST_ENTERA   desplazar e ir al estado 8
    CONST_REAL     desplazar e ir al estado 9
    CONST_BINARIA  desplazar e ir al estado 10
    CONST_HEXA     desplazar e ir al estado 11
    ID             desplazar e ir al estado 12

    bloque         ir al estado 98
    sentencia      ir al estado 15
    asignacion     ir al estado 17
    funcionContar  ir al estado 18
    expresion      ir al estado 19
    termino        ir al estado 20
    factor         ir al estado 21
    constante      ir al estado 22
    salida         ir al estado 24
    entrada        ir al estado 25
    bloqueWhile    ir al estado 26
    bloqueIf       ir al estado 27


estado 89

   44 bloqueWhile: WHILE PAR_ABIERTO condicion PAR_CERRADO sentencia .

    $default  reduce usando la regla 44 (bloqueWhile)


estado 90

   49 condicion: expLogica OP_AND expLogica .

    $default  reduce usando la regla 49 (condicion)


estado 91

   51 condicion: expLogica $@3 OP_OR . expLogica

    CONTAR         desplazar e ir al estado 6
    PAR_ABIERTO    desplazar e ir al estado 51
    CONST_ENTERA   desplazar e ir al estado 8
    CONST_REAL     desplazar e ir al estado 9
    CONST_BINARIA  desplazar e ir al estado 10
    CONST_HEXA     desplazar e ir al estado 11
    ID             desplazar e ir al estado 35

    funcionContar  ir al estado 18
    expresion      ir al estado 53
    termino        ir al estado 20
    factor         ir al estado 21
    constante      ir al estado 22
    expLogica      ir al estado 99


estado 92

   46 bloqueIf: IF PAR_ABIERTO condicion PAR_CERRADO LLAVE_ABIERTO . bloque LLAVE_CERRADO ELSE $@2 LLAVE_ABIERTO bloque LLAVE_CERRADO
   48         | IF PAR_ABIERTO condicion PAR_CERRADO LLAVE_ABIERTO . bloque LLAVE_CERRADO

    WHILE          desplazar e ir al estado 1
    IF             desplazar e ir al estado 2
    PUT            desplazar e ir al estado 3
    GET            desplazar e ir al estado 4
    CONTAR         desplazar e ir al estado 6
    PAR_ABIERTO    desplazar e ir al estado 7
    CONST_ENTERA   desplazar e ir al estado 8
    CONST_REAL     desplazar e ir al estado 9
    CONST_BINARIA  desplazar e ir al estado 10
    CONST_HEXA     desplazar e ir al estado 11
    ID             desplazar e ir al estado 12

    bloque         ir al estado 100
    sentencia      ir al estado 15
    asignacion     ir al estado 17
    funcionContar  ir al estado 18
    expresion      ir al estado 19
    termino        ir al estado 20
    factor         ir al estado 21
    constante      ir al estado 22
    salida         ir al estado 24
    entrada        ir al estado 25
    bloqueWhile    ir al estado 26
    bloqueIf       ir al estado 27


estado 93

   47 bloqueIf: IF PAR_ABIERTO condicion PAR_CERRADO sentencia .

    $default  reduce usando la regla 47 (bloqueIf)


estado 94

   35 lista_declaracion: ID COMA lista_declaracion . COMA tipoDeDato

    COMA  desplazar e ir al estado 101


estado 95

   36 lista_declaracion: ID OP_GE AS . OP_LE tipoDeDato

    OP_LE  desplazar e ir al estado 102


estado 96

   16 funcionContar: CONTAR PAR_ABIERTO expresion $@1 PUNTO_COMA . listaConstantes PAR_CERRADO

    COR_ABIERTO  desplazar e ir al estado 103

    listaConstantes  ir al estado 104


estado 97

   20 expresion: expresion . OP_SUMA termino
   21          | expresion . OP_RESTA termino
   56 expLogica: expresion $@4 comparador expresion .

    OP_SUMA   desplazar e ir al estado 44
    OP_RESTA  desplazar e ir al estado 45

    $default  reduce usando la regla 56 (expLogica)


estado 98

    4 bloque: bloque . sentencia
   43 bloqueWhile: WHILE PAR_ABIERTO condicion PAR_CERRADO LLAVE_ABIERTO bloque . LLAVE_CERRADO

    WHILE          desplazar e ir al estado 1
    IF             desplazar e ir al estado 2
    PUT            desplazar e ir al estado 3
    GET            desplazar e ir al estado 4
    CONTAR         desplazar e ir al estado 6
    LLAVE_CERRADO  desplazar e ir al estado 105
    PAR_ABIERTO    desplazar e ir al estado 7
    CONST_ENTERA   desplazar e ir al estado 8
    CONST_REAL     desplazar e ir al estado 9
    CONST_BINARIA  desplazar e ir al estado 10
    CONST_HEXA     desplazar e ir al estado 11
    ID             desplazar e ir al estado 12

    sentencia      ir al estado 39
    asignacion     ir al estado 17
    funcionContar  ir al estado 18
    expresion      ir al estado 19
    termino        ir al estado 20
    factor         ir al estado 21
    constante      ir al estado 22
    salida         ir al estado 24
    entrada        ir al estado 25
    bloqueWhile    ir al estado 26
    bloqueIf       ir al estado 27


estado 99

   51 condicion: expLogica $@3 OP_OR expLogica .

    $default  reduce usando la regla 51 (condicion)


estado 100

    4 bloque: bloque . sentencia
   46 bloqueIf: IF PAR_ABIERTO condicion PAR_CERRADO LLAVE_ABIERTO bloque . LLAVE_CERRADO ELSE $@2 LLAVE_ABIERTO bloque LLAVE_CERRADO
   48         | IF PAR_ABIERTO condicion PAR_CERRADO LLAVE_ABIERTO bloque . LLAVE_CERRADO

    WHILE          desplazar e ir al estado 1
    IF             desplazar e ir al estado 2
    PUT            desplazar e ir al estado 3
    GET            desplazar e ir al estado 4
    CONTAR         desplazar e ir al estado 6
    LLAVE_CERRADO  desplazar e ir al estado 106
    PAR_ABIERTO    desplazar e ir al estado 7
    CONST_ENTERA   desplazar e ir al estado 8
    CONST_REAL     desplazar e ir al estado 9
    CONST_BINARIA  desplazar e ir al estado 10
    CONST_HEXA     desplazar e ir al estado 11
    ID             desplazar e ir al estado 12

    sentencia      ir al estado 39
    asignacion     ir al estado 17
    funcionContar  ir al estado 18
    expresion      ir al estado 19
    termino        ir al estado 20
    factor         ir al estado 21
    constante      ir al estado 22
    salida         ir al estado 24
    entrada        ir al estado 25
    bloqueWhile    ir al estado 26
    bloqueIf       ir al estado 27


estado 101

   35 lista_declaracion: ID COMA lista_declaracion COMA . tipoDeDato

    INTEGER  desplazar e ir al estado 107
    FLOAT    desplazar e ir al estado 108
    STRING   desplazar e ir al estado 109

    tipoDeDato  ir al estado 110


estado 102

   36 lista_declaracion: ID OP_GE AS OP_LE . tipoDeDato

    INTEGER  desplazar e ir al estado 107
    FLOAT    desplazar e ir al estado 108
    STRING   desplazar e ir al estado 109

    tipoDeDato  ir al estado 111


estado 103

   17 listaConstantes: COR_ABIERTO . constantes COR_CERRADO

    CONST_ENTERA   desplazar e ir al estado 8
    CONST_REAL     desplazar e ir al estado 9
    CONST_BINARIA  desplazar e ir al estado 10
    CONST_HEXA     desplazar e ir al estado 11

    constantes  ir al estado 112
    constante   ir al estado 113


estado 104

   16 funcionContar: CONTAR PAR_ABIERTO expresion $@1 PUNTO_COMA listaConstantes . PAR_CERRADO

    PAR_CERRADO  desplazar e ir al estado 114


estado 105

   43 bloqueWhile: WHILE PAR_ABIERTO condicion PAR_CERRADO LLAVE_ABIERTO bloque LLAVE_CERRADO .

    $default  reduce usando la regla 43 (bloqueWhile)


estado 106

   46 bloqueIf: IF PAR_ABIERTO condicion PAR_CERRADO LLAVE_ABIERTO bloque LLAVE_CERRADO . ELSE $@2 LLAVE_ABIERTO bloque LLAVE_CERRADO
   48         | IF PAR_ABIERTO condicion PAR_CERRADO LLAVE_ABIERTO bloque LLAVE_CERRADO .

    ELSE  desplazar e ir al estado 115

    $default  reduce usando la regla 48 (bloqueIf)


estado 107

   38 tipoDeDato: INTEGER .

    $default  reduce usando la regla 38 (tipoDeDato)


estado 108

   37 tipoDeDato: FLOAT .

    $default  reduce usando la regla 37 (tipoDeDato)


estado 109

   39 tipoDeDato: STRING .

    $default  reduce usando la regla 39 (tipoDeDato)


estado 110

   35 lista_declaracion: ID COMA lista_declaracion COMA tipoDeDato .

    $default  reduce usando la regla 35 (lista_declaracion)


estado 111

   36 lista_declaracion: ID OP_GE AS OP_LE tipoDeDato .

    $default  reduce usando la regla 36 (lista_declaracion)


estado 112

   17 listaConstantes: COR_ABIERTO constantes . COR_CERRADO
   18 constantes: constantes . COMA constante

    COR_CERRADO  desplazar e ir al estado 116
    COMA         desplazar e ir al estado 117


estado 113

   19 constantes: constante .

    $default  reduce usando la regla 19 (constantes)


estado 114

   16 funcionContar: CONTAR PAR_ABIERTO expresion $@1 PUNTO_COMA listaConstantes PAR_CERRADO .

    $default  reduce usando la regla 16 (funcionContar)


estado 115

   46 bloqueIf: IF PAR_ABIERTO condicion PAR_CERRADO LLAVE_ABIERTO bloque LLAVE_CERRADO ELSE . $@2 LLAVE_ABIERTO bloque LLAVE_CERRADO

    $default  reduce usando la regla 45 ($@2)

    $@2  ir al estado 118


estado 116

   17 listaConstantes: COR_ABIERTO constantes COR_CERRADO .

    $default  reduce usando la regla 17 (listaConstantes)


estado 117

   18 constantes: constantes COMA . constante

    CONST_ENTERA   desplazar e ir al estado 8
    CONST_REAL     desplazar e ir al estado 9
    CONST_BINARIA  desplazar e ir al estado 10
    CONST_HEXA     desplazar e ir al estado 11

    constante  ir al estado 119


estado 118

   46 bloqueIf: IF PAR_ABIERTO condicion PAR_CERRADO LLAVE_ABIERTO bloque LLAVE_CERRADO ELSE $@2 . LLAVE_ABIERTO bloque LLAVE_CERRADO

    LLAVE_ABIERTO  desplazar e ir al estado 120


estado 119

   18 constantes: constantes COMA constante .

    $default  reduce usando la regla 18 (constantes)


estado 120

   46 bloqueIf: IF PAR_ABIERTO condicion PAR_CERRADO LLAVE_ABIERTO bloque LLAVE_CERRADO ELSE $@2 LLAVE_ABIERTO . bloque LLAVE_CERRADO

    WHILE          desplazar e ir al estado 1
    IF             desplazar e ir al estado 2
    PUT            desplazar e ir al estado 3
    GET            desplazar e ir al estado 4
    CONTAR         desplazar e ir al estado 6
    PAR_ABIERTO    desplazar e ir al estado 7
    CONST_ENTERA   desplazar e ir al estado 8
    CONST_REAL     desplazar e ir al estado 9
    CONST_BINARIA  desplazar e ir al estado 10
    CONST_HEXA     desplazar e ir al estado 11
    ID             desplazar e ir al estado 12

    bloque         ir al estado 121
    sentencia      ir al estado 15
    asignacion     ir al estado 17
    funcionContar  ir al estado 18
    expresion      ir al estado 19
    termino        ir al estado 20
    factor         ir al estado 21
    constante      ir al estado 22
    salida         ir al estado 24
    entrada        ir al estado 25
    bloqueWhile    ir al estado 26
    bloqueIf       ir al estado 27


estado 121

    4 bloque: bloque . sentencia
   46 bloqueIf: IF PAR_ABIERTO condicion PAR_CERRADO LLAVE_ABIERTO bloque LLAVE_CERRADO ELSE $@2 LLAVE_ABIERTO bloque . LLAVE_CERRADO

    WHILE          desplazar e ir al estado 1
    IF             desplazar e ir al estado 2
    PUT            desplazar e ir al estado 3
    GET            desplazar e ir al estado 4
    CONTAR         desplazar e ir al estado 6
    LLAVE_CERRADO  desplazar e ir al estado 122
    PAR_ABIERTO    desplazar e ir al estado 7
    CONST_ENTERA   desplazar e ir al estado 8
    CONST_REAL     desplazar e ir al estado 9
    CONST_BINARIA  desplazar e ir al estado 10
    CONST_HEXA     desplazar e ir al estado 11
    ID             desplazar e ir al estado 12

    sentencia      ir al estado 39
    asignacion     ir al estado 17
    funcionContar  ir al estado 18
    expresion      ir al estado 19
    termino        ir al estado 20
    factor         ir al estado 21
    constante      ir al estado 22
    salida         ir al estado 24
    entrada        ir al estado 25
    bloqueWhile    ir al estado 26
    bloqueIf       ir al estado 27


estado 122

   46 bloqueIf: IF PAR_ABIERTO condicion PAR_CERRADO LLAVE_ABIERTO bloque LLAVE_CERRADO ELSE $@2 LLAVE_ABIERTO bloque LLAVE_CERRADO .

    $default  reduce usando la regla 46 (bloqueIf)
