Gramática

    0 $accept: programa $end

    1 programa: bloque

    2 bloque: bloque sentencia
    3       | sentencia

    4 sentencia: asignacion PUNTO_COMA
    5          | declaracion PUNTO_COMA
    6          | salida PUNTO_COMA
    7          | entrada PUNTO_COMA
    8          | bloqueWhile
    9          | bloqueIf
   10          | expresion PUNTO_COMA

   11 asignacion: ID OP_ASIGNACION expresion
   12           | ID OP_ASIGNACION CONST_STRING

   13 $@1: /* vacío */

   14 funcionContar: CONTAR PAR_ABIERTO expresion $@1 PUNTO_COMA listaConstantes PAR_CERRADO

   15 listaConstantes: COR_ABIERTO constantes COR_CERRADO

   16 constantes: constantes COMA constante
   17           | constante

   18 expresion: expresion OP_SUMA termino
   19          | expresion OP_RESTA termino
   20          | termino

   21 termino: termino OP_MULT factor
   22        | termino OP_DIVISION factor
   23        | factor

   24 factor: ID
   25       | constante
   26       | PAR_ABIERTO expresion PAR_CERRADO
   27       | funcionContar

   28 constante: CONST_BINARIA
   29          | CONST_HEXA
   30          | CONST_REAL
   31          | CONST_ENTERA

   32 declaracion: DIM OP_LE lista_declaracion OP_GE

   33 lista_declaracion: ID COMA lista_declaracion COMA tipoDeDato
   34                  | ID OP_GE AS OP_LE tipoDeDato

   35 tipoDeDato: FLOAT
   36           | INTEGER
   37           | STRING

   38 salida: PUT ID
   39       | PUT CONST_STRING

   40 entrada: GET ID

   41 bloqueWhile: WHILE PAR_ABIERTO condicion PAR_CERRADO LLAVE_ABIERTO bloque LLAVE_CERRADO
   42            | WHILE PAR_ABIERTO condicion PAR_CERRADO sentencia

   43 $@2: /* vacío */

   44 bloqueIf: IF PAR_ABIERTO condicion PAR_CERRADO LLAVE_ABIERTO bloque LLAVE_CERRADO ELSE $@2 LLAVE_ABIERTO bloque LLAVE_CERRADO
   45         | IF PAR_ABIERTO condicion PAR_CERRADO sentencia
   46         | IF PAR_ABIERTO condicion PAR_CERRADO LLAVE_ABIERTO bloque LLAVE_CERRADO

   47 condicion: expLogica OP_AND expLogica

   48 $@3: /* vacío */

   49 condicion: expLogica $@3 OP_OR expLogica
   50          | OP_NOT expLogica
   51          | expLogica

   52 expLogica: PAR_ABIERTO condicion PAR_CERRADO

   53 $@4: /* vacío */

   54 expLogica: expresion $@4 comparador expresion

   55 comparador: OP_IGUAL
   56           | OP_LE
   57           | OP_LEQ
   58           | OP_GE
   59           | OP_GEQ
   60           | OP_NE


Terminales con las reglas donde aparecen

$end (0) 0
error (256)
WHILE (258) 41 42
IF (259) 44 45 46
ELSE (260) 44
PUT (261) 38 39
GET (262) 40
DIM (263) 32
AS (264) 34
CONTAR (265) 14
INTEGER (266) 36
FLOAT (267) 35
STRING (268) 37
LLAVE_ABIERTO (269) 41 44 46
LLAVE_CERRADO (270) 41 44 46
PAR_ABIERTO (271) 14 26 41 42 44 45 46 52
PAR_CERRADO (272) 14 26 41 42 44 45 46 52
COR_ABIERTO (273) 15
COR_CERRADO (274) 15
PUNTO_COMA (275) 4 5 6 7 10 14
COMA (276) 16 33
OP_ASIGNACION (277) 11 12
OP_SUMA (278) 18
OP_RESTA (279) 19
OP_DIVISION (280) 22
OP_MULT (281) 21
OP_LE (282) 32 34 56
OP_LEQ (283) 57
OP_GE (284) 32 34 58
OP_GEQ (285) 59
OP_NE (286) 60
OP_IGUAL (287) 55
OP_AND (288) 47
OP_OR (289) 49
OP_NOT (290) 50
CONST_ENTERA (291) 31
CONST_REAL (292) 30
CONST_STRING (293) 12 39
CONST_BINARIA (294) 28
CONST_HEXA (295) 29
ID (296) 11 12 24 33 34 38 40


No terminales con las reglas donde aparecen

$accept (42)
    en la izquierda: 0
programa (43)
    en la izquierda: 1, en la derecha: 0
bloque (44)
    en la izquierda: 2 3, en la derecha: 1 2 41 44 46
sentencia (45)
    en la izquierda: 4 5 6 7 8 9 10, en la derecha: 2 3 42 45
asignacion (46)
    en la izquierda: 11 12, en la derecha: 4
funcionContar (47)
    en la izquierda: 14, en la derecha: 27
$@1 (48)
    en la izquierda: 13, en la derecha: 14
listaConstantes (49)
    en la izquierda: 15, en la derecha: 14
constantes (50)
    en la izquierda: 16 17, en la derecha: 15 16
expresion (51)
    en la izquierda: 18 19 20, en la derecha: 10 11 14 18 19 26 54
termino (52)
    en la izquierda: 21 22 23, en la derecha: 18 19 20 21 22
factor (53)
    en la izquierda: 24 25 26 27, en la derecha: 21 22 23
constante (54)
    en la izquierda: 28 29 30 31, en la derecha: 16 17 25
declaracion (55)
    en la izquierda: 32, en la derecha: 5
lista_declaracion (56)
    en la izquierda: 33 34, en la derecha: 32 33
tipoDeDato (57)
    en la izquierda: 35 36 37, en la derecha: 33 34
salida (58)
    en la izquierda: 38 39, en la derecha: 6
entrada (59)
    en la izquierda: 40, en la derecha: 7
bloqueWhile (60)
    en la izquierda: 41 42, en la derecha: 8
bloqueIf (61)
    en la izquierda: 44 45 46, en la derecha: 9
$@2 (62)
    en la izquierda: 43, en la derecha: 44
condicion (63)
    en la izquierda: 47 49 50 51, en la derecha: 41 42 44 45 46 52
$@3 (64)
    en la izquierda: 48, en la derecha: 49
expLogica (65)
    en la izquierda: 52 54, en la derecha: 47 49 50 51
$@4 (66)
    en la izquierda: 53, en la derecha: 54
comparador (67)
    en la izquierda: 55 56 57 58 59 60, en la derecha: 54


estado 0

    0 $accept: . programa $end

    WHILE          desplazar e ir al estado 1
    IF             desplazar e ir al estado 2
    PUT            desplazar e ir al estado 3
    GET            desplazar e ir al estado 4
    DIM            desplazar e ir al estado 5
    CONTAR         desplazar e ir al estado 6
    PAR_ABIERTO    desplazar e ir al estado 7
    CONST_ENTERA   desplazar e ir al estado 8
    CONST_REAL     desplazar e ir al estado 9
    CONST_BINARIA  desplazar e ir al estado 10
    CONST_HEXA     desplazar e ir al estado 11
    ID             desplazar e ir al estado 12

    programa       ir al estado 13
    bloque         ir al estado 14
    sentencia      ir al estado 15
    asignacion     ir al estado 16
    funcionContar  ir al estado 17
    expresion      ir al estado 18
    termino        ir al estado 19
    factor         ir al estado 20
    constante      ir al estado 21
    declaracion    ir al estado 22
    salida         ir al estado 23
    entrada        ir al estado 24
    bloqueWhile    ir al estado 25
    bloqueIf       ir al estado 26


estado 1

   41 bloqueWhile: WHILE . PAR_ABIERTO condicion PAR_CERRADO LLAVE_ABIERTO bloque LLAVE_CERRADO
   42            | WHILE . PAR_ABIERTO condicion PAR_CERRADO sentencia

    PAR_ABIERTO  desplazar e ir al estado 27


estado 2

   44 bloqueIf: IF . PAR_ABIERTO condicion PAR_CERRADO LLAVE_ABIERTO bloque LLAVE_CERRADO ELSE $@2 LLAVE_ABIERTO bloque LLAVE_CERRADO
   45         | IF . PAR_ABIERTO condicion PAR_CERRADO sentencia
   46         | IF . PAR_ABIERTO condicion PAR_CERRADO LLAVE_ABIERTO bloque LLAVE_CERRADO

    PAR_ABIERTO  desplazar e ir al estado 28


estado 3

   38 salida: PUT . ID
   39       | PUT . CONST_STRING

    CONST_STRING  desplazar e ir al estado 29
    ID            desplazar e ir al estado 30


estado 4

   40 entrada: GET . ID

    ID  desplazar e ir al estado 31


estado 5

   32 declaracion: DIM . OP_LE lista_declaracion OP_GE

    OP_LE  desplazar e ir al estado 32


estado 6

   14 funcionContar: CONTAR . PAR_ABIERTO expresion $@1 PUNTO_COMA listaConstantes PAR_CERRADO

    PAR_ABIERTO  desplazar e ir al estado 33


estado 7

   26 factor: PAR_ABIERTO . expresion PAR_CERRADO

    CONTAR         desplazar e ir al estado 6
    PAR_ABIERTO    desplazar e ir al estado 7
    CONST_ENTERA   desplazar e ir al estado 8
    CONST_REAL     desplazar e ir al estado 9
    CONST_BINARIA  desplazar e ir al estado 10
    CONST_HEXA     desplazar e ir al estado 11
    ID             desplazar e ir al estado 34

    funcionContar  ir al estado 17
    expresion      ir al estado 35
    termino        ir al estado 19
    factor         ir al estado 20
    constante      ir al estado 21


estado 8

   31 constante: CONST_ENTERA .

    $default  reduce usando la regla 31 (constante)


estado 9

   30 constante: CONST_REAL .

    $default  reduce usando la regla 30 (constante)


estado 10

   28 constante: CONST_BINARIA .

    $default  reduce usando la regla 28 (constante)


estado 11

   29 constante: CONST_HEXA .

    $default  reduce usando la regla 29 (constante)


estado 12

   11 asignacion: ID . OP_ASIGNACION expresion
   12           | ID . OP_ASIGNACION CONST_STRING
   24 factor: ID .

    OP_ASIGNACION  desplazar e ir al estado 36

    $default  reduce usando la regla 24 (factor)


estado 13

    0 $accept: programa . $end

    $end  desplazar e ir al estado 37


estado 14

    1 programa: bloque .
    2 bloque: bloque . sentencia

    WHILE          desplazar e ir al estado 1
    IF             desplazar e ir al estado 2
    PUT            desplazar e ir al estado 3
    GET            desplazar e ir al estado 4
    DIM            desplazar e ir al estado 5
    CONTAR         desplazar e ir al estado 6
    PAR_ABIERTO    desplazar e ir al estado 7
    CONST_ENTERA   desplazar e ir al estado 8
    CONST_REAL     desplazar e ir al estado 9
    CONST_BINARIA  desplazar e ir al estado 10
    CONST_HEXA     desplazar e ir al estado 11
    ID             desplazar e ir al estado 12

    $default  reduce usando la regla 1 (programa)

    sentencia      ir al estado 38
    asignacion     ir al estado 16
    funcionContar  ir al estado 17
    expresion      ir al estado 18
    termino        ir al estado 19
    factor         ir al estado 20
    constante      ir al estado 21
    declaracion    ir al estado 22
    salida         ir al estado 23
    entrada        ir al estado 24
    bloqueWhile    ir al estado 25
    bloqueIf       ir al estado 26


estado 15

    3 bloque: sentencia .

    $default  reduce usando la regla 3 (bloque)


estado 16

    4 sentencia: asignacion . PUNTO_COMA

    PUNTO_COMA  desplazar e ir al estado 39


estado 17

   27 factor: funcionContar .

    $default  reduce usando la regla 27 (factor)


estado 18

   10 sentencia: expresion . PUNTO_COMA
   18 expresion: expresion . OP_SUMA termino
   19          | expresion . OP_RESTA termino

    PUNTO_COMA  desplazar e ir al estado 40
    OP_SUMA     desplazar e ir al estado 41
    OP_RESTA    desplazar e ir al estado 42


estado 19

   20 expresion: termino .
   21 termino: termino . OP_MULT factor
   22        | termino . OP_DIVISION factor

    OP_DIVISION  desplazar e ir al estado 43
    OP_MULT      desplazar e ir al estado 44

    $default  reduce usando la regla 20 (expresion)


estado 20

   23 termino: factor .

    $default  reduce usando la regla 23 (termino)


estado 21

   25 factor: constante .

    $default  reduce usando la regla 25 (factor)


estado 22

    5 sentencia: declaracion . PUNTO_COMA

    PUNTO_COMA  desplazar e ir al estado 45


estado 23

    6 sentencia: salida . PUNTO_COMA

    PUNTO_COMA  desplazar e ir al estado 46


estado 24

    7 sentencia: entrada . PUNTO_COMA

    PUNTO_COMA  desplazar e ir al estado 47


estado 25

    8 sentencia: bloqueWhile .

    $default  reduce usando la regla 8 (sentencia)


estado 26

    9 sentencia: bloqueIf .

    $default  reduce usando la regla 9 (sentencia)


estado 27

   41 bloqueWhile: WHILE PAR_ABIERTO . condicion PAR_CERRADO LLAVE_ABIERTO bloque LLAVE_CERRADO
   42            | WHILE PAR_ABIERTO . condicion PAR_CERRADO sentencia

    CONTAR         desplazar e ir al estado 6
    PAR_ABIERTO    desplazar e ir al estado 48
    OP_NOT         desplazar e ir al estado 49
    CONST_ENTERA   desplazar e ir al estado 8
    CONST_REAL     desplazar e ir al estado 9
    CONST_BINARIA  desplazar e ir al estado 10
    CONST_HEXA     desplazar e ir al estado 11
    ID             desplazar e ir al estado 34

    funcionContar  ir al estado 17
    expresion      ir al estado 50
    termino        ir al estado 19
    factor         ir al estado 20
    constante      ir al estado 21
    condicion      ir al estado 51
    expLogica      ir al estado 52


estado 28

   44 bloqueIf: IF PAR_ABIERTO . condicion PAR_CERRADO LLAVE_ABIERTO bloque LLAVE_CERRADO ELSE $@2 LLAVE_ABIERTO bloque LLAVE_CERRADO
   45         | IF PAR_ABIERTO . condicion PAR_CERRADO sentencia
   46         | IF PAR_ABIERTO . condicion PAR_CERRADO LLAVE_ABIERTO bloque LLAVE_CERRADO

    CONTAR         desplazar e ir al estado 6
    PAR_ABIERTO    desplazar e ir al estado 48
    OP_NOT         desplazar e ir al estado 49
    CONST_ENTERA   desplazar e ir al estado 8
    CONST_REAL     desplazar e ir al estado 9
    CONST_BINARIA  desplazar e ir al estado 10
    CONST_HEXA     desplazar e ir al estado 11
    ID             desplazar e ir al estado 34

    funcionContar  ir al estado 17
    expresion      ir al estado 50
    termino        ir al estado 19
    factor         ir al estado 20
    constante      ir al estado 21
    condicion      ir al estado 53
    expLogica      ir al estado 52


estado 29

   39 salida: PUT CONST_STRING .

    $default  reduce usando la regla 39 (salida)


estado 30

   38 salida: PUT ID .

    $default  reduce usando la regla 38 (salida)


estado 31

   40 entrada: GET ID .

    $default  reduce usando la regla 40 (entrada)


estado 32

   32 declaracion: DIM OP_LE . lista_declaracion OP_GE

    ID  desplazar e ir al estado 54

    lista_declaracion  ir al estado 55


estado 33

   14 funcionContar: CONTAR PAR_ABIERTO . expresion $@1 PUNTO_COMA listaConstantes PAR_CERRADO

    CONTAR         desplazar e ir al estado 6
    PAR_ABIERTO    desplazar e ir al estado 7
    CONST_ENTERA   desplazar e ir al estado 8
    CONST_REAL     desplazar e ir al estado 9
    CONST_BINARIA  desplazar e ir al estado 10
    CONST_HEXA     desplazar e ir al estado 11
    ID             desplazar e ir al estado 34

    funcionContar  ir al estado 17
    expresion      ir al estado 56
    termino        ir al estado 19
    factor         ir al estado 20
    constante      ir al estado 21


estado 34

   24 factor: ID .

    $default  reduce usando la regla 24 (factor)


estado 35

   18 expresion: expresion . OP_SUMA termino
   19          | expresion . OP_RESTA termino
   26 factor: PAR_ABIERTO expresion . PAR_CERRADO

    PAR_CERRADO  desplazar e ir al estado 57
    OP_SUMA      desplazar e ir al estado 41
    OP_RESTA     desplazar e ir al estado 42


estado 36

   11 asignacion: ID OP_ASIGNACION . expresion
   12           | ID OP_ASIGNACION . CONST_STRING

    CONTAR         desplazar e ir al estado 6
    PAR_ABIERTO    desplazar e ir al estado 7
    CONST_ENTERA   desplazar e ir al estado 8
    CONST_REAL     desplazar e ir al estado 9
    CONST_STRING   desplazar e ir al estado 58
    CONST_BINARIA  desplazar e ir al estado 10
    CONST_HEXA     desplazar e ir al estado 11
    ID             desplazar e ir al estado 34

    funcionContar  ir al estado 17
    expresion      ir al estado 59
    termino        ir al estado 19
    factor         ir al estado 20
    constante      ir al estado 21


estado 37

    0 $accept: programa $end .

    $default  aceptar


estado 38

    2 bloque: bloque sentencia .

    $default  reduce usando la regla 2 (bloque)


estado 39

    4 sentencia: asignacion PUNTO_COMA .

    $default  reduce usando la regla 4 (sentencia)


estado 40

   10 sentencia: expresion PUNTO_COMA .

    $default  reduce usando la regla 10 (sentencia)


estado 41

   18 expresion: expresion OP_SUMA . termino

    CONTAR         desplazar e ir al estado 6
    PAR_ABIERTO    desplazar e ir al estado 7
    CONST_ENTERA   desplazar e ir al estado 8
    CONST_REAL     desplazar e ir al estado 9
    CONST_BINARIA  desplazar e ir al estado 10
    CONST_HEXA     desplazar e ir al estado 11
    ID             desplazar e ir al estado 34

    funcionContar  ir al estado 17
    termino        ir al estado 60
    factor         ir al estado 20
    constante      ir al estado 21


estado 42

   19 expresion: expresion OP_RESTA . termino

    CONTAR         desplazar e ir al estado 6
    PAR_ABIERTO    desplazar e ir al estado 7
    CONST_ENTERA   desplazar e ir al estado 8
    CONST_REAL     desplazar e ir al estado 9
    CONST_BINARIA  desplazar e ir al estado 10
    CONST_HEXA     desplazar e ir al estado 11
    ID             desplazar e ir al estado 34

    funcionContar  ir al estado 17
    termino        ir al estado 61
    factor         ir al estado 20
    constante      ir al estado 21


estado 43

   22 termino: termino OP_DIVISION . factor

    CONTAR         desplazar e ir al estado 6
    PAR_ABIERTO    desplazar e ir al estado 7
    CONST_ENTERA   desplazar e ir al estado 8
    CONST_REAL     desplazar e ir al estado 9
    CONST_BINARIA  desplazar e ir al estado 10
    CONST_HEXA     desplazar e ir al estado 11
    ID             desplazar e ir al estado 34

    funcionContar  ir al estado 17
    factor         ir al estado 62
    constante      ir al estado 21


estado 44

   21 termino: termino OP_MULT . factor

    CONTAR         desplazar e ir al estado 6
    PAR_ABIERTO    desplazar e ir al estado 7
    CONST_ENTERA   desplazar e ir al estado 8
    CONST_REAL     desplazar e ir al estado 9
    CONST_BINARIA  desplazar e ir al estado 10
    CONST_HEXA     desplazar e ir al estado 11
    ID             desplazar e ir al estado 34

    funcionContar  ir al estado 17
    factor         ir al estado 63
    constante      ir al estado 21


estado 45

    5 sentencia: declaracion PUNTO_COMA .

    $default  reduce usando la regla 5 (sentencia)


estado 46

    6 sentencia: salida PUNTO_COMA .

    $default  reduce usando la regla 6 (sentencia)


estado 47

    7 sentencia: entrada PUNTO_COMA .

    $default  reduce usando la regla 7 (sentencia)


estado 48

   26 factor: PAR_ABIERTO . expresion PAR_CERRADO
   52 expLogica: PAR_ABIERTO . condicion PAR_CERRADO

    CONTAR         desplazar e ir al estado 6
    PAR_ABIERTO    desplazar e ir al estado 48
    OP_NOT         desplazar e ir al estado 49
    CONST_ENTERA   desplazar e ir al estado 8
    CONST_REAL     desplazar e ir al estado 9
    CONST_BINARIA  desplazar e ir al estado 10
    CONST_HEXA     desplazar e ir al estado 11
    ID             desplazar e ir al estado 34

    funcionContar  ir al estado 17
    expresion      ir al estado 64
    termino        ir al estado 19
    factor         ir al estado 20
    constante      ir al estado 21
    condicion      ir al estado 65
    expLogica      ir al estado 52


estado 49

   50 condicion: OP_NOT . expLogica

    CONTAR         desplazar e ir al estado 6
    PAR_ABIERTO    desplazar e ir al estado 48
    CONST_ENTERA   desplazar e ir al estado 8
    CONST_REAL     desplazar e ir al estado 9
    CONST_BINARIA  desplazar e ir al estado 10
    CONST_HEXA     desplazar e ir al estado 11
    ID             desplazar e ir al estado 34

    funcionContar  ir al estado 17
    expresion      ir al estado 50
    termino        ir al estado 19
    factor         ir al estado 20
    constante      ir al estado 21
    expLogica      ir al estado 66


estado 50

   18 expresion: expresion . OP_SUMA termino
   19          | expresion . OP_RESTA termino
   54 expLogica: expresion . $@4 comparador expresion

    OP_SUMA   desplazar e ir al estado 41
    OP_RESTA  desplazar e ir al estado 42

    $default  reduce usando la regla 53 ($@4)

    $@4  ir al estado 67


estado 51

   41 bloqueWhile: WHILE PAR_ABIERTO condicion . PAR_CERRADO LLAVE_ABIERTO bloque LLAVE_CERRADO
   42            | WHILE PAR_ABIERTO condicion . PAR_CERRADO sentencia

    PAR_CERRADO  desplazar e ir al estado 68


estado 52

   47 condicion: expLogica . OP_AND expLogica
   49          | expLogica . $@3 OP_OR expLogica
   51          | expLogica .

    OP_AND  desplazar e ir al estado 69

    PAR_CERRADO  reduce usando la regla 51 (condicion)
    $default     reduce usando la regla 48 ($@3)

    $@3  ir al estado 70


estado 53

   44 bloqueIf: IF PAR_ABIERTO condicion . PAR_CERRADO LLAVE_ABIERTO bloque LLAVE_CERRADO ELSE $@2 LLAVE_ABIERTO bloque LLAVE_CERRADO
   45         | IF PAR_ABIERTO condicion . PAR_CERRADO sentencia
   46         | IF PAR_ABIERTO condicion . PAR_CERRADO LLAVE_ABIERTO bloque LLAVE_CERRADO

    PAR_CERRADO  desplazar e ir al estado 71


estado 54

   33 lista_declaracion: ID . COMA lista_declaracion COMA tipoDeDato
   34                  | ID . OP_GE AS OP_LE tipoDeDato

    COMA   desplazar e ir al estado 72
    OP_GE  desplazar e ir al estado 73


estado 55

   32 declaracion: DIM OP_LE lista_declaracion . OP_GE

    OP_GE  desplazar e ir al estado 74


estado 56

   14 funcionContar: CONTAR PAR_ABIERTO expresion . $@1 PUNTO_COMA listaConstantes PAR_CERRADO
   18 expresion: expresion . OP_SUMA termino
   19          | expresion . OP_RESTA termino

    OP_SUMA   desplazar e ir al estado 41
    OP_RESTA  desplazar e ir al estado 42

    $default  reduce usando la regla 13 ($@1)

    $@1  ir al estado 75


estado 57

   26 factor: PAR_ABIERTO expresion PAR_CERRADO .

    $default  reduce usando la regla 26 (factor)


estado 58

   12 asignacion: ID OP_ASIGNACION CONST_STRING .

    $default  reduce usando la regla 12 (asignacion)


estado 59

   11 asignacion: ID OP_ASIGNACION expresion .
   18 expresion: expresion . OP_SUMA termino
   19          | expresion . OP_RESTA termino

    OP_SUMA   desplazar e ir al estado 41
    OP_RESTA  desplazar e ir al estado 42

    $default  reduce usando la regla 11 (asignacion)


estado 60

   18 expresion: expresion OP_SUMA termino .
   21 termino: termino . OP_MULT factor
   22        | termino . OP_DIVISION factor

    OP_DIVISION  desplazar e ir al estado 43
    OP_MULT      desplazar e ir al estado 44

    $default  reduce usando la regla 18 (expresion)


estado 61

   19 expresion: expresion OP_RESTA termino .
   21 termino: termino . OP_MULT factor
   22        | termino . OP_DIVISION factor

    OP_DIVISION  desplazar e ir al estado 43
    OP_MULT      desplazar e ir al estado 44

    $default  reduce usando la regla 19 (expresion)


estado 62

   22 termino: termino OP_DIVISION factor .

    $default  reduce usando la regla 22 (termino)


estado 63

   21 termino: termino OP_MULT factor .

    $default  reduce usando la regla 21 (termino)


estado 64

   18 expresion: expresion . OP_SUMA termino
   19          | expresion . OP_RESTA termino
   26 factor: PAR_ABIERTO expresion . PAR_CERRADO
   54 expLogica: expresion . $@4 comparador expresion

    PAR_CERRADO  desplazar e ir al estado 57
    OP_SUMA      desplazar e ir al estado 41
    OP_RESTA     desplazar e ir al estado 42

    $default  reduce usando la regla 53 ($@4)

    $@4  ir al estado 67


estado 65

   52 expLogica: PAR_ABIERTO condicion . PAR_CERRADO

    PAR_CERRADO  desplazar e ir al estado 76


estado 66

   50 condicion: OP_NOT expLogica .

    $default  reduce usando la regla 50 (condicion)


estado 67

   54 expLogica: expresion $@4 . comparador expresion

    OP_LE     desplazar e ir al estado 77
    OP_LEQ    desplazar e ir al estado 78
    OP_GE     desplazar e ir al estado 79
    OP_GEQ    desplazar e ir al estado 80
    OP_NE     desplazar e ir al estado 81
    OP_IGUAL  desplazar e ir al estado 82

    comparador  ir al estado 83


estado 68

   41 bloqueWhile: WHILE PAR_ABIERTO condicion PAR_CERRADO . LLAVE_ABIERTO bloque LLAVE_CERRADO
   42            | WHILE PAR_ABIERTO condicion PAR_CERRADO . sentencia

    WHILE          desplazar e ir al estado 1
    IF             desplazar e ir al estado 2
    PUT            desplazar e ir al estado 3
    GET            desplazar e ir al estado 4
    DIM            desplazar e ir al estado 5
    CONTAR         desplazar e ir al estado 6
    LLAVE_ABIERTO  desplazar e ir al estado 84
    PAR_ABIERTO    desplazar e ir al estado 7
    CONST_ENTERA   desplazar e ir al estado 8
    CONST_REAL     desplazar e ir al estado 9
    CONST_BINARIA  desplazar e ir al estado 10
    CONST_HEXA     desplazar e ir al estado 11
    ID             desplazar e ir al estado 12

    sentencia      ir al estado 85
    asignacion     ir al estado 16
    funcionContar  ir al estado 17
    expresion      ir al estado 18
    termino        ir al estado 19
    factor         ir al estado 20
    constante      ir al estado 21
    declaracion    ir al estado 22
    salida         ir al estado 23
    entrada        ir al estado 24
    bloqueWhile    ir al estado 25
    bloqueIf       ir al estado 26


estado 69

   47 condicion: expLogica OP_AND . expLogica

    CONTAR         desplazar e ir al estado 6
    PAR_ABIERTO    desplazar e ir al estado 48
    CONST_ENTERA   desplazar e ir al estado 8
    CONST_REAL     desplazar e ir al estado 9
    CONST_BINARIA  desplazar e ir al estado 10
    CONST_HEXA     desplazar e ir al estado 11
    ID             desplazar e ir al estado 34

    funcionContar  ir al estado 17
    expresion      ir al estado 50
    termino        ir al estado 19
    factor         ir al estado 20
    constante      ir al estado 21
    expLogica      ir al estado 86


estado 70

   49 condicion: expLogica $@3 . OP_OR expLogica

    OP_OR  desplazar e ir al estado 87


estado 71

   44 bloqueIf: IF PAR_ABIERTO condicion PAR_CERRADO . LLAVE_ABIERTO bloque LLAVE_CERRADO ELSE $@2 LLAVE_ABIERTO bloque LLAVE_CERRADO
   45         | IF PAR_ABIERTO condicion PAR_CERRADO . sentencia
   46         | IF PAR_ABIERTO condicion PAR_CERRADO . LLAVE_ABIERTO bloque LLAVE_CERRADO

    WHILE          desplazar e ir al estado 1
    IF             desplazar e ir al estado 2
    PUT            desplazar e ir al estado 3
    GET            desplazar e ir al estado 4
    DIM            desplazar e ir al estado 5
    CONTAR         desplazar e ir al estado 6
    LLAVE_ABIERTO  desplazar e ir al estado 88
    PAR_ABIERTO    desplazar e ir al estado 7
    CONST_ENTERA   desplazar e ir al estado 8
    CONST_REAL     desplazar e ir al estado 9
    CONST_BINARIA  desplazar e ir al estado 10
    CONST_HEXA     desplazar e ir al estado 11
    ID             desplazar e ir al estado 12

    sentencia      ir al estado 89
    asignacion     ir al estado 16
    funcionContar  ir al estado 17
    expresion      ir al estado 18
    termino        ir al estado 19
    factor         ir al estado 20
    constante      ir al estado 21
    declaracion    ir al estado 22
    salida         ir al estado 23
    entrada        ir al estado 24
    bloqueWhile    ir al estado 25
    bloqueIf       ir al estado 26


estado 72

   33 lista_declaracion: ID COMA . lista_declaracion COMA tipoDeDato

    ID  desplazar e ir al estado 54

    lista_declaracion  ir al estado 90


estado 73

   34 lista_declaracion: ID OP_GE . AS OP_LE tipoDeDato

    AS  desplazar e ir al estado 91


estado 74

   32 declaracion: DIM OP_LE lista_declaracion OP_GE .

    $default  reduce usando la regla 32 (declaracion)


estado 75

   14 funcionContar: CONTAR PAR_ABIERTO expresion $@1 . PUNTO_COMA listaConstantes PAR_CERRADO

    PUNTO_COMA  desplazar e ir al estado 92


estado 76

   52 expLogica: PAR_ABIERTO condicion PAR_CERRADO .

    $default  reduce usando la regla 52 (expLogica)


estado 77

   56 comparador: OP_LE .

    $default  reduce usando la regla 56 (comparador)


estado 78

   57 comparador: OP_LEQ .

    $default  reduce usando la regla 57 (comparador)


estado 79

   58 comparador: OP_GE .

    $default  reduce usando la regla 58 (comparador)


estado 80

   59 comparador: OP_GEQ .

    $default  reduce usando la regla 59 (comparador)


estado 81

   60 comparador: OP_NE .

    $default  reduce usando la regla 60 (comparador)


estado 82

   55 comparador: OP_IGUAL .

    $default  reduce usando la regla 55 (comparador)


estado 83

   54 expLogica: expresion $@4 comparador . expresion

    CONTAR         desplazar e ir al estado 6
    PAR_ABIERTO    desplazar e ir al estado 7
    CONST_ENTERA   desplazar e ir al estado 8
    CONST_REAL     desplazar e ir al estado 9
    CONST_BINARIA  desplazar e ir al estado 10
    CONST_HEXA     desplazar e ir al estado 11
    ID             desplazar e ir al estado 34

    funcionContar  ir al estado 17
    expresion      ir al estado 93
    termino        ir al estado 19
    factor         ir al estado 20
    constante      ir al estado 21


estado 84

   41 bloqueWhile: WHILE PAR_ABIERTO condicion PAR_CERRADO LLAVE_ABIERTO . bloque LLAVE_CERRADO

    WHILE          desplazar e ir al estado 1
    IF             desplazar e ir al estado 2
    PUT            desplazar e ir al estado 3
    GET            desplazar e ir al estado 4
    DIM            desplazar e ir al estado 5
    CONTAR         desplazar e ir al estado 6
    PAR_ABIERTO    desplazar e ir al estado 7
    CONST_ENTERA   desplazar e ir al estado 8
    CONST_REAL     desplazar e ir al estado 9
    CONST_BINARIA  desplazar e ir al estado 10
    CONST_HEXA     desplazar e ir al estado 11
    ID             desplazar e ir al estado 12

    bloque         ir al estado 94
    sentencia      ir al estado 15
    asignacion     ir al estado 16
    funcionContar  ir al estado 17
    expresion      ir al estado 18
    termino        ir al estado 19
    factor         ir al estado 20
    constante      ir al estado 21
    declaracion    ir al estado 22
    salida         ir al estado 23
    entrada        ir al estado 24
    bloqueWhile    ir al estado 25
    bloqueIf       ir al estado 26


estado 85

   42 bloqueWhile: WHILE PAR_ABIERTO condicion PAR_CERRADO sentencia .

    $default  reduce usando la regla 42 (bloqueWhile)


estado 86

   47 condicion: expLogica OP_AND expLogica .

    $default  reduce usando la regla 47 (condicion)


estado 87

   49 condicion: expLogica $@3 OP_OR . expLogica

    CONTAR         desplazar e ir al estado 6
    PAR_ABIERTO    desplazar e ir al estado 48
    CONST_ENTERA   desplazar e ir al estado 8
    CONST_REAL     desplazar e ir al estado 9
    CONST_BINARIA  desplazar e ir al estado 10
    CONST_HEXA     desplazar e ir al estado 11
    ID             desplazar e ir al estado 34

    funcionContar  ir al estado 17
    expresion      ir al estado 50
    termino        ir al estado 19
    factor         ir al estado 20
    constante      ir al estado 21
    expLogica      ir al estado 95


estado 88

   44 bloqueIf: IF PAR_ABIERTO condicion PAR_CERRADO LLAVE_ABIERTO . bloque LLAVE_CERRADO ELSE $@2 LLAVE_ABIERTO bloque LLAVE_CERRADO
   46         | IF PAR_ABIERTO condicion PAR_CERRADO LLAVE_ABIERTO . bloque LLAVE_CERRADO

    WHILE          desplazar e ir al estado 1
    IF             desplazar e ir al estado 2
    PUT            desplazar e ir al estado 3
    GET            desplazar e ir al estado 4
    DIM            desplazar e ir al estado 5
    CONTAR         desplazar e ir al estado 6
    PAR_ABIERTO    desplazar e ir al estado 7
    CONST_ENTERA   desplazar e ir al estado 8
    CONST_REAL     desplazar e ir al estado 9
    CONST_BINARIA  desplazar e ir al estado 10
    CONST_HEXA     desplazar e ir al estado 11
    ID             desplazar e ir al estado 12

    bloque         ir al estado 96
    sentencia      ir al estado 15
    asignacion     ir al estado 16
    funcionContar  ir al estado 17
    expresion      ir al estado 18
    termino        ir al estado 19
    factor         ir al estado 20
    constante      ir al estado 21
    declaracion    ir al estado 22
    salida         ir al estado 23
    entrada        ir al estado 24
    bloqueWhile    ir al estado 25
    bloqueIf       ir al estado 26


estado 89

   45 bloqueIf: IF PAR_ABIERTO condicion PAR_CERRADO sentencia .

    $default  reduce usando la regla 45 (bloqueIf)


estado 90

   33 lista_declaracion: ID COMA lista_declaracion . COMA tipoDeDato

    COMA  desplazar e ir al estado 97


estado 91

   34 lista_declaracion: ID OP_GE AS . OP_LE tipoDeDato

    OP_LE  desplazar e ir al estado 98


estado 92

   14 funcionContar: CONTAR PAR_ABIERTO expresion $@1 PUNTO_COMA . listaConstantes PAR_CERRADO

    COR_ABIERTO  desplazar e ir al estado 99

    listaConstantes  ir al estado 100


estado 93

   18 expresion: expresion . OP_SUMA termino
   19          | expresion . OP_RESTA termino
   54 expLogica: expresion $@4 comparador expresion .

    OP_SUMA   desplazar e ir al estado 41
    OP_RESTA  desplazar e ir al estado 42

    $default  reduce usando la regla 54 (expLogica)


estado 94

    2 bloque: bloque . sentencia
   41 bloqueWhile: WHILE PAR_ABIERTO condicion PAR_CERRADO LLAVE_ABIERTO bloque . LLAVE_CERRADO

    WHILE          desplazar e ir al estado 1
    IF             desplazar e ir al estado 2
    PUT            desplazar e ir al estado 3
    GET            desplazar e ir al estado 4
    DIM            desplazar e ir al estado 5
    CONTAR         desplazar e ir al estado 6
    LLAVE_CERRADO  desplazar e ir al estado 101
    PAR_ABIERTO    desplazar e ir al estado 7
    CONST_ENTERA   desplazar e ir al estado 8
    CONST_REAL     desplazar e ir al estado 9
    CONST_BINARIA  desplazar e ir al estado 10
    CONST_HEXA     desplazar e ir al estado 11
    ID             desplazar e ir al estado 12

    sentencia      ir al estado 38
    asignacion     ir al estado 16
    funcionContar  ir al estado 17
    expresion      ir al estado 18
    termino        ir al estado 19
    factor         ir al estado 20
    constante      ir al estado 21
    declaracion    ir al estado 22
    salida         ir al estado 23
    entrada        ir al estado 24
    bloqueWhile    ir al estado 25
    bloqueIf       ir al estado 26


estado 95

   49 condicion: expLogica $@3 OP_OR expLogica .

    $default  reduce usando la regla 49 (condicion)


estado 96

    2 bloque: bloque . sentencia
   44 bloqueIf: IF PAR_ABIERTO condicion PAR_CERRADO LLAVE_ABIERTO bloque . LLAVE_CERRADO ELSE $@2 LLAVE_ABIERTO bloque LLAVE_CERRADO
   46         | IF PAR_ABIERTO condicion PAR_CERRADO LLAVE_ABIERTO bloque . LLAVE_CERRADO

    WHILE          desplazar e ir al estado 1
    IF             desplazar e ir al estado 2
    PUT            desplazar e ir al estado 3
    GET            desplazar e ir al estado 4
    DIM            desplazar e ir al estado 5
    CONTAR         desplazar e ir al estado 6
    LLAVE_CERRADO  desplazar e ir al estado 102
    PAR_ABIERTO    desplazar e ir al estado 7
    CONST_ENTERA   desplazar e ir al estado 8
    CONST_REAL     desplazar e ir al estado 9
    CONST_BINARIA  desplazar e ir al estado 10
    CONST_HEXA     desplazar e ir al estado 11
    ID             desplazar e ir al estado 12

    sentencia      ir al estado 38
    asignacion     ir al estado 16
    funcionContar  ir al estado 17
    expresion      ir al estado 18
    termino        ir al estado 19
    factor         ir al estado 20
    constante      ir al estado 21
    declaracion    ir al estado 22
    salida         ir al estado 23
    entrada        ir al estado 24
    bloqueWhile    ir al estado 25
    bloqueIf       ir al estado 26


estado 97

   33 lista_declaracion: ID COMA lista_declaracion COMA . tipoDeDato

    INTEGER  desplazar e ir al estado 103
    FLOAT    desplazar e ir al estado 104
    STRING   desplazar e ir al estado 105

    tipoDeDato  ir al estado 106


estado 98

   34 lista_declaracion: ID OP_GE AS OP_LE . tipoDeDato

    INTEGER  desplazar e ir al estado 103
    FLOAT    desplazar e ir al estado 104
    STRING   desplazar e ir al estado 105

    tipoDeDato  ir al estado 107


estado 99

   15 listaConstantes: COR_ABIERTO . constantes COR_CERRADO

    CONST_ENTERA   desplazar e ir al estado 8
    CONST_REAL     desplazar e ir al estado 9
    CONST_BINARIA  desplazar e ir al estado 10
    CONST_HEXA     desplazar e ir al estado 11

    constantes  ir al estado 108
    constante   ir al estado 109


estado 100

   14 funcionContar: CONTAR PAR_ABIERTO expresion $@1 PUNTO_COMA listaConstantes . PAR_CERRADO

    PAR_CERRADO  desplazar e ir al estado 110


estado 101

   41 bloqueWhile: WHILE PAR_ABIERTO condicion PAR_CERRADO LLAVE_ABIERTO bloque LLAVE_CERRADO .

    $default  reduce usando la regla 41 (bloqueWhile)


estado 102

   44 bloqueIf: IF PAR_ABIERTO condicion PAR_CERRADO LLAVE_ABIERTO bloque LLAVE_CERRADO . ELSE $@2 LLAVE_ABIERTO bloque LLAVE_CERRADO
   46         | IF PAR_ABIERTO condicion PAR_CERRADO LLAVE_ABIERTO bloque LLAVE_CERRADO .

    ELSE  desplazar e ir al estado 111

    $default  reduce usando la regla 46 (bloqueIf)


estado 103

   36 tipoDeDato: INTEGER .

    $default  reduce usando la regla 36 (tipoDeDato)


estado 104

   35 tipoDeDato: FLOAT .

    $default  reduce usando la regla 35 (tipoDeDato)


estado 105

   37 tipoDeDato: STRING .

    $default  reduce usando la regla 37 (tipoDeDato)


estado 106

   33 lista_declaracion: ID COMA lista_declaracion COMA tipoDeDato .

    $default  reduce usando la regla 33 (lista_declaracion)


estado 107

   34 lista_declaracion: ID OP_GE AS OP_LE tipoDeDato .

    $default  reduce usando la regla 34 (lista_declaracion)


estado 108

   15 listaConstantes: COR_ABIERTO constantes . COR_CERRADO
   16 constantes: constantes . COMA constante

    COR_CERRADO  desplazar e ir al estado 112
    COMA         desplazar e ir al estado 113


estado 109

   17 constantes: constante .

    $default  reduce usando la regla 17 (constantes)


estado 110

   14 funcionContar: CONTAR PAR_ABIERTO expresion $@1 PUNTO_COMA listaConstantes PAR_CERRADO .

    $default  reduce usando la regla 14 (funcionContar)


estado 111

   44 bloqueIf: IF PAR_ABIERTO condicion PAR_CERRADO LLAVE_ABIERTO bloque LLAVE_CERRADO ELSE . $@2 LLAVE_ABIERTO bloque LLAVE_CERRADO

    $default  reduce usando la regla 43 ($@2)

    $@2  ir al estado 114


estado 112

   15 listaConstantes: COR_ABIERTO constantes COR_CERRADO .

    $default  reduce usando la regla 15 (listaConstantes)


estado 113

   16 constantes: constantes COMA . constante

    CONST_ENTERA   desplazar e ir al estado 8
    CONST_REAL     desplazar e ir al estado 9
    CONST_BINARIA  desplazar e ir al estado 10
    CONST_HEXA     desplazar e ir al estado 11

    constante  ir al estado 115


estado 114

   44 bloqueIf: IF PAR_ABIERTO condicion PAR_CERRADO LLAVE_ABIERTO bloque LLAVE_CERRADO ELSE $@2 . LLAVE_ABIERTO bloque LLAVE_CERRADO

    LLAVE_ABIERTO  desplazar e ir al estado 116


estado 115

   16 constantes: constantes COMA constante .

    $default  reduce usando la regla 16 (constantes)


estado 116

   44 bloqueIf: IF PAR_ABIERTO condicion PAR_CERRADO LLAVE_ABIERTO bloque LLAVE_CERRADO ELSE $@2 LLAVE_ABIERTO . bloque LLAVE_CERRADO

    WHILE          desplazar e ir al estado 1
    IF             desplazar e ir al estado 2
    PUT            desplazar e ir al estado 3
    GET            desplazar e ir al estado 4
    DIM            desplazar e ir al estado 5
    CONTAR         desplazar e ir al estado 6
    PAR_ABIERTO    desplazar e ir al estado 7
    CONST_ENTERA   desplazar e ir al estado 8
    CONST_REAL     desplazar e ir al estado 9
    CONST_BINARIA  desplazar e ir al estado 10
    CONST_HEXA     desplazar e ir al estado 11
    ID             desplazar e ir al estado 12

    bloque         ir al estado 117
    sentencia      ir al estado 15
    asignacion     ir al estado 16
    funcionContar  ir al estado 17
    expresion      ir al estado 18
    termino        ir al estado 19
    factor         ir al estado 20
    constante      ir al estado 21
    declaracion    ir al estado 22
    salida         ir al estado 23
    entrada        ir al estado 24
    bloqueWhile    ir al estado 25
    bloqueIf       ir al estado 26


estado 117

    2 bloque: bloque . sentencia
   44 bloqueIf: IF PAR_ABIERTO condicion PAR_CERRADO LLAVE_ABIERTO bloque LLAVE_CERRADO ELSE $@2 LLAVE_ABIERTO bloque . LLAVE_CERRADO

    WHILE          desplazar e ir al estado 1
    IF             desplazar e ir al estado 2
    PUT            desplazar e ir al estado 3
    GET            desplazar e ir al estado 4
    DIM            desplazar e ir al estado 5
    CONTAR         desplazar e ir al estado 6
    LLAVE_CERRADO  desplazar e ir al estado 118
    PAR_ABIERTO    desplazar e ir al estado 7
    CONST_ENTERA   desplazar e ir al estado 8
    CONST_REAL     desplazar e ir al estado 9
    CONST_BINARIA  desplazar e ir al estado 10
    CONST_HEXA     desplazar e ir al estado 11
    ID             desplazar e ir al estado 12

    sentencia      ir al estado 38
    asignacion     ir al estado 16
    funcionContar  ir al estado 17
    expresion      ir al estado 18
    termino        ir al estado 19
    factor         ir al estado 20
    constante      ir al estado 21
    declaracion    ir al estado 22
    salida         ir al estado 23
    entrada        ir al estado 24
    bloqueWhile    ir al estado 25
    bloqueIf       ir al estado 26


estado 118

   44 bloqueIf: IF PAR_ABIERTO condicion PAR_CERRADO LLAVE_ABIERTO bloque LLAVE_CERRADO ELSE $@2 LLAVE_ABIERTO bloque LLAVE_CERRADO .

    $default  reduce usando la regla 44 (bloqueIf)
