Estado 51 conflictos: 1 desplazamiento(s)/reducción(ones)


Gramática

    0 $accept: programa $end

    1 programa: bloque

    2 bloque: sentencia bloque
    3       | sentencia

    4 sentencia: asignacion PUNTO_COMA
    5          | declaracion PUNTO_COMA
    6          | salida PUNTO_COMA
    7          | entrada PUNTO_COMA
    8          | bloqueWhile
    9          | bloqueIf

   10 asignacion: ID OP_ASIGNACION cuenta

   11 cuenta: termino OP_SUMA cuenta
   12       | termino OP_RESTA cuenta
   13       | termino

   14 termino: factor OP_MULT termino
   15        | factor OP_DIVISION termino
   16        | factor

   17 factor: PAR_ABIERTO cuenta PAR_CERRADO
   18       | ID
   19       | CONST_BINARIA
   20       | CONST_HEXA
   21       | CONST_REAL
   22       | CONST_ENTERA
   23       | funcionContar

   24 declaracion: DIM listaVariables AS listaTipos

   25 listaVariables: OP_LE variables OP_GE

   26 variables: ID COMA variables
   27          | ID

   28 listaTipos: OP_LE tipos OP_GE

   29 tipos: tipoDeDato COMA tipos
   30      | tipoDeDato

   31 tipoDeDato: FLOAT
   32           | INTEGER
   33           | STRING

   34 salida: PUT ID
   35       | PUT CONST_STRING

   36 entrada: GET ID

   37 bloqueWhile: WHILE PAR_ABIERTO condicion PAR_CERRADO LLAVE_ABIERTO bloque LLAVE_CERRADO
   38            | WHILE PAR_ABIERTO condicion PAR_CERRADO sentencia

   39 bloqueIf: IF PAR_ABIERTO condicion PAR_CERRADO LLAVE_ABIERTO bloque LLAVE_CERRADO resto_if
   40         | IF PAR_ABIERTO condicion PAR_CERRADO sentencia

   41 resto_if: ELSE LLAVE_ABIERTO bloque LLAVE_CERRADO
   42         | sentencia

   43 condicion: expLogica OP_AND expLogica
   44          | expLogica OP_OR expLogica
   45          | OP_NOT expLogica
   46          | expLogica

   47 expLogica: PAR_ABIERTO condicion PAR_CERRADO
   48          | cuenta comparador cuenta
   49          | cuenta

   50 comparador: OP_IGUAL
   51           | OP_LE
   52           | OP_LEQ
   53           | OP_GE
   54           | OP_GEQ
   55           | OP_NE

   56 funcionContar: CONTAR PAR_ABIERTO cuenta PUNTO_COMA listaFactores PAR_CERRADO

   57 listaFactores: COR_ABIERTO factores COR_CERRADO

   58 factores: factor COMA factores
   59         | factor


Terminales con las reglas donde aparecen

$end (0) 0
error (256)
WHILE (258) 37 38
IF (259) 39 40
ELSE (260) 41
PUT (261) 34 35
GET (262) 36
DIM (263) 24
AS (264) 24
CONTAR (265) 56
INTEGER (266) 32
FLOAT (267) 31
STRING (268) 33
LLAVE_ABIERTO (269) 37 39 41
LLAVE_CERRADO (270) 37 39 41
PAR_ABIERTO (271) 17 37 38 39 40 47 56
PAR_CERRADO (272) 17 37 38 39 40 47 56
COR_ABIERTO (273) 57
COR_CERRADO (274) 57
PUNTO_COMA (275) 4 5 6 7 56
COMA (276) 26 29 58
OP_ASIGNACION (277) 10
OP_SUMA (278) 11
OP_RESTA (279) 12
OP_DIVISION (280) 15
OP_MULT (281) 14
OP_LE (282) 25 28 51
OP_LEQ (283) 52
OP_GE (284) 25 28 53
OP_GEQ (285) 54
OP_NE (286) 55
OP_IGUAL (287) 50
OP_AND (288) 43
OP_OR (289) 44
OP_NOT (290) 45
CONST_ENTERA (291) 22
CONST_REAL (292) 21
CONST_STRING (293) 35
CONST_BINARIA (294) 19
CONST_HEXA (295) 20
ID (296) 10 18 26 27 34 36


No terminales con las reglas donde aparecen

$accept (42)
    en la izquierda: 0
programa (43)
    en la izquierda: 1, en la derecha: 0
bloque (44)
    en la izquierda: 2 3, en la derecha: 1 2 37 39 41
sentencia (45)
    en la izquierda: 4 5 6 7 8 9, en la derecha: 2 3 38 40 42
asignacion (46)
    en la izquierda: 10, en la derecha: 4
cuenta (47)
    en la izquierda: 11 12 13, en la derecha: 10 11 12 17 48 49 56
termino (48)
    en la izquierda: 14 15 16, en la derecha: 11 12 13 14 15
factor (49)
    en la izquierda: 17 18 19 20 21 22 23, en la derecha: 14 15 16
    58 59
declaracion (50)
    en la izquierda: 24, en la derecha: 5
listaVariables (51)
    en la izquierda: 25, en la derecha: 24
variables (52)
    en la izquierda: 26 27, en la derecha: 25 26
listaTipos (53)
    en la izquierda: 28, en la derecha: 24
tipos (54)
    en la izquierda: 29 30, en la derecha: 28 29
tipoDeDato (55)
    en la izquierda: 31 32 33, en la derecha: 29 30
salida (56)
    en la izquierda: 34 35, en la derecha: 6
entrada (57)
    en la izquierda: 36, en la derecha: 7
bloqueWhile (58)
    en la izquierda: 37 38, en la derecha: 8
bloqueIf (59)
    en la izquierda: 39 40, en la derecha: 9
resto_if (60)
    en la izquierda: 41 42, en la derecha: 39
condicion (61)
    en la izquierda: 43 44 45 46, en la derecha: 37 38 39 40 47
expLogica (62)
    en la izquierda: 47 48 49, en la derecha: 43 44 45 46
comparador (63)
    en la izquierda: 50 51 52 53 54 55, en la derecha: 48
funcionContar (64)
    en la izquierda: 56, en la derecha: 23
listaFactores (65)
    en la izquierda: 57, en la derecha: 56
factores (66)
    en la izquierda: 58 59, en la derecha: 57 58


estado 0

    0 $accept: . programa $end

    WHILE  desplazar e ir al estado 1
    IF     desplazar e ir al estado 2
    PUT    desplazar e ir al estado 3
    GET    desplazar e ir al estado 4
    DIM    desplazar e ir al estado 5
    ID     desplazar e ir al estado 6

    programa     ir al estado 7
    bloque       ir al estado 8
    sentencia    ir al estado 9
    asignacion   ir al estado 10
    declaracion  ir al estado 11
    salida       ir al estado 12
    entrada      ir al estado 13
    bloqueWhile  ir al estado 14
    bloqueIf     ir al estado 15


estado 1

   37 bloqueWhile: WHILE . PAR_ABIERTO condicion PAR_CERRADO LLAVE_ABIERTO bloque LLAVE_CERRADO
   38            | WHILE . PAR_ABIERTO condicion PAR_CERRADO sentencia

    PAR_ABIERTO  desplazar e ir al estado 16


estado 2

   39 bloqueIf: IF . PAR_ABIERTO condicion PAR_CERRADO LLAVE_ABIERTO bloque LLAVE_CERRADO resto_if
   40         | IF . PAR_ABIERTO condicion PAR_CERRADO sentencia

    PAR_ABIERTO  desplazar e ir al estado 17


estado 3

   34 salida: PUT . ID
   35       | PUT . CONST_STRING

    CONST_STRING  desplazar e ir al estado 18
    ID            desplazar e ir al estado 19


estado 4

   36 entrada: GET . ID

    ID  desplazar e ir al estado 20


estado 5

   24 declaracion: DIM . listaVariables AS listaTipos

    OP_LE  desplazar e ir al estado 21

    listaVariables  ir al estado 22


estado 6

   10 asignacion: ID . OP_ASIGNACION cuenta

    OP_ASIGNACION  desplazar e ir al estado 23


estado 7

    0 $accept: programa . $end

    $end  desplazar e ir al estado 24


estado 8

    1 programa: bloque .

    $default  reduce usando la regla 1 (programa)


estado 9

    2 bloque: sentencia . bloque
    3       | sentencia .

    WHILE  desplazar e ir al estado 1
    IF     desplazar e ir al estado 2
    PUT    desplazar e ir al estado 3
    GET    desplazar e ir al estado 4
    DIM    desplazar e ir al estado 5
    ID     desplazar e ir al estado 6

    $default  reduce usando la regla 3 (bloque)

    bloque       ir al estado 25
    sentencia    ir al estado 9
    asignacion   ir al estado 10
    declaracion  ir al estado 11
    salida       ir al estado 12
    entrada      ir al estado 13
    bloqueWhile  ir al estado 14
    bloqueIf     ir al estado 15


estado 10

    4 sentencia: asignacion . PUNTO_COMA

    PUNTO_COMA  desplazar e ir al estado 26


estado 11

    5 sentencia: declaracion . PUNTO_COMA

    PUNTO_COMA  desplazar e ir al estado 27


estado 12

    6 sentencia: salida . PUNTO_COMA

    PUNTO_COMA  desplazar e ir al estado 28


estado 13

    7 sentencia: entrada . PUNTO_COMA

    PUNTO_COMA  desplazar e ir al estado 29


estado 14

    8 sentencia: bloqueWhile .

    $default  reduce usando la regla 8 (sentencia)


estado 15

    9 sentencia: bloqueIf .

    $default  reduce usando la regla 9 (sentencia)


estado 16

   37 bloqueWhile: WHILE PAR_ABIERTO . condicion PAR_CERRADO LLAVE_ABIERTO bloque LLAVE_CERRADO
   38            | WHILE PAR_ABIERTO . condicion PAR_CERRADO sentencia

    CONTAR         desplazar e ir al estado 30
    PAR_ABIERTO    desplazar e ir al estado 31
    OP_NOT         desplazar e ir al estado 32
    CONST_ENTERA   desplazar e ir al estado 33
    CONST_REAL     desplazar e ir al estado 34
    CONST_BINARIA  desplazar e ir al estado 35
    CONST_HEXA     desplazar e ir al estado 36
    ID             desplazar e ir al estado 37

    cuenta         ir al estado 38
    termino        ir al estado 39
    factor         ir al estado 40
    condicion      ir al estado 41
    expLogica      ir al estado 42
    funcionContar  ir al estado 43


estado 17

   39 bloqueIf: IF PAR_ABIERTO . condicion PAR_CERRADO LLAVE_ABIERTO bloque LLAVE_CERRADO resto_if
   40         | IF PAR_ABIERTO . condicion PAR_CERRADO sentencia

    CONTAR         desplazar e ir al estado 30
    PAR_ABIERTO    desplazar e ir al estado 31
    OP_NOT         desplazar e ir al estado 32
    CONST_ENTERA   desplazar e ir al estado 33
    CONST_REAL     desplazar e ir al estado 34
    CONST_BINARIA  desplazar e ir al estado 35
    CONST_HEXA     desplazar e ir al estado 36
    ID             desplazar e ir al estado 37

    cuenta         ir al estado 38
    termino        ir al estado 39
    factor         ir al estado 40
    condicion      ir al estado 44
    expLogica      ir al estado 42
    funcionContar  ir al estado 43


estado 18

   35 salida: PUT CONST_STRING .

    $default  reduce usando la regla 35 (salida)


estado 19

   34 salida: PUT ID .

    $default  reduce usando la regla 34 (salida)


estado 20

   36 entrada: GET ID .

    $default  reduce usando la regla 36 (entrada)


estado 21

   25 listaVariables: OP_LE . variables OP_GE

    ID  desplazar e ir al estado 45

    variables  ir al estado 46


estado 22

   24 declaracion: DIM listaVariables . AS listaTipos

    AS  desplazar e ir al estado 47


estado 23

   10 asignacion: ID OP_ASIGNACION . cuenta

    CONTAR         desplazar e ir al estado 30
    PAR_ABIERTO    desplazar e ir al estado 48
    CONST_ENTERA   desplazar e ir al estado 33
    CONST_REAL     desplazar e ir al estado 34
    CONST_BINARIA  desplazar e ir al estado 35
    CONST_HEXA     desplazar e ir al estado 36
    ID             desplazar e ir al estado 37

    cuenta         ir al estado 49
    termino        ir al estado 39
    factor         ir al estado 40
    funcionContar  ir al estado 43


estado 24

    0 $accept: programa $end .

    $default  aceptar


estado 25

    2 bloque: sentencia bloque .

    $default  reduce usando la regla 2 (bloque)


estado 26

    4 sentencia: asignacion PUNTO_COMA .

    $default  reduce usando la regla 4 (sentencia)


estado 27

    5 sentencia: declaracion PUNTO_COMA .

    $default  reduce usando la regla 5 (sentencia)


estado 28

    6 sentencia: salida PUNTO_COMA .

    $default  reduce usando la regla 6 (sentencia)


estado 29

    7 sentencia: entrada PUNTO_COMA .

    $default  reduce usando la regla 7 (sentencia)


estado 30

   56 funcionContar: CONTAR . PAR_ABIERTO cuenta PUNTO_COMA listaFactores PAR_CERRADO

    PAR_ABIERTO  desplazar e ir al estado 50


estado 31

   17 factor: PAR_ABIERTO . cuenta PAR_CERRADO
   47 expLogica: PAR_ABIERTO . condicion PAR_CERRADO

    CONTAR         desplazar e ir al estado 30
    PAR_ABIERTO    desplazar e ir al estado 31
    OP_NOT         desplazar e ir al estado 32
    CONST_ENTERA   desplazar e ir al estado 33
    CONST_REAL     desplazar e ir al estado 34
    CONST_BINARIA  desplazar e ir al estado 35
    CONST_HEXA     desplazar e ir al estado 36
    ID             desplazar e ir al estado 37

    cuenta         ir al estado 51
    termino        ir al estado 39
    factor         ir al estado 40
    condicion      ir al estado 52
    expLogica      ir al estado 42
    funcionContar  ir al estado 43


estado 32

   45 condicion: OP_NOT . expLogica

    CONTAR         desplazar e ir al estado 30
    PAR_ABIERTO    desplazar e ir al estado 31
    CONST_ENTERA   desplazar e ir al estado 33
    CONST_REAL     desplazar e ir al estado 34
    CONST_BINARIA  desplazar e ir al estado 35
    CONST_HEXA     desplazar e ir al estado 36
    ID             desplazar e ir al estado 37

    cuenta         ir al estado 38
    termino        ir al estado 39
    factor         ir al estado 40
    expLogica      ir al estado 53
    funcionContar  ir al estado 43


estado 33

   22 factor: CONST_ENTERA .

    $default  reduce usando la regla 22 (factor)


estado 34

   21 factor: CONST_REAL .

    $default  reduce usando la regla 21 (factor)


estado 35

   19 factor: CONST_BINARIA .

    $default  reduce usando la regla 19 (factor)


estado 36

   20 factor: CONST_HEXA .

    $default  reduce usando la regla 20 (factor)


estado 37

   18 factor: ID .

    $default  reduce usando la regla 18 (factor)


estado 38

   48 expLogica: cuenta . comparador cuenta
   49          | cuenta .

    OP_LE     desplazar e ir al estado 54
    OP_LEQ    desplazar e ir al estado 55
    OP_GE     desplazar e ir al estado 56
    OP_GEQ    desplazar e ir al estado 57
    OP_NE     desplazar e ir al estado 58
    OP_IGUAL  desplazar e ir al estado 59

    $default  reduce usando la regla 49 (expLogica)

    comparador  ir al estado 60


estado 39

   11 cuenta: termino . OP_SUMA cuenta
   12       | termino . OP_RESTA cuenta
   13       | termino .

    OP_SUMA   desplazar e ir al estado 61
    OP_RESTA  desplazar e ir al estado 62

    $default  reduce usando la regla 13 (cuenta)


estado 40

   14 termino: factor . OP_MULT termino
   15        | factor . OP_DIVISION termino
   16        | factor .

    OP_DIVISION  desplazar e ir al estado 63
    OP_MULT      desplazar e ir al estado 64

    $default  reduce usando la regla 16 (termino)


estado 41

   37 bloqueWhile: WHILE PAR_ABIERTO condicion . PAR_CERRADO LLAVE_ABIERTO bloque LLAVE_CERRADO
   38            | WHILE PAR_ABIERTO condicion . PAR_CERRADO sentencia

    PAR_CERRADO  desplazar e ir al estado 65


estado 42

   43 condicion: expLogica . OP_AND expLogica
   44          | expLogica . OP_OR expLogica
   46          | expLogica .

    OP_AND  desplazar e ir al estado 66
    OP_OR   desplazar e ir al estado 67

    $default  reduce usando la regla 46 (condicion)


estado 43

   23 factor: funcionContar .

    $default  reduce usando la regla 23 (factor)


estado 44

   39 bloqueIf: IF PAR_ABIERTO condicion . PAR_CERRADO LLAVE_ABIERTO bloque LLAVE_CERRADO resto_if
   40         | IF PAR_ABIERTO condicion . PAR_CERRADO sentencia

    PAR_CERRADO  desplazar e ir al estado 68


estado 45

   26 variables: ID . COMA variables
   27          | ID .

    COMA  desplazar e ir al estado 69

    $default  reduce usando la regla 27 (variables)


estado 46

   25 listaVariables: OP_LE variables . OP_GE

    OP_GE  desplazar e ir al estado 70


estado 47

   24 declaracion: DIM listaVariables AS . listaTipos

    OP_LE  desplazar e ir al estado 71

    listaTipos  ir al estado 72


estado 48

   17 factor: PAR_ABIERTO . cuenta PAR_CERRADO

    CONTAR         desplazar e ir al estado 30
    PAR_ABIERTO    desplazar e ir al estado 48
    CONST_ENTERA   desplazar e ir al estado 33
    CONST_REAL     desplazar e ir al estado 34
    CONST_BINARIA  desplazar e ir al estado 35
    CONST_HEXA     desplazar e ir al estado 36
    ID             desplazar e ir al estado 37

    cuenta         ir al estado 73
    termino        ir al estado 39
    factor         ir al estado 40
    funcionContar  ir al estado 43


estado 49

   10 asignacion: ID OP_ASIGNACION cuenta .

    $default  reduce usando la regla 10 (asignacion)


estado 50

   56 funcionContar: CONTAR PAR_ABIERTO . cuenta PUNTO_COMA listaFactores PAR_CERRADO

    CONTAR         desplazar e ir al estado 30
    PAR_ABIERTO    desplazar e ir al estado 48
    CONST_ENTERA   desplazar e ir al estado 33
    CONST_REAL     desplazar e ir al estado 34
    CONST_BINARIA  desplazar e ir al estado 35
    CONST_HEXA     desplazar e ir al estado 36
    ID             desplazar e ir al estado 37

    cuenta         ir al estado 74
    termino        ir al estado 39
    factor         ir al estado 40
    funcionContar  ir al estado 43


estado 51

   17 factor: PAR_ABIERTO cuenta . PAR_CERRADO
   48 expLogica: cuenta . comparador cuenta
   49          | cuenta .

    PAR_CERRADO  desplazar e ir al estado 75
    OP_LE        desplazar e ir al estado 54
    OP_LEQ       desplazar e ir al estado 55
    OP_GE        desplazar e ir al estado 56
    OP_GEQ       desplazar e ir al estado 57
    OP_NE        desplazar e ir al estado 58
    OP_IGUAL     desplazar e ir al estado 59

    PAR_CERRADO  [reduce usando la regla 49 (expLogica)]
    $default     reduce usando la regla 49 (expLogica)

    comparador  ir al estado 60


estado 52

   47 expLogica: PAR_ABIERTO condicion . PAR_CERRADO

    PAR_CERRADO  desplazar e ir al estado 76


estado 53

   45 condicion: OP_NOT expLogica .

    $default  reduce usando la regla 45 (condicion)


estado 54

   51 comparador: OP_LE .

    $default  reduce usando la regla 51 (comparador)


estado 55

   52 comparador: OP_LEQ .

    $default  reduce usando la regla 52 (comparador)


estado 56

   53 comparador: OP_GE .

    $default  reduce usando la regla 53 (comparador)


estado 57

   54 comparador: OP_GEQ .

    $default  reduce usando la regla 54 (comparador)


estado 58

   55 comparador: OP_NE .

    $default  reduce usando la regla 55 (comparador)


estado 59

   50 comparador: OP_IGUAL .

    $default  reduce usando la regla 50 (comparador)


estado 60

   48 expLogica: cuenta comparador . cuenta

    CONTAR         desplazar e ir al estado 30
    PAR_ABIERTO    desplazar e ir al estado 48
    CONST_ENTERA   desplazar e ir al estado 33
    CONST_REAL     desplazar e ir al estado 34
    CONST_BINARIA  desplazar e ir al estado 35
    CONST_HEXA     desplazar e ir al estado 36
    ID             desplazar e ir al estado 37

    cuenta         ir al estado 77
    termino        ir al estado 39
    factor         ir al estado 40
    funcionContar  ir al estado 43


estado 61

   11 cuenta: termino OP_SUMA . cuenta

    CONTAR         desplazar e ir al estado 30
    PAR_ABIERTO    desplazar e ir al estado 48
    CONST_ENTERA   desplazar e ir al estado 33
    CONST_REAL     desplazar e ir al estado 34
    CONST_BINARIA  desplazar e ir al estado 35
    CONST_HEXA     desplazar e ir al estado 36
    ID             desplazar e ir al estado 37

    cuenta         ir al estado 78
    termino        ir al estado 39
    factor         ir al estado 40
    funcionContar  ir al estado 43


estado 62

   12 cuenta: termino OP_RESTA . cuenta

    CONTAR         desplazar e ir al estado 30
    PAR_ABIERTO    desplazar e ir al estado 48
    CONST_ENTERA   desplazar e ir al estado 33
    CONST_REAL     desplazar e ir al estado 34
    CONST_BINARIA  desplazar e ir al estado 35
    CONST_HEXA     desplazar e ir al estado 36
    ID             desplazar e ir al estado 37

    cuenta         ir al estado 79
    termino        ir al estado 39
    factor         ir al estado 40
    funcionContar  ir al estado 43


estado 63

   15 termino: factor OP_DIVISION . termino

    CONTAR         desplazar e ir al estado 30
    PAR_ABIERTO    desplazar e ir al estado 48
    CONST_ENTERA   desplazar e ir al estado 33
    CONST_REAL     desplazar e ir al estado 34
    CONST_BINARIA  desplazar e ir al estado 35
    CONST_HEXA     desplazar e ir al estado 36
    ID             desplazar e ir al estado 37

    termino        ir al estado 80
    factor         ir al estado 40
    funcionContar  ir al estado 43


estado 64

   14 termino: factor OP_MULT . termino

    CONTAR         desplazar e ir al estado 30
    PAR_ABIERTO    desplazar e ir al estado 48
    CONST_ENTERA   desplazar e ir al estado 33
    CONST_REAL     desplazar e ir al estado 34
    CONST_BINARIA  desplazar e ir al estado 35
    CONST_HEXA     desplazar e ir al estado 36
    ID             desplazar e ir al estado 37

    termino        ir al estado 81
    factor         ir al estado 40
    funcionContar  ir al estado 43


estado 65

   37 bloqueWhile: WHILE PAR_ABIERTO condicion PAR_CERRADO . LLAVE_ABIERTO bloque LLAVE_CERRADO
   38            | WHILE PAR_ABIERTO condicion PAR_CERRADO . sentencia

    WHILE          desplazar e ir al estado 1
    IF             desplazar e ir al estado 2
    PUT            desplazar e ir al estado 3
    GET            desplazar e ir al estado 4
    DIM            desplazar e ir al estado 5
    LLAVE_ABIERTO  desplazar e ir al estado 82
    ID             desplazar e ir al estado 6

    sentencia    ir al estado 83
    asignacion   ir al estado 10
    declaracion  ir al estado 11
    salida       ir al estado 12
    entrada      ir al estado 13
    bloqueWhile  ir al estado 14
    bloqueIf     ir al estado 15


estado 66

   43 condicion: expLogica OP_AND . expLogica

    CONTAR         desplazar e ir al estado 30
    PAR_ABIERTO    desplazar e ir al estado 31
    CONST_ENTERA   desplazar e ir al estado 33
    CONST_REAL     desplazar e ir al estado 34
    CONST_BINARIA  desplazar e ir al estado 35
    CONST_HEXA     desplazar e ir al estado 36
    ID             desplazar e ir al estado 37

    cuenta         ir al estado 38
    termino        ir al estado 39
    factor         ir al estado 40
    expLogica      ir al estado 84
    funcionContar  ir al estado 43


estado 67

   44 condicion: expLogica OP_OR . expLogica

    CONTAR         desplazar e ir al estado 30
    PAR_ABIERTO    desplazar e ir al estado 31
    CONST_ENTERA   desplazar e ir al estado 33
    CONST_REAL     desplazar e ir al estado 34
    CONST_BINARIA  desplazar e ir al estado 35
    CONST_HEXA     desplazar e ir al estado 36
    ID             desplazar e ir al estado 37

    cuenta         ir al estado 38
    termino        ir al estado 39
    factor         ir al estado 40
    expLogica      ir al estado 85
    funcionContar  ir al estado 43


estado 68

   39 bloqueIf: IF PAR_ABIERTO condicion PAR_CERRADO . LLAVE_ABIERTO bloque LLAVE_CERRADO resto_if
   40         | IF PAR_ABIERTO condicion PAR_CERRADO . sentencia

    WHILE          desplazar e ir al estado 1
    IF             desplazar e ir al estado 2
    PUT            desplazar e ir al estado 3
    GET            desplazar e ir al estado 4
    DIM            desplazar e ir al estado 5
    LLAVE_ABIERTO  desplazar e ir al estado 86
    ID             desplazar e ir al estado 6

    sentencia    ir al estado 87
    asignacion   ir al estado 10
    declaracion  ir al estado 11
    salida       ir al estado 12
    entrada      ir al estado 13
    bloqueWhile  ir al estado 14
    bloqueIf     ir al estado 15


estado 69

   26 variables: ID COMA . variables

    ID  desplazar e ir al estado 45

    variables  ir al estado 88


estado 70

   25 listaVariables: OP_LE variables OP_GE .

    $default  reduce usando la regla 25 (listaVariables)


estado 71

   28 listaTipos: OP_LE . tipos OP_GE

    INTEGER  desplazar e ir al estado 89
    FLOAT    desplazar e ir al estado 90
    STRING   desplazar e ir al estado 91

    tipos       ir al estado 92
    tipoDeDato  ir al estado 93


estado 72

   24 declaracion: DIM listaVariables AS listaTipos .

    $default  reduce usando la regla 24 (declaracion)


estado 73

   17 factor: PAR_ABIERTO cuenta . PAR_CERRADO

    PAR_CERRADO  desplazar e ir al estado 75


estado 74

   56 funcionContar: CONTAR PAR_ABIERTO cuenta . PUNTO_COMA listaFactores PAR_CERRADO

    PUNTO_COMA  desplazar e ir al estado 94


estado 75

   17 factor: PAR_ABIERTO cuenta PAR_CERRADO .

    $default  reduce usando la regla 17 (factor)


estado 76

   47 expLogica: PAR_ABIERTO condicion PAR_CERRADO .

    $default  reduce usando la regla 47 (expLogica)


estado 77

   48 expLogica: cuenta comparador cuenta .

    $default  reduce usando la regla 48 (expLogica)


estado 78

   11 cuenta: termino OP_SUMA cuenta .

    $default  reduce usando la regla 11 (cuenta)


estado 79

   12 cuenta: termino OP_RESTA cuenta .

    $default  reduce usando la regla 12 (cuenta)


estado 80

   15 termino: factor OP_DIVISION termino .

    $default  reduce usando la regla 15 (termino)


estado 81

   14 termino: factor OP_MULT termino .

    $default  reduce usando la regla 14 (termino)


estado 82

   37 bloqueWhile: WHILE PAR_ABIERTO condicion PAR_CERRADO LLAVE_ABIERTO . bloque LLAVE_CERRADO

    WHILE  desplazar e ir al estado 1
    IF     desplazar e ir al estado 2
    PUT    desplazar e ir al estado 3
    GET    desplazar e ir al estado 4
    DIM    desplazar e ir al estado 5
    ID     desplazar e ir al estado 6

    bloque       ir al estado 95
    sentencia    ir al estado 9
    asignacion   ir al estado 10
    declaracion  ir al estado 11
    salida       ir al estado 12
    entrada      ir al estado 13
    bloqueWhile  ir al estado 14
    bloqueIf     ir al estado 15


estado 83

   38 bloqueWhile: WHILE PAR_ABIERTO condicion PAR_CERRADO sentencia .

    $default  reduce usando la regla 38 (bloqueWhile)


estado 84

   43 condicion: expLogica OP_AND expLogica .

    $default  reduce usando la regla 43 (condicion)


estado 85

   44 condicion: expLogica OP_OR expLogica .

    $default  reduce usando la regla 44 (condicion)


estado 86

   39 bloqueIf: IF PAR_ABIERTO condicion PAR_CERRADO LLAVE_ABIERTO . bloque LLAVE_CERRADO resto_if

    WHILE  desplazar e ir al estado 1
    IF     desplazar e ir al estado 2
    PUT    desplazar e ir al estado 3
    GET    desplazar e ir al estado 4
    DIM    desplazar e ir al estado 5
    ID     desplazar e ir al estado 6

    bloque       ir al estado 96
    sentencia    ir al estado 9
    asignacion   ir al estado 10
    declaracion  ir al estado 11
    salida       ir al estado 12
    entrada      ir al estado 13
    bloqueWhile  ir al estado 14
    bloqueIf     ir al estado 15


estado 87

   40 bloqueIf: IF PAR_ABIERTO condicion PAR_CERRADO sentencia .

    $default  reduce usando la regla 40 (bloqueIf)


estado 88

   26 variables: ID COMA variables .

    $default  reduce usando la regla 26 (variables)


estado 89

   32 tipoDeDato: INTEGER .

    $default  reduce usando la regla 32 (tipoDeDato)


estado 90

   31 tipoDeDato: FLOAT .

    $default  reduce usando la regla 31 (tipoDeDato)


estado 91

   33 tipoDeDato: STRING .

    $default  reduce usando la regla 33 (tipoDeDato)


estado 92

   28 listaTipos: OP_LE tipos . OP_GE

    OP_GE  desplazar e ir al estado 97


estado 93

   29 tipos: tipoDeDato . COMA tipos
   30      | tipoDeDato .

    COMA  desplazar e ir al estado 98

    $default  reduce usando la regla 30 (tipos)


estado 94

   56 funcionContar: CONTAR PAR_ABIERTO cuenta PUNTO_COMA . listaFactores PAR_CERRADO

    COR_ABIERTO  desplazar e ir al estado 99

    listaFactores  ir al estado 100


estado 95

   37 bloqueWhile: WHILE PAR_ABIERTO condicion PAR_CERRADO LLAVE_ABIERTO bloque . LLAVE_CERRADO

    LLAVE_CERRADO  desplazar e ir al estado 101


estado 96

   39 bloqueIf: IF PAR_ABIERTO condicion PAR_CERRADO LLAVE_ABIERTO bloque . LLAVE_CERRADO resto_if

    LLAVE_CERRADO  desplazar e ir al estado 102


estado 97

   28 listaTipos: OP_LE tipos OP_GE .

    $default  reduce usando la regla 28 (listaTipos)


estado 98

   29 tipos: tipoDeDato COMA . tipos

    INTEGER  desplazar e ir al estado 89
    FLOAT    desplazar e ir al estado 90
    STRING   desplazar e ir al estado 91

    tipos       ir al estado 103
    tipoDeDato  ir al estado 93


estado 99

   57 listaFactores: COR_ABIERTO . factores COR_CERRADO

    CONTAR         desplazar e ir al estado 30
    PAR_ABIERTO    desplazar e ir al estado 48
    CONST_ENTERA   desplazar e ir al estado 33
    CONST_REAL     desplazar e ir al estado 34
    CONST_BINARIA  desplazar e ir al estado 35
    CONST_HEXA     desplazar e ir al estado 36
    ID             desplazar e ir al estado 37

    factor         ir al estado 104
    funcionContar  ir al estado 43
    factores       ir al estado 105


estado 100

   56 funcionContar: CONTAR PAR_ABIERTO cuenta PUNTO_COMA listaFactores . PAR_CERRADO

    PAR_CERRADO  desplazar e ir al estado 106


estado 101

   37 bloqueWhile: WHILE PAR_ABIERTO condicion PAR_CERRADO LLAVE_ABIERTO bloque LLAVE_CERRADO .

    $default  reduce usando la regla 37 (bloqueWhile)


estado 102

   39 bloqueIf: IF PAR_ABIERTO condicion PAR_CERRADO LLAVE_ABIERTO bloque LLAVE_CERRADO . resto_if

    WHILE  desplazar e ir al estado 1
    IF     desplazar e ir al estado 2
    ELSE   desplazar e ir al estado 107
    PUT    desplazar e ir al estado 3
    GET    desplazar e ir al estado 4
    DIM    desplazar e ir al estado 5
    ID     desplazar e ir al estado 6

    sentencia    ir al estado 108
    asignacion   ir al estado 10
    declaracion  ir al estado 11
    salida       ir al estado 12
    entrada      ir al estado 13
    bloqueWhile  ir al estado 14
    bloqueIf     ir al estado 15
    resto_if     ir al estado 109


estado 103

   29 tipos: tipoDeDato COMA tipos .

    $default  reduce usando la regla 29 (tipos)


estado 104

   58 factores: factor . COMA factores
   59         | factor .

    COMA  desplazar e ir al estado 110

    $default  reduce usando la regla 59 (factores)


estado 105

   57 listaFactores: COR_ABIERTO factores . COR_CERRADO

    COR_CERRADO  desplazar e ir al estado 111


estado 106

   56 funcionContar: CONTAR PAR_ABIERTO cuenta PUNTO_COMA listaFactores PAR_CERRADO .

    $default  reduce usando la regla 56 (funcionContar)


estado 107

   41 resto_if: ELSE . LLAVE_ABIERTO bloque LLAVE_CERRADO

    LLAVE_ABIERTO  desplazar e ir al estado 112


estado 108

   42 resto_if: sentencia .

    $default  reduce usando la regla 42 (resto_if)


estado 109

   39 bloqueIf: IF PAR_ABIERTO condicion PAR_CERRADO LLAVE_ABIERTO bloque LLAVE_CERRADO resto_if .

    $default  reduce usando la regla 39 (bloqueIf)


estado 110

   58 factores: factor COMA . factores

    CONTAR         desplazar e ir al estado 30
    PAR_ABIERTO    desplazar e ir al estado 48
    CONST_ENTERA   desplazar e ir al estado 33
    CONST_REAL     desplazar e ir al estado 34
    CONST_BINARIA  desplazar e ir al estado 35
    CONST_HEXA     desplazar e ir al estado 36
    ID             desplazar e ir al estado 37

    factor         ir al estado 104
    funcionContar  ir al estado 43
    factores       ir al estado 113


estado 111

   57 listaFactores: COR_ABIERTO factores COR_CERRADO .

    $default  reduce usando la regla 57 (listaFactores)


estado 112

   41 resto_if: ELSE LLAVE_ABIERTO . bloque LLAVE_CERRADO

    WHILE  desplazar e ir al estado 1
    IF     desplazar e ir al estado 2
    PUT    desplazar e ir al estado 3
    GET    desplazar e ir al estado 4
    DIM    desplazar e ir al estado 5
    ID     desplazar e ir al estado 6

    bloque       ir al estado 114
    sentencia    ir al estado 9
    asignacion   ir al estado 10
    declaracion  ir al estado 11
    salida       ir al estado 12
    entrada      ir al estado 13
    bloqueWhile  ir al estado 14
    bloqueIf     ir al estado 15


estado 113

   58 factores: factor COMA factores .

    $default  reduce usando la regla 58 (factores)


estado 114

   41 resto_if: ELSE LLAVE_ABIERTO bloque . LLAVE_CERRADO

    LLAVE_CERRADO  desplazar e ir al estado 115


estado 115

   41 resto_if: ELSE LLAVE_ABIERTO bloque LLAVE_CERRADO .

    $default  reduce usando la regla 41 (resto_if)
