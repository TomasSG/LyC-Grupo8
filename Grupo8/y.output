Terminals unused in grammar

   COMENTARIO


Gramática

    0 $accept: programa $end

    1 programa: bloque

    2 bloque: sentencia bloque
    3       | sentencia

    4 $@1: /* vacío */

    5 sentencia: asignacion $@1 PUNTO_COMA

    6 $@2: /* vacío */

    7 sentencia: declaracion $@2 PUNTO_COMA
    8          | salida PUNTO_COMA
    9          | entrada PUNTO_COMA
   10          | bloqueWhile
   11          | bloqueIf

   12 asignacion: ID OP_ASIGNACION cuenta

   13 cuenta: termino OP_SUMA cuenta
   14       | termino OP_RESTA cuenta
   15       | termino

   16 termino: factor OP_MULT termino
   17        | factor OP_DIVISION termino
   18        | factor

   19 factor: PAR_ABIERTO cuenta PAR_CERRADO
   20       | ID
   21       | CONST_BINARIA
   22       | CONST_HEXA
   23       | CONST_REAL
   24       | CONST_ENTERA
   25       | funcionContar

   26 declaracion: DIM listaVariables AS listaTipos

   27 listaVariables: OP_LE variables OP_GE

   28 variables: ID COMA variables
   29          | ID

   30 listaTipos: OP_LE tipos OP_GE

   31 tipos: tipoDeDato COMA tipos
   32      | tipoDeDato

   33 tipoDeDato: FLOAT
   34           | INTEGER
   35           | STRING

   36 salida: PUT ID
   37       | PUT CONST_STRING

   38 entrada: GET ID

   39 bloqueWhile: WHILE PAR_ABIERTO condicion PAR_CERRADO LLAVE_ABIERTO bloque LLAVE_CERRADO
   40            | WHILE condicion sentencia

   41 bloqueIf: IF PAR_ABIERTO condicion PAR_CERRADO LLAVE_ABIERTO bloque LLAVE_CERRADO resto_if
   42         | IF PAR_ABIERTO condicion PAR_CERRADO sentencia

   43 resto_if: ELSE LLAVE_ABIERTO bloque LLAVE_CERRADO
   44         | sentencia

   45 condicion: expLogica OP_AND condicion
   46          | expLogica OP_OR condicion
   47          | expLogica

   48 expLogica: PAR_ABIERTO condicion PAR_CERRADO
   49          | cuenta comparador cuenta

   50 comparador: OP_IGUAL
   51           | OP_LE
   52           | OP_LEQ
   53           | OP_GE
   54           | OP_GEQ
   55           | OP_NE
   56           | OP_NOT

   57 funcionContar: CONTAR PAR_ABIERTO cuenta PUNTO_COMA listaFactores PAR_CERRADO

   58 listaFactores: COR_ABIERTO factores COR_CERRADO

   59 factores: factor COMA factores
   60         | factor


Terminales con las reglas donde aparecen

$end (0) 0
error (256)
WHILE (258) 39 40
IF (259) 41 42
ELSE (260) 43
PUT (261) 36 37
GET (262) 38
DIM (263) 26
AS (264) 26
CONTAR (265) 57
INTEGER (266) 34
FLOAT (267) 33
STRING (268) 35
LLAVE_ABIERTO (269) 39 41 43
LLAVE_CERRADO (270) 39 41 43
PAR_ABIERTO (271) 19 39 41 42 48 57
PAR_CERRADO (272) 19 39 41 42 48 57
COR_ABIERTO (273) 58
COR_CERRADO (274) 58
PUNTO_COMA (275) 5 7 8 9 57
COMA (276) 28 31 59
OP_ASIGNACION (277) 12
OP_SUMA (278) 13
OP_RESTA (279) 14
OP_DIVISION (280) 17
OP_MULT (281) 16
OP_LE (282) 27 30 51
OP_LEQ (283) 52
OP_GE (284) 27 30 53
OP_GEQ (285) 54
OP_NE (286) 55
OP_IGUAL (287) 50
OP_AND (288) 45
OP_OR (289) 46
OP_NOT (290) 56
CONST_ENTERA (291) 24
CONST_REAL (292) 23
CONST_STRING (293) 37
CONST_BINARIA (294) 21
CONST_HEXA (295) 22
ID (296) 12 20 28 29 36 38
COMENTARIO (297)


No terminales con las reglas donde aparecen

$accept (43)
    en la izquierda: 0
programa (44)
    en la izquierda: 1, en la derecha: 0
bloque (45)
    en la izquierda: 2 3, en la derecha: 1 2 39 41 43
sentencia (46)
    en la izquierda: 5 7 8 9 10 11, en la derecha: 2 3 40 42 44
$@1 (47)
    en la izquierda: 4, en la derecha: 5
$@2 (48)
    en la izquierda: 6, en la derecha: 7
asignacion (49)
    en la izquierda: 12, en la derecha: 5
cuenta (50)
    en la izquierda: 13 14 15, en la derecha: 12 13 14 19 49 57
termino (51)
    en la izquierda: 16 17 18, en la derecha: 13 14 15 16 17
factor (52)
    en la izquierda: 19 20 21 22 23 24 25, en la derecha: 16 17 18
    59 60
declaracion (53)
    en la izquierda: 26, en la derecha: 7
listaVariables (54)
    en la izquierda: 27, en la derecha: 26
variables (55)
    en la izquierda: 28 29, en la derecha: 27 28
listaTipos (56)
    en la izquierda: 30, en la derecha: 26
tipos (57)
    en la izquierda: 31 32, en la derecha: 30 31
tipoDeDato (58)
    en la izquierda: 33 34 35, en la derecha: 31 32
salida (59)
    en la izquierda: 36 37, en la derecha: 8
entrada (60)
    en la izquierda: 38, en la derecha: 9
bloqueWhile (61)
    en la izquierda: 39 40, en la derecha: 10
bloqueIf (62)
    en la izquierda: 41 42, en la derecha: 11
resto_if (63)
    en la izquierda: 43 44, en la derecha: 41
condicion (64)
    en la izquierda: 45 46 47, en la derecha: 39 40 41 42 45 46 48
expLogica (65)
    en la izquierda: 48 49, en la derecha: 45 46 47
comparador (66)
    en la izquierda: 50 51 52 53 54 55 56, en la derecha: 49
funcionContar (67)
    en la izquierda: 57, en la derecha: 25
listaFactores (68)
    en la izquierda: 58, en la derecha: 57
factores (69)
    en la izquierda: 59 60, en la derecha: 58 59


estado 0

    0 $accept: . programa $end

    WHILE  desplazar e ir al estado 1
    IF     desplazar e ir al estado 2
    PUT    desplazar e ir al estado 3
    GET    desplazar e ir al estado 4
    DIM    desplazar e ir al estado 5
    ID     desplazar e ir al estado 6

    programa     ir al estado 7
    bloque       ir al estado 8
    sentencia    ir al estado 9
    asignacion   ir al estado 10
    declaracion  ir al estado 11
    salida       ir al estado 12
    entrada      ir al estado 13
    bloqueWhile  ir al estado 14
    bloqueIf     ir al estado 15


estado 1

   39 bloqueWhile: WHILE . PAR_ABIERTO condicion PAR_CERRADO LLAVE_ABIERTO bloque LLAVE_CERRADO
   40            | WHILE . condicion sentencia

    CONTAR         desplazar e ir al estado 16
    PAR_ABIERTO    desplazar e ir al estado 17
    CONST_ENTERA   desplazar e ir al estado 18
    CONST_REAL     desplazar e ir al estado 19
    CONST_BINARIA  desplazar e ir al estado 20
    CONST_HEXA     desplazar e ir al estado 21
    ID             desplazar e ir al estado 22

    cuenta         ir al estado 23
    termino        ir al estado 24
    factor         ir al estado 25
    condicion      ir al estado 26
    expLogica      ir al estado 27
    funcionContar  ir al estado 28


estado 2

   41 bloqueIf: IF . PAR_ABIERTO condicion PAR_CERRADO LLAVE_ABIERTO bloque LLAVE_CERRADO resto_if
   42         | IF . PAR_ABIERTO condicion PAR_CERRADO sentencia

    PAR_ABIERTO  desplazar e ir al estado 29


estado 3

   36 salida: PUT . ID
   37       | PUT . CONST_STRING

    CONST_STRING  desplazar e ir al estado 30
    ID            desplazar e ir al estado 31


estado 4

   38 entrada: GET . ID

    ID  desplazar e ir al estado 32


estado 5

   26 declaracion: DIM . listaVariables AS listaTipos

    OP_LE  desplazar e ir al estado 33

    listaVariables  ir al estado 34


estado 6

   12 asignacion: ID . OP_ASIGNACION cuenta

    OP_ASIGNACION  desplazar e ir al estado 35


estado 7

    0 $accept: programa . $end

    $end  desplazar e ir al estado 36


estado 8

    1 programa: bloque .

    $default  reduce usando la regla 1 (programa)


estado 9

    2 bloque: sentencia . bloque
    3       | sentencia .

    WHILE  desplazar e ir al estado 1
    IF     desplazar e ir al estado 2
    PUT    desplazar e ir al estado 3
    GET    desplazar e ir al estado 4
    DIM    desplazar e ir al estado 5
    ID     desplazar e ir al estado 6

    $default  reduce usando la regla 3 (bloque)

    bloque       ir al estado 37
    sentencia    ir al estado 9
    asignacion   ir al estado 10
    declaracion  ir al estado 11
    salida       ir al estado 12
    entrada      ir al estado 13
    bloqueWhile  ir al estado 14
    bloqueIf     ir al estado 15


estado 10

    5 sentencia: asignacion . $@1 PUNTO_COMA

    $default  reduce usando la regla 4 ($@1)

    $@1  ir al estado 38


estado 11

    7 sentencia: declaracion . $@2 PUNTO_COMA

    $default  reduce usando la regla 6 ($@2)

    $@2  ir al estado 39


estado 12

    8 sentencia: salida . PUNTO_COMA

    PUNTO_COMA  desplazar e ir al estado 40


estado 13

    9 sentencia: entrada . PUNTO_COMA

    PUNTO_COMA  desplazar e ir al estado 41


estado 14

   10 sentencia: bloqueWhile .

    $default  reduce usando la regla 10 (sentencia)


estado 15

   11 sentencia: bloqueIf .

    $default  reduce usando la regla 11 (sentencia)


estado 16

   57 funcionContar: CONTAR . PAR_ABIERTO cuenta PUNTO_COMA listaFactores PAR_CERRADO

    PAR_ABIERTO  desplazar e ir al estado 42


estado 17

   19 factor: PAR_ABIERTO . cuenta PAR_CERRADO
   39 bloqueWhile: WHILE PAR_ABIERTO . condicion PAR_CERRADO LLAVE_ABIERTO bloque LLAVE_CERRADO
   48 expLogica: PAR_ABIERTO . condicion PAR_CERRADO

    CONTAR         desplazar e ir al estado 16
    PAR_ABIERTO    desplazar e ir al estado 43
    CONST_ENTERA   desplazar e ir al estado 18
    CONST_REAL     desplazar e ir al estado 19
    CONST_BINARIA  desplazar e ir al estado 20
    CONST_HEXA     desplazar e ir al estado 21
    ID             desplazar e ir al estado 22

    cuenta         ir al estado 44
    termino        ir al estado 24
    factor         ir al estado 25
    condicion      ir al estado 45
    expLogica      ir al estado 27
    funcionContar  ir al estado 28


estado 18

   24 factor: CONST_ENTERA .

    $default  reduce usando la regla 24 (factor)


estado 19

   23 factor: CONST_REAL .

    $default  reduce usando la regla 23 (factor)


estado 20

   21 factor: CONST_BINARIA .

    $default  reduce usando la regla 21 (factor)


estado 21

   22 factor: CONST_HEXA .

    $default  reduce usando la regla 22 (factor)


estado 22

   20 factor: ID .

    $default  reduce usando la regla 20 (factor)


estado 23

   49 expLogica: cuenta . comparador cuenta

    OP_LE     desplazar e ir al estado 46
    OP_LEQ    desplazar e ir al estado 47
    OP_GE     desplazar e ir al estado 48
    OP_GEQ    desplazar e ir al estado 49
    OP_NE     desplazar e ir al estado 50
    OP_IGUAL  desplazar e ir al estado 51
    OP_NOT    desplazar e ir al estado 52

    comparador  ir al estado 53


estado 24

   13 cuenta: termino . OP_SUMA cuenta
   14       | termino . OP_RESTA cuenta
   15       | termino .

    OP_SUMA   desplazar e ir al estado 54
    OP_RESTA  desplazar e ir al estado 55

    $default  reduce usando la regla 15 (cuenta)


estado 25

   16 termino: factor . OP_MULT termino
   17        | factor . OP_DIVISION termino
   18        | factor .

    OP_DIVISION  desplazar e ir al estado 56
    OP_MULT      desplazar e ir al estado 57

    $default  reduce usando la regla 18 (termino)


estado 26

   40 bloqueWhile: WHILE condicion . sentencia

    WHILE  desplazar e ir al estado 1
    IF     desplazar e ir al estado 2
    PUT    desplazar e ir al estado 3
    GET    desplazar e ir al estado 4
    DIM    desplazar e ir al estado 5
    ID     desplazar e ir al estado 6

    sentencia    ir al estado 58
    asignacion   ir al estado 10
    declaracion  ir al estado 11
    salida       ir al estado 12
    entrada      ir al estado 13
    bloqueWhile  ir al estado 14
    bloqueIf     ir al estado 15


estado 27

   45 condicion: expLogica . OP_AND condicion
   46          | expLogica . OP_OR condicion
   47          | expLogica .

    OP_AND  desplazar e ir al estado 59
    OP_OR   desplazar e ir al estado 60

    $default  reduce usando la regla 47 (condicion)


estado 28

   25 factor: funcionContar .

    $default  reduce usando la regla 25 (factor)


estado 29

   41 bloqueIf: IF PAR_ABIERTO . condicion PAR_CERRADO LLAVE_ABIERTO bloque LLAVE_CERRADO resto_if
   42         | IF PAR_ABIERTO . condicion PAR_CERRADO sentencia

    CONTAR         desplazar e ir al estado 16
    PAR_ABIERTO    desplazar e ir al estado 43
    CONST_ENTERA   desplazar e ir al estado 18
    CONST_REAL     desplazar e ir al estado 19
    CONST_BINARIA  desplazar e ir al estado 20
    CONST_HEXA     desplazar e ir al estado 21
    ID             desplazar e ir al estado 22

    cuenta         ir al estado 23
    termino        ir al estado 24
    factor         ir al estado 25
    condicion      ir al estado 61
    expLogica      ir al estado 27
    funcionContar  ir al estado 28


estado 30

   37 salida: PUT CONST_STRING .

    $default  reduce usando la regla 37 (salida)


estado 31

   36 salida: PUT ID .

    $default  reduce usando la regla 36 (salida)


estado 32

   38 entrada: GET ID .

    $default  reduce usando la regla 38 (entrada)


estado 33

   27 listaVariables: OP_LE . variables OP_GE

    ID  desplazar e ir al estado 62

    variables  ir al estado 63


estado 34

   26 declaracion: DIM listaVariables . AS listaTipos

    AS  desplazar e ir al estado 64


estado 35

   12 asignacion: ID OP_ASIGNACION . cuenta

    CONTAR         desplazar e ir al estado 16
    PAR_ABIERTO    desplazar e ir al estado 65
    CONST_ENTERA   desplazar e ir al estado 18
    CONST_REAL     desplazar e ir al estado 19
    CONST_BINARIA  desplazar e ir al estado 20
    CONST_HEXA     desplazar e ir al estado 21
    ID             desplazar e ir al estado 22

    cuenta         ir al estado 66
    termino        ir al estado 24
    factor         ir al estado 25
    funcionContar  ir al estado 28


estado 36

    0 $accept: programa $end .

    $default  aceptar


estado 37

    2 bloque: sentencia bloque .

    $default  reduce usando la regla 2 (bloque)


estado 38

    5 sentencia: asignacion $@1 . PUNTO_COMA

    PUNTO_COMA  desplazar e ir al estado 67


estado 39

    7 sentencia: declaracion $@2 . PUNTO_COMA

    PUNTO_COMA  desplazar e ir al estado 68


estado 40

    8 sentencia: salida PUNTO_COMA .

    $default  reduce usando la regla 8 (sentencia)


estado 41

    9 sentencia: entrada PUNTO_COMA .

    $default  reduce usando la regla 9 (sentencia)


estado 42

   57 funcionContar: CONTAR PAR_ABIERTO . cuenta PUNTO_COMA listaFactores PAR_CERRADO

    CONTAR         desplazar e ir al estado 16
    PAR_ABIERTO    desplazar e ir al estado 65
    CONST_ENTERA   desplazar e ir al estado 18
    CONST_REAL     desplazar e ir al estado 19
    CONST_BINARIA  desplazar e ir al estado 20
    CONST_HEXA     desplazar e ir al estado 21
    ID             desplazar e ir al estado 22

    cuenta         ir al estado 69
    termino        ir al estado 24
    factor         ir al estado 25
    funcionContar  ir al estado 28


estado 43

   19 factor: PAR_ABIERTO . cuenta PAR_CERRADO
   48 expLogica: PAR_ABIERTO . condicion PAR_CERRADO

    CONTAR         desplazar e ir al estado 16
    PAR_ABIERTO    desplazar e ir al estado 43
    CONST_ENTERA   desplazar e ir al estado 18
    CONST_REAL     desplazar e ir al estado 19
    CONST_BINARIA  desplazar e ir al estado 20
    CONST_HEXA     desplazar e ir al estado 21
    ID             desplazar e ir al estado 22

    cuenta         ir al estado 44
    termino        ir al estado 24
    factor         ir al estado 25
    condicion      ir al estado 70
    expLogica      ir al estado 27
    funcionContar  ir al estado 28


estado 44

   19 factor: PAR_ABIERTO cuenta . PAR_CERRADO
   49 expLogica: cuenta . comparador cuenta

    PAR_CERRADO  desplazar e ir al estado 71
    OP_LE        desplazar e ir al estado 46
    OP_LEQ       desplazar e ir al estado 47
    OP_GE        desplazar e ir al estado 48
    OP_GEQ       desplazar e ir al estado 49
    OP_NE        desplazar e ir al estado 50
    OP_IGUAL     desplazar e ir al estado 51
    OP_NOT       desplazar e ir al estado 52

    comparador  ir al estado 53


estado 45

   39 bloqueWhile: WHILE PAR_ABIERTO condicion . PAR_CERRADO LLAVE_ABIERTO bloque LLAVE_CERRADO
   48 expLogica: PAR_ABIERTO condicion . PAR_CERRADO

    PAR_CERRADO  desplazar e ir al estado 72


estado 46

   51 comparador: OP_LE .

    $default  reduce usando la regla 51 (comparador)


estado 47

   52 comparador: OP_LEQ .

    $default  reduce usando la regla 52 (comparador)


estado 48

   53 comparador: OP_GE .

    $default  reduce usando la regla 53 (comparador)


estado 49

   54 comparador: OP_GEQ .

    $default  reduce usando la regla 54 (comparador)


estado 50

   55 comparador: OP_NE .

    $default  reduce usando la regla 55 (comparador)


estado 51

   50 comparador: OP_IGUAL .

    $default  reduce usando la regla 50 (comparador)


estado 52

   56 comparador: OP_NOT .

    $default  reduce usando la regla 56 (comparador)


estado 53

   49 expLogica: cuenta comparador . cuenta

    CONTAR         desplazar e ir al estado 16
    PAR_ABIERTO    desplazar e ir al estado 65
    CONST_ENTERA   desplazar e ir al estado 18
    CONST_REAL     desplazar e ir al estado 19
    CONST_BINARIA  desplazar e ir al estado 20
    CONST_HEXA     desplazar e ir al estado 21
    ID             desplazar e ir al estado 22

    cuenta         ir al estado 73
    termino        ir al estado 24
    factor         ir al estado 25
    funcionContar  ir al estado 28


estado 54

   13 cuenta: termino OP_SUMA . cuenta

    CONTAR         desplazar e ir al estado 16
    PAR_ABIERTO    desplazar e ir al estado 65
    CONST_ENTERA   desplazar e ir al estado 18
    CONST_REAL     desplazar e ir al estado 19
    CONST_BINARIA  desplazar e ir al estado 20
    CONST_HEXA     desplazar e ir al estado 21
    ID             desplazar e ir al estado 22

    cuenta         ir al estado 74
    termino        ir al estado 24
    factor         ir al estado 25
    funcionContar  ir al estado 28


estado 55

   14 cuenta: termino OP_RESTA . cuenta

    CONTAR         desplazar e ir al estado 16
    PAR_ABIERTO    desplazar e ir al estado 65
    CONST_ENTERA   desplazar e ir al estado 18
    CONST_REAL     desplazar e ir al estado 19
    CONST_BINARIA  desplazar e ir al estado 20
    CONST_HEXA     desplazar e ir al estado 21
    ID             desplazar e ir al estado 22

    cuenta         ir al estado 75
    termino        ir al estado 24
    factor         ir al estado 25
    funcionContar  ir al estado 28


estado 56

   17 termino: factor OP_DIVISION . termino

    CONTAR         desplazar e ir al estado 16
    PAR_ABIERTO    desplazar e ir al estado 65
    CONST_ENTERA   desplazar e ir al estado 18
    CONST_REAL     desplazar e ir al estado 19
    CONST_BINARIA  desplazar e ir al estado 20
    CONST_HEXA     desplazar e ir al estado 21
    ID             desplazar e ir al estado 22

    termino        ir al estado 76
    factor         ir al estado 25
    funcionContar  ir al estado 28


estado 57

   16 termino: factor OP_MULT . termino

    CONTAR         desplazar e ir al estado 16
    PAR_ABIERTO    desplazar e ir al estado 65
    CONST_ENTERA   desplazar e ir al estado 18
    CONST_REAL     desplazar e ir al estado 19
    CONST_BINARIA  desplazar e ir al estado 20
    CONST_HEXA     desplazar e ir al estado 21
    ID             desplazar e ir al estado 22

    termino        ir al estado 77
    factor         ir al estado 25
    funcionContar  ir al estado 28


estado 58

   40 bloqueWhile: WHILE condicion sentencia .

    $default  reduce usando la regla 40 (bloqueWhile)


estado 59

   45 condicion: expLogica OP_AND . condicion

    CONTAR         desplazar e ir al estado 16
    PAR_ABIERTO    desplazar e ir al estado 43
    CONST_ENTERA   desplazar e ir al estado 18
    CONST_REAL     desplazar e ir al estado 19
    CONST_BINARIA  desplazar e ir al estado 20
    CONST_HEXA     desplazar e ir al estado 21
    ID             desplazar e ir al estado 22

    cuenta         ir al estado 23
    termino        ir al estado 24
    factor         ir al estado 25
    condicion      ir al estado 78
    expLogica      ir al estado 27
    funcionContar  ir al estado 28


estado 60

   46 condicion: expLogica OP_OR . condicion

    CONTAR         desplazar e ir al estado 16
    PAR_ABIERTO    desplazar e ir al estado 43
    CONST_ENTERA   desplazar e ir al estado 18
    CONST_REAL     desplazar e ir al estado 19
    CONST_BINARIA  desplazar e ir al estado 20
    CONST_HEXA     desplazar e ir al estado 21
    ID             desplazar e ir al estado 22

    cuenta         ir al estado 23
    termino        ir al estado 24
    factor         ir al estado 25
    condicion      ir al estado 79
    expLogica      ir al estado 27
    funcionContar  ir al estado 28


estado 61

   41 bloqueIf: IF PAR_ABIERTO condicion . PAR_CERRADO LLAVE_ABIERTO bloque LLAVE_CERRADO resto_if
   42         | IF PAR_ABIERTO condicion . PAR_CERRADO sentencia

    PAR_CERRADO  desplazar e ir al estado 80


estado 62

   28 variables: ID . COMA variables
   29          | ID .

    COMA  desplazar e ir al estado 81

    $default  reduce usando la regla 29 (variables)


estado 63

   27 listaVariables: OP_LE variables . OP_GE

    OP_GE  desplazar e ir al estado 82


estado 64

   26 declaracion: DIM listaVariables AS . listaTipos

    OP_LE  desplazar e ir al estado 83

    listaTipos  ir al estado 84


estado 65

   19 factor: PAR_ABIERTO . cuenta PAR_CERRADO

    CONTAR         desplazar e ir al estado 16
    PAR_ABIERTO    desplazar e ir al estado 65
    CONST_ENTERA   desplazar e ir al estado 18
    CONST_REAL     desplazar e ir al estado 19
    CONST_BINARIA  desplazar e ir al estado 20
    CONST_HEXA     desplazar e ir al estado 21
    ID             desplazar e ir al estado 22

    cuenta         ir al estado 85
    termino        ir al estado 24
    factor         ir al estado 25
    funcionContar  ir al estado 28


estado 66

   12 asignacion: ID OP_ASIGNACION cuenta .

    $default  reduce usando la regla 12 (asignacion)


estado 67

    5 sentencia: asignacion $@1 PUNTO_COMA .

    $default  reduce usando la regla 5 (sentencia)


estado 68

    7 sentencia: declaracion $@2 PUNTO_COMA .

    $default  reduce usando la regla 7 (sentencia)


estado 69

   57 funcionContar: CONTAR PAR_ABIERTO cuenta . PUNTO_COMA listaFactores PAR_CERRADO

    PUNTO_COMA  desplazar e ir al estado 86


estado 70

   48 expLogica: PAR_ABIERTO condicion . PAR_CERRADO

    PAR_CERRADO  desplazar e ir al estado 87


estado 71

   19 factor: PAR_ABIERTO cuenta PAR_CERRADO .

    $default  reduce usando la regla 19 (factor)


estado 72

   39 bloqueWhile: WHILE PAR_ABIERTO condicion PAR_CERRADO . LLAVE_ABIERTO bloque LLAVE_CERRADO
   48 expLogica: PAR_ABIERTO condicion PAR_CERRADO .

    LLAVE_ABIERTO  desplazar e ir al estado 88

    $default  reduce usando la regla 48 (expLogica)


estado 73

   49 expLogica: cuenta comparador cuenta .

    $default  reduce usando la regla 49 (expLogica)


estado 74

   13 cuenta: termino OP_SUMA cuenta .

    $default  reduce usando la regla 13 (cuenta)


estado 75

   14 cuenta: termino OP_RESTA cuenta .

    $default  reduce usando la regla 14 (cuenta)


estado 76

   17 termino: factor OP_DIVISION termino .

    $default  reduce usando la regla 17 (termino)


estado 77

   16 termino: factor OP_MULT termino .

    $default  reduce usando la regla 16 (termino)


estado 78

   45 condicion: expLogica OP_AND condicion .

    $default  reduce usando la regla 45 (condicion)


estado 79

   46 condicion: expLogica OP_OR condicion .

    $default  reduce usando la regla 46 (condicion)


estado 80

   41 bloqueIf: IF PAR_ABIERTO condicion PAR_CERRADO . LLAVE_ABIERTO bloque LLAVE_CERRADO resto_if
   42         | IF PAR_ABIERTO condicion PAR_CERRADO . sentencia

    WHILE          desplazar e ir al estado 1
    IF             desplazar e ir al estado 2
    PUT            desplazar e ir al estado 3
    GET            desplazar e ir al estado 4
    DIM            desplazar e ir al estado 5
    LLAVE_ABIERTO  desplazar e ir al estado 89
    ID             desplazar e ir al estado 6

    sentencia    ir al estado 90
    asignacion   ir al estado 10
    declaracion  ir al estado 11
    salida       ir al estado 12
    entrada      ir al estado 13
    bloqueWhile  ir al estado 14
    bloqueIf     ir al estado 15


estado 81

   28 variables: ID COMA . variables

    ID  desplazar e ir al estado 62

    variables  ir al estado 91


estado 82

   27 listaVariables: OP_LE variables OP_GE .

    $default  reduce usando la regla 27 (listaVariables)


estado 83

   30 listaTipos: OP_LE . tipos OP_GE

    INTEGER  desplazar e ir al estado 92
    FLOAT    desplazar e ir al estado 93
    STRING   desplazar e ir al estado 94

    tipos       ir al estado 95
    tipoDeDato  ir al estado 96


estado 84

   26 declaracion: DIM listaVariables AS listaTipos .

    $default  reduce usando la regla 26 (declaracion)


estado 85

   19 factor: PAR_ABIERTO cuenta . PAR_CERRADO

    PAR_CERRADO  desplazar e ir al estado 71


estado 86

   57 funcionContar: CONTAR PAR_ABIERTO cuenta PUNTO_COMA . listaFactores PAR_CERRADO

    COR_ABIERTO  desplazar e ir al estado 97

    listaFactores  ir al estado 98


estado 87

   48 expLogica: PAR_ABIERTO condicion PAR_CERRADO .

    $default  reduce usando la regla 48 (expLogica)


estado 88

   39 bloqueWhile: WHILE PAR_ABIERTO condicion PAR_CERRADO LLAVE_ABIERTO . bloque LLAVE_CERRADO

    WHILE  desplazar e ir al estado 1
    IF     desplazar e ir al estado 2
    PUT    desplazar e ir al estado 3
    GET    desplazar e ir al estado 4
    DIM    desplazar e ir al estado 5
    ID     desplazar e ir al estado 6

    bloque       ir al estado 99
    sentencia    ir al estado 9
    asignacion   ir al estado 10
    declaracion  ir al estado 11
    salida       ir al estado 12
    entrada      ir al estado 13
    bloqueWhile  ir al estado 14
    bloqueIf     ir al estado 15


estado 89

   41 bloqueIf: IF PAR_ABIERTO condicion PAR_CERRADO LLAVE_ABIERTO . bloque LLAVE_CERRADO resto_if

    WHILE  desplazar e ir al estado 1
    IF     desplazar e ir al estado 2
    PUT    desplazar e ir al estado 3
    GET    desplazar e ir al estado 4
    DIM    desplazar e ir al estado 5
    ID     desplazar e ir al estado 6

    bloque       ir al estado 100
    sentencia    ir al estado 9
    asignacion   ir al estado 10
    declaracion  ir al estado 11
    salida       ir al estado 12
    entrada      ir al estado 13
    bloqueWhile  ir al estado 14
    bloqueIf     ir al estado 15


estado 90

   42 bloqueIf: IF PAR_ABIERTO condicion PAR_CERRADO sentencia .

    $default  reduce usando la regla 42 (bloqueIf)


estado 91

   28 variables: ID COMA variables .

    $default  reduce usando la regla 28 (variables)


estado 92

   34 tipoDeDato: INTEGER .

    $default  reduce usando la regla 34 (tipoDeDato)


estado 93

   33 tipoDeDato: FLOAT .

    $default  reduce usando la regla 33 (tipoDeDato)


estado 94

   35 tipoDeDato: STRING .

    $default  reduce usando la regla 35 (tipoDeDato)


estado 95

   30 listaTipos: OP_LE tipos . OP_GE

    OP_GE  desplazar e ir al estado 101


estado 96

   31 tipos: tipoDeDato . COMA tipos
   32      | tipoDeDato .

    COMA  desplazar e ir al estado 102

    $default  reduce usando la regla 32 (tipos)


estado 97

   58 listaFactores: COR_ABIERTO . factores COR_CERRADO

    CONTAR         desplazar e ir al estado 16
    PAR_ABIERTO    desplazar e ir al estado 65
    CONST_ENTERA   desplazar e ir al estado 18
    CONST_REAL     desplazar e ir al estado 19
    CONST_BINARIA  desplazar e ir al estado 20
    CONST_HEXA     desplazar e ir al estado 21
    ID             desplazar e ir al estado 22

    factor         ir al estado 103
    funcionContar  ir al estado 28
    factores       ir al estado 104


estado 98

   57 funcionContar: CONTAR PAR_ABIERTO cuenta PUNTO_COMA listaFactores . PAR_CERRADO

    PAR_CERRADO  desplazar e ir al estado 105


estado 99

   39 bloqueWhile: WHILE PAR_ABIERTO condicion PAR_CERRADO LLAVE_ABIERTO bloque . LLAVE_CERRADO

    LLAVE_CERRADO  desplazar e ir al estado 106


estado 100

   41 bloqueIf: IF PAR_ABIERTO condicion PAR_CERRADO LLAVE_ABIERTO bloque . LLAVE_CERRADO resto_if

    LLAVE_CERRADO  desplazar e ir al estado 107


estado 101

   30 listaTipos: OP_LE tipos OP_GE .

    $default  reduce usando la regla 30 (listaTipos)


estado 102

   31 tipos: tipoDeDato COMA . tipos

    INTEGER  desplazar e ir al estado 92
    FLOAT    desplazar e ir al estado 93
    STRING   desplazar e ir al estado 94

    tipos       ir al estado 108
    tipoDeDato  ir al estado 96


estado 103

   59 factores: factor . COMA factores
   60         | factor .

    COMA  desplazar e ir al estado 109

    $default  reduce usando la regla 60 (factores)


estado 104

   58 listaFactores: COR_ABIERTO factores . COR_CERRADO

    COR_CERRADO  desplazar e ir al estado 110


estado 105

   57 funcionContar: CONTAR PAR_ABIERTO cuenta PUNTO_COMA listaFactores PAR_CERRADO .

    $default  reduce usando la regla 57 (funcionContar)


estado 106

   39 bloqueWhile: WHILE PAR_ABIERTO condicion PAR_CERRADO LLAVE_ABIERTO bloque LLAVE_CERRADO .

    $default  reduce usando la regla 39 (bloqueWhile)


estado 107

   41 bloqueIf: IF PAR_ABIERTO condicion PAR_CERRADO LLAVE_ABIERTO bloque LLAVE_CERRADO . resto_if

    WHILE  desplazar e ir al estado 1
    IF     desplazar e ir al estado 2
    ELSE   desplazar e ir al estado 111
    PUT    desplazar e ir al estado 3
    GET    desplazar e ir al estado 4
    DIM    desplazar e ir al estado 5
    ID     desplazar e ir al estado 6

    sentencia    ir al estado 112
    asignacion   ir al estado 10
    declaracion  ir al estado 11
    salida       ir al estado 12
    entrada      ir al estado 13
    bloqueWhile  ir al estado 14
    bloqueIf     ir al estado 15
    resto_if     ir al estado 113


estado 108

   31 tipos: tipoDeDato COMA tipos .

    $default  reduce usando la regla 31 (tipos)


estado 109

   59 factores: factor COMA . factores

    CONTAR         desplazar e ir al estado 16
    PAR_ABIERTO    desplazar e ir al estado 65
    CONST_ENTERA   desplazar e ir al estado 18
    CONST_REAL     desplazar e ir al estado 19
    CONST_BINARIA  desplazar e ir al estado 20
    CONST_HEXA     desplazar e ir al estado 21
    ID             desplazar e ir al estado 22

    factor         ir al estado 103
    funcionContar  ir al estado 28
    factores       ir al estado 114


estado 110

   58 listaFactores: COR_ABIERTO factores COR_CERRADO .

    $default  reduce usando la regla 58 (listaFactores)


estado 111

   43 resto_if: ELSE . LLAVE_ABIERTO bloque LLAVE_CERRADO

    LLAVE_ABIERTO  desplazar e ir al estado 115


estado 112

   44 resto_if: sentencia .

    $default  reduce usando la regla 44 (resto_if)


estado 113

   41 bloqueIf: IF PAR_ABIERTO condicion PAR_CERRADO LLAVE_ABIERTO bloque LLAVE_CERRADO resto_if .

    $default  reduce usando la regla 41 (bloqueIf)


estado 114

   59 factores: factor COMA factores .

    $default  reduce usando la regla 59 (factores)


estado 115

   43 resto_if: ELSE LLAVE_ABIERTO . bloque LLAVE_CERRADO

    WHILE  desplazar e ir al estado 1
    IF     desplazar e ir al estado 2
    PUT    desplazar e ir al estado 3
    GET    desplazar e ir al estado 4
    DIM    desplazar e ir al estado 5
    ID     desplazar e ir al estado 6

    bloque       ir al estado 116
    sentencia    ir al estado 9
    asignacion   ir al estado 10
    declaracion  ir al estado 11
    salida       ir al estado 12
    entrada      ir al estado 13
    bloqueWhile  ir al estado 14
    bloqueIf     ir al estado 15


estado 116

   43 resto_if: ELSE LLAVE_ABIERTO bloque . LLAVE_CERRADO

    LLAVE_CERRADO  desplazar e ir al estado 117


estado 117

   43 resto_if: ELSE LLAVE_ABIERTO bloque LLAVE_CERRADO .

    $default  reduce usando la regla 43 (resto_if)
