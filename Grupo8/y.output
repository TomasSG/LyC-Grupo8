Terminals unused in grammar

   COMENTARIO


Gramática

    0 $accept: programa $end

    1 programa: bloque

    2 bloque: sentencia bloque
    3       | sentencia

    4 sentencia: asignacion PUNTO_COMA
    5          | declaracion PUNTO_COMA
    6          | salida PUNTO_COMA
    7          | entrada PUNTO_COMA
    8          | bloqueWhile
    9          | bloqueIf

   10 asignacion: ID OP_ASIGNACION cuenta

   11 cuenta: termino OP_SUMA cuenta
   12       | termino OP_RESTA cuenta
   13       | termino

   14 termino: factor OP_MULT termino
   15        | factor OP_DIVISION termino
   16        | factor

   17 factor: PAR_ABIERTO cuenta PAR_CERRADO
   18       | ID
   19       | CONST_BINARIA
   20       | CONST_HEXA
   21       | CONST_REAL
   22       | CONST_ENTERA
   23       | funcionContar

   24 declaracion: DIM listaVariables AS listaTipos

   25 listaVariables: OP_LE variables OP_GE

   26 variables: ID COMA variables
   27          | ID

   28 listaTipos: OP_LE tipos OP_GE

   29 tipos: tipoDeDato COMA tipos
   30      | tipoDeDato

   31 tipoDeDato: FLOAT
   32           | INTEGER
   33           | STRING

   34 salida: PUT ID
   35       | PUT CONST_STRING

   36 entrada: GET ID

   37 bloqueWhile: WHILE PAR_ABIERTO condicion PAR_CERRADO LLAVE_ABIERTO bloque LLAVE_CERRADO
   38            | WHILE condicion sentencia

   39 bloqueIf: IF PAR_ABIERTO condicion PAR_CERRADO LLAVE_ABIERTO bloque LLAVE_CERRADO resto_if
   40         | IF PAR_ABIERTO condicion PAR_CERRADO sentencia

   41 resto_if: ELSE LLAVE_ABIERTO bloque LLAVE_CERRADO
   42         | sentencia

   43 condicion: expLogica OP_AND condicion
   44          | expLogica OP_OR condicion
   45          | expLogica

   46 expLogica: PAR_ABIERTO condicion PAR_CERRADO
   47          | cuenta comparador cuenta

   48 comparador: OP_IGUAL
   49           | OP_LE
   50           | OP_LEQ
   51           | OP_GE
   52           | OP_GEQ
   53           | OP_NE
   54           | OP_NOT

   55 funcionContar: CONTAR PAR_ABIERTO cuenta PUNTO_COMA listaFactores PAR_CERRADO

   56 listaFactores: COR_ABIERTO factores COR_CERRADO

   57 factores: factor COMA factores
   58         | factor


Terminales con las reglas donde aparecen

$end (0) 0
error (256)
WHILE (258) 37 38
IF (259) 39 40
ELSE (260) 41
PUT (261) 34 35
GET (262) 36
DIM (263) 24
AS (264) 24
CONTAR (265) 55
INTEGER (266) 32
FLOAT (267) 31
STRING (268) 33
LLAVE_ABIERTO (269) 37 39 41
LLAVE_CERRADO (270) 37 39 41
PAR_ABIERTO (271) 17 37 39 40 46 55
PAR_CERRADO (272) 17 37 39 40 46 55
COR_ABIERTO (273) 56
COR_CERRADO (274) 56
PUNTO_COMA (275) 4 5 6 7 55
COMA (276) 26 29 57
OP_ASIGNACION (277) 10
OP_SUMA (278) 11
OP_RESTA (279) 12
OP_DIVISION (280) 15
OP_MULT (281) 14
OP_LE (282) 25 28 49
OP_LEQ (283) 50
OP_GE (284) 25 28 51
OP_GEQ (285) 52
OP_NE (286) 53
OP_IGUAL (287) 48
OP_AND (288) 43
OP_OR (289) 44
OP_NOT (290) 54
CONST_ENTERA (291) 22
CONST_REAL (292) 21
CONST_STRING (293) 35
CONST_BINARIA (294) 19
CONST_HEXA (295) 20
ID (296) 10 18 26 27 34 36
COMENTARIO (297)


No terminales con las reglas donde aparecen

$accept (43)
    en la izquierda: 0
programa (44)
    en la izquierda: 1, en la derecha: 0
bloque (45)
    en la izquierda: 2 3, en la derecha: 1 2 37 39 41
sentencia (46)
    en la izquierda: 4 5 6 7 8 9, en la derecha: 2 3 38 40 42
asignacion (47)
    en la izquierda: 10, en la derecha: 4
cuenta (48)
    en la izquierda: 11 12 13, en la derecha: 10 11 12 17 47 55
termino (49)
    en la izquierda: 14 15 16, en la derecha: 11 12 13 14 15
factor (50)
    en la izquierda: 17 18 19 20 21 22 23, en la derecha: 14 15 16
    57 58
declaracion (51)
    en la izquierda: 24, en la derecha: 5
listaVariables (52)
    en la izquierda: 25, en la derecha: 24
variables (53)
    en la izquierda: 26 27, en la derecha: 25 26
listaTipos (54)
    en la izquierda: 28, en la derecha: 24
tipos (55)
    en la izquierda: 29 30, en la derecha: 28 29
tipoDeDato (56)
    en la izquierda: 31 32 33, en la derecha: 29 30
salida (57)
    en la izquierda: 34 35, en la derecha: 6
entrada (58)
    en la izquierda: 36, en la derecha: 7
bloqueWhile (59)
    en la izquierda: 37 38, en la derecha: 8
bloqueIf (60)
    en la izquierda: 39 40, en la derecha: 9
resto_if (61)
    en la izquierda: 41 42, en la derecha: 39
condicion (62)
    en la izquierda: 43 44 45, en la derecha: 37 38 39 40 43 44 46
expLogica (63)
    en la izquierda: 46 47, en la derecha: 43 44 45
comparador (64)
    en la izquierda: 48 49 50 51 52 53 54, en la derecha: 47
funcionContar (65)
    en la izquierda: 55, en la derecha: 23
listaFactores (66)
    en la izquierda: 56, en la derecha: 55
factores (67)
    en la izquierda: 57 58, en la derecha: 56 57


estado 0

    0 $accept: . programa $end

    WHILE  desplazar e ir al estado 1
    IF     desplazar e ir al estado 2
    PUT    desplazar e ir al estado 3
    GET    desplazar e ir al estado 4
    DIM    desplazar e ir al estado 5
    ID     desplazar e ir al estado 6

    programa     ir al estado 7
    bloque       ir al estado 8
    sentencia    ir al estado 9
    asignacion   ir al estado 10
    declaracion  ir al estado 11
    salida       ir al estado 12
    entrada      ir al estado 13
    bloqueWhile  ir al estado 14
    bloqueIf     ir al estado 15


estado 1

   37 bloqueWhile: WHILE . PAR_ABIERTO condicion PAR_CERRADO LLAVE_ABIERTO bloque LLAVE_CERRADO
   38            | WHILE . condicion sentencia

    CONTAR         desplazar e ir al estado 16
    PAR_ABIERTO    desplazar e ir al estado 17
    CONST_ENTERA   desplazar e ir al estado 18
    CONST_REAL     desplazar e ir al estado 19
    CONST_BINARIA  desplazar e ir al estado 20
    CONST_HEXA     desplazar e ir al estado 21
    ID             desplazar e ir al estado 22

    cuenta         ir al estado 23
    termino        ir al estado 24
    factor         ir al estado 25
    condicion      ir al estado 26
    expLogica      ir al estado 27
    funcionContar  ir al estado 28


estado 2

   39 bloqueIf: IF . PAR_ABIERTO condicion PAR_CERRADO LLAVE_ABIERTO bloque LLAVE_CERRADO resto_if
   40         | IF . PAR_ABIERTO condicion PAR_CERRADO sentencia

    PAR_ABIERTO  desplazar e ir al estado 29


estado 3

   34 salida: PUT . ID
   35       | PUT . CONST_STRING

    CONST_STRING  desplazar e ir al estado 30
    ID            desplazar e ir al estado 31


estado 4

   36 entrada: GET . ID

    ID  desplazar e ir al estado 32


estado 5

   24 declaracion: DIM . listaVariables AS listaTipos

    OP_LE  desplazar e ir al estado 33

    listaVariables  ir al estado 34


estado 6

   10 asignacion: ID . OP_ASIGNACION cuenta

    OP_ASIGNACION  desplazar e ir al estado 35


estado 7

    0 $accept: programa . $end

    $end  desplazar e ir al estado 36


estado 8

    1 programa: bloque .

    $default  reduce usando la regla 1 (programa)


estado 9

    2 bloque: sentencia . bloque
    3       | sentencia .

    WHILE  desplazar e ir al estado 1
    IF     desplazar e ir al estado 2
    PUT    desplazar e ir al estado 3
    GET    desplazar e ir al estado 4
    DIM    desplazar e ir al estado 5
    ID     desplazar e ir al estado 6

    $default  reduce usando la regla 3 (bloque)

    bloque       ir al estado 37
    sentencia    ir al estado 9
    asignacion   ir al estado 10
    declaracion  ir al estado 11
    salida       ir al estado 12
    entrada      ir al estado 13
    bloqueWhile  ir al estado 14
    bloqueIf     ir al estado 15


estado 10

    4 sentencia: asignacion . PUNTO_COMA

    PUNTO_COMA  desplazar e ir al estado 38


estado 11

    5 sentencia: declaracion . PUNTO_COMA

    PUNTO_COMA  desplazar e ir al estado 39


estado 12

    6 sentencia: salida . PUNTO_COMA

    PUNTO_COMA  desplazar e ir al estado 40


estado 13

    7 sentencia: entrada . PUNTO_COMA

    PUNTO_COMA  desplazar e ir al estado 41


estado 14

    8 sentencia: bloqueWhile .

    $default  reduce usando la regla 8 (sentencia)


estado 15

    9 sentencia: bloqueIf .

    $default  reduce usando la regla 9 (sentencia)


estado 16

   55 funcionContar: CONTAR . PAR_ABIERTO cuenta PUNTO_COMA listaFactores PAR_CERRADO

    PAR_ABIERTO  desplazar e ir al estado 42


estado 17

   17 factor: PAR_ABIERTO . cuenta PAR_CERRADO
   37 bloqueWhile: WHILE PAR_ABIERTO . condicion PAR_CERRADO LLAVE_ABIERTO bloque LLAVE_CERRADO
   46 expLogica: PAR_ABIERTO . condicion PAR_CERRADO

    CONTAR         desplazar e ir al estado 16
    PAR_ABIERTO    desplazar e ir al estado 43
    CONST_ENTERA   desplazar e ir al estado 18
    CONST_REAL     desplazar e ir al estado 19
    CONST_BINARIA  desplazar e ir al estado 20
    CONST_HEXA     desplazar e ir al estado 21
    ID             desplazar e ir al estado 22

    cuenta         ir al estado 44
    termino        ir al estado 24
    factor         ir al estado 25
    condicion      ir al estado 45
    expLogica      ir al estado 27
    funcionContar  ir al estado 28


estado 18

   22 factor: CONST_ENTERA .

    $default  reduce usando la regla 22 (factor)


estado 19

   21 factor: CONST_REAL .

    $default  reduce usando la regla 21 (factor)


estado 20

   19 factor: CONST_BINARIA .

    $default  reduce usando la regla 19 (factor)


estado 21

   20 factor: CONST_HEXA .

    $default  reduce usando la regla 20 (factor)


estado 22

   18 factor: ID .

    $default  reduce usando la regla 18 (factor)


estado 23

   47 expLogica: cuenta . comparador cuenta

    OP_LE     desplazar e ir al estado 46
    OP_LEQ    desplazar e ir al estado 47
    OP_GE     desplazar e ir al estado 48
    OP_GEQ    desplazar e ir al estado 49
    OP_NE     desplazar e ir al estado 50
    OP_IGUAL  desplazar e ir al estado 51
    OP_NOT    desplazar e ir al estado 52

    comparador  ir al estado 53


estado 24

   11 cuenta: termino . OP_SUMA cuenta
   12       | termino . OP_RESTA cuenta
   13       | termino .

    OP_SUMA   desplazar e ir al estado 54
    OP_RESTA  desplazar e ir al estado 55

    $default  reduce usando la regla 13 (cuenta)


estado 25

   14 termino: factor . OP_MULT termino
   15        | factor . OP_DIVISION termino
   16        | factor .

    OP_DIVISION  desplazar e ir al estado 56
    OP_MULT      desplazar e ir al estado 57

    $default  reduce usando la regla 16 (termino)


estado 26

   38 bloqueWhile: WHILE condicion . sentencia

    WHILE  desplazar e ir al estado 1
    IF     desplazar e ir al estado 2
    PUT    desplazar e ir al estado 3
    GET    desplazar e ir al estado 4
    DIM    desplazar e ir al estado 5
    ID     desplazar e ir al estado 6

    sentencia    ir al estado 58
    asignacion   ir al estado 10
    declaracion  ir al estado 11
    salida       ir al estado 12
    entrada      ir al estado 13
    bloqueWhile  ir al estado 14
    bloqueIf     ir al estado 15


estado 27

   43 condicion: expLogica . OP_AND condicion
   44          | expLogica . OP_OR condicion
   45          | expLogica .

    OP_AND  desplazar e ir al estado 59
    OP_OR   desplazar e ir al estado 60

    $default  reduce usando la regla 45 (condicion)


estado 28

   23 factor: funcionContar .

    $default  reduce usando la regla 23 (factor)


estado 29

   39 bloqueIf: IF PAR_ABIERTO . condicion PAR_CERRADO LLAVE_ABIERTO bloque LLAVE_CERRADO resto_if
   40         | IF PAR_ABIERTO . condicion PAR_CERRADO sentencia

    CONTAR         desplazar e ir al estado 16
    PAR_ABIERTO    desplazar e ir al estado 43
    CONST_ENTERA   desplazar e ir al estado 18
    CONST_REAL     desplazar e ir al estado 19
    CONST_BINARIA  desplazar e ir al estado 20
    CONST_HEXA     desplazar e ir al estado 21
    ID             desplazar e ir al estado 22

    cuenta         ir al estado 23
    termino        ir al estado 24
    factor         ir al estado 25
    condicion      ir al estado 61
    expLogica      ir al estado 27
    funcionContar  ir al estado 28


estado 30

   35 salida: PUT CONST_STRING .

    $default  reduce usando la regla 35 (salida)


estado 31

   34 salida: PUT ID .

    $default  reduce usando la regla 34 (salida)


estado 32

   36 entrada: GET ID .

    $default  reduce usando la regla 36 (entrada)


estado 33

   25 listaVariables: OP_LE . variables OP_GE

    ID  desplazar e ir al estado 62

    variables  ir al estado 63


estado 34

   24 declaracion: DIM listaVariables . AS listaTipos

    AS  desplazar e ir al estado 64


estado 35

   10 asignacion: ID OP_ASIGNACION . cuenta

    CONTAR         desplazar e ir al estado 16
    PAR_ABIERTO    desplazar e ir al estado 65
    CONST_ENTERA   desplazar e ir al estado 18
    CONST_REAL     desplazar e ir al estado 19
    CONST_BINARIA  desplazar e ir al estado 20
    CONST_HEXA     desplazar e ir al estado 21
    ID             desplazar e ir al estado 22

    cuenta         ir al estado 66
    termino        ir al estado 24
    factor         ir al estado 25
    funcionContar  ir al estado 28


estado 36

    0 $accept: programa $end .

    $default  aceptar


estado 37

    2 bloque: sentencia bloque .

    $default  reduce usando la regla 2 (bloque)


estado 38

    4 sentencia: asignacion PUNTO_COMA .

    $default  reduce usando la regla 4 (sentencia)


estado 39

    5 sentencia: declaracion PUNTO_COMA .

    $default  reduce usando la regla 5 (sentencia)


estado 40

    6 sentencia: salida PUNTO_COMA .

    $default  reduce usando la regla 6 (sentencia)


estado 41

    7 sentencia: entrada PUNTO_COMA .

    $default  reduce usando la regla 7 (sentencia)


estado 42

   55 funcionContar: CONTAR PAR_ABIERTO . cuenta PUNTO_COMA listaFactores PAR_CERRADO

    CONTAR         desplazar e ir al estado 16
    PAR_ABIERTO    desplazar e ir al estado 65
    CONST_ENTERA   desplazar e ir al estado 18
    CONST_REAL     desplazar e ir al estado 19
    CONST_BINARIA  desplazar e ir al estado 20
    CONST_HEXA     desplazar e ir al estado 21
    ID             desplazar e ir al estado 22

    cuenta         ir al estado 67
    termino        ir al estado 24
    factor         ir al estado 25
    funcionContar  ir al estado 28


estado 43

   17 factor: PAR_ABIERTO . cuenta PAR_CERRADO
   46 expLogica: PAR_ABIERTO . condicion PAR_CERRADO

    CONTAR         desplazar e ir al estado 16
    PAR_ABIERTO    desplazar e ir al estado 43
    CONST_ENTERA   desplazar e ir al estado 18
    CONST_REAL     desplazar e ir al estado 19
    CONST_BINARIA  desplazar e ir al estado 20
    CONST_HEXA     desplazar e ir al estado 21
    ID             desplazar e ir al estado 22

    cuenta         ir al estado 44
    termino        ir al estado 24
    factor         ir al estado 25
    condicion      ir al estado 68
    expLogica      ir al estado 27
    funcionContar  ir al estado 28


estado 44

   17 factor: PAR_ABIERTO cuenta . PAR_CERRADO
   47 expLogica: cuenta . comparador cuenta

    PAR_CERRADO  desplazar e ir al estado 69
    OP_LE        desplazar e ir al estado 46
    OP_LEQ       desplazar e ir al estado 47
    OP_GE        desplazar e ir al estado 48
    OP_GEQ       desplazar e ir al estado 49
    OP_NE        desplazar e ir al estado 50
    OP_IGUAL     desplazar e ir al estado 51
    OP_NOT       desplazar e ir al estado 52

    comparador  ir al estado 53


estado 45

   37 bloqueWhile: WHILE PAR_ABIERTO condicion . PAR_CERRADO LLAVE_ABIERTO bloque LLAVE_CERRADO
   46 expLogica: PAR_ABIERTO condicion . PAR_CERRADO

    PAR_CERRADO  desplazar e ir al estado 70


estado 46

   49 comparador: OP_LE .

    $default  reduce usando la regla 49 (comparador)


estado 47

   50 comparador: OP_LEQ .

    $default  reduce usando la regla 50 (comparador)


estado 48

   51 comparador: OP_GE .

    $default  reduce usando la regla 51 (comparador)


estado 49

   52 comparador: OP_GEQ .

    $default  reduce usando la regla 52 (comparador)


estado 50

   53 comparador: OP_NE .

    $default  reduce usando la regla 53 (comparador)


estado 51

   48 comparador: OP_IGUAL .

    $default  reduce usando la regla 48 (comparador)


estado 52

   54 comparador: OP_NOT .

    $default  reduce usando la regla 54 (comparador)


estado 53

   47 expLogica: cuenta comparador . cuenta

    CONTAR         desplazar e ir al estado 16
    PAR_ABIERTO    desplazar e ir al estado 65
    CONST_ENTERA   desplazar e ir al estado 18
    CONST_REAL     desplazar e ir al estado 19
    CONST_BINARIA  desplazar e ir al estado 20
    CONST_HEXA     desplazar e ir al estado 21
    ID             desplazar e ir al estado 22

    cuenta         ir al estado 71
    termino        ir al estado 24
    factor         ir al estado 25
    funcionContar  ir al estado 28


estado 54

   11 cuenta: termino OP_SUMA . cuenta

    CONTAR         desplazar e ir al estado 16
    PAR_ABIERTO    desplazar e ir al estado 65
    CONST_ENTERA   desplazar e ir al estado 18
    CONST_REAL     desplazar e ir al estado 19
    CONST_BINARIA  desplazar e ir al estado 20
    CONST_HEXA     desplazar e ir al estado 21
    ID             desplazar e ir al estado 22

    cuenta         ir al estado 72
    termino        ir al estado 24
    factor         ir al estado 25
    funcionContar  ir al estado 28


estado 55

   12 cuenta: termino OP_RESTA . cuenta

    CONTAR         desplazar e ir al estado 16
    PAR_ABIERTO    desplazar e ir al estado 65
    CONST_ENTERA   desplazar e ir al estado 18
    CONST_REAL     desplazar e ir al estado 19
    CONST_BINARIA  desplazar e ir al estado 20
    CONST_HEXA     desplazar e ir al estado 21
    ID             desplazar e ir al estado 22

    cuenta         ir al estado 73
    termino        ir al estado 24
    factor         ir al estado 25
    funcionContar  ir al estado 28


estado 56

   15 termino: factor OP_DIVISION . termino

    CONTAR         desplazar e ir al estado 16
    PAR_ABIERTO    desplazar e ir al estado 65
    CONST_ENTERA   desplazar e ir al estado 18
    CONST_REAL     desplazar e ir al estado 19
    CONST_BINARIA  desplazar e ir al estado 20
    CONST_HEXA     desplazar e ir al estado 21
    ID             desplazar e ir al estado 22

    termino        ir al estado 74
    factor         ir al estado 25
    funcionContar  ir al estado 28


estado 57

   14 termino: factor OP_MULT . termino

    CONTAR         desplazar e ir al estado 16
    PAR_ABIERTO    desplazar e ir al estado 65
    CONST_ENTERA   desplazar e ir al estado 18
    CONST_REAL     desplazar e ir al estado 19
    CONST_BINARIA  desplazar e ir al estado 20
    CONST_HEXA     desplazar e ir al estado 21
    ID             desplazar e ir al estado 22

    termino        ir al estado 75
    factor         ir al estado 25
    funcionContar  ir al estado 28


estado 58

   38 bloqueWhile: WHILE condicion sentencia .

    $default  reduce usando la regla 38 (bloqueWhile)


estado 59

   43 condicion: expLogica OP_AND . condicion

    CONTAR         desplazar e ir al estado 16
    PAR_ABIERTO    desplazar e ir al estado 43
    CONST_ENTERA   desplazar e ir al estado 18
    CONST_REAL     desplazar e ir al estado 19
    CONST_BINARIA  desplazar e ir al estado 20
    CONST_HEXA     desplazar e ir al estado 21
    ID             desplazar e ir al estado 22

    cuenta         ir al estado 23
    termino        ir al estado 24
    factor         ir al estado 25
    condicion      ir al estado 76
    expLogica      ir al estado 27
    funcionContar  ir al estado 28


estado 60

   44 condicion: expLogica OP_OR . condicion

    CONTAR         desplazar e ir al estado 16
    PAR_ABIERTO    desplazar e ir al estado 43
    CONST_ENTERA   desplazar e ir al estado 18
    CONST_REAL     desplazar e ir al estado 19
    CONST_BINARIA  desplazar e ir al estado 20
    CONST_HEXA     desplazar e ir al estado 21
    ID             desplazar e ir al estado 22

    cuenta         ir al estado 23
    termino        ir al estado 24
    factor         ir al estado 25
    condicion      ir al estado 77
    expLogica      ir al estado 27
    funcionContar  ir al estado 28


estado 61

   39 bloqueIf: IF PAR_ABIERTO condicion . PAR_CERRADO LLAVE_ABIERTO bloque LLAVE_CERRADO resto_if
   40         | IF PAR_ABIERTO condicion . PAR_CERRADO sentencia

    PAR_CERRADO  desplazar e ir al estado 78


estado 62

   26 variables: ID . COMA variables
   27          | ID .

    COMA  desplazar e ir al estado 79

    $default  reduce usando la regla 27 (variables)


estado 63

   25 listaVariables: OP_LE variables . OP_GE

    OP_GE  desplazar e ir al estado 80


estado 64

   24 declaracion: DIM listaVariables AS . listaTipos

    OP_LE  desplazar e ir al estado 81

    listaTipos  ir al estado 82


estado 65

   17 factor: PAR_ABIERTO . cuenta PAR_CERRADO

    CONTAR         desplazar e ir al estado 16
    PAR_ABIERTO    desplazar e ir al estado 65
    CONST_ENTERA   desplazar e ir al estado 18
    CONST_REAL     desplazar e ir al estado 19
    CONST_BINARIA  desplazar e ir al estado 20
    CONST_HEXA     desplazar e ir al estado 21
    ID             desplazar e ir al estado 22

    cuenta         ir al estado 83
    termino        ir al estado 24
    factor         ir al estado 25
    funcionContar  ir al estado 28


estado 66

   10 asignacion: ID OP_ASIGNACION cuenta .

    $default  reduce usando la regla 10 (asignacion)


estado 67

   55 funcionContar: CONTAR PAR_ABIERTO cuenta . PUNTO_COMA listaFactores PAR_CERRADO

    PUNTO_COMA  desplazar e ir al estado 84


estado 68

   46 expLogica: PAR_ABIERTO condicion . PAR_CERRADO

    PAR_CERRADO  desplazar e ir al estado 85


estado 69

   17 factor: PAR_ABIERTO cuenta PAR_CERRADO .

    $default  reduce usando la regla 17 (factor)


estado 70

   37 bloqueWhile: WHILE PAR_ABIERTO condicion PAR_CERRADO . LLAVE_ABIERTO bloque LLAVE_CERRADO
   46 expLogica: PAR_ABIERTO condicion PAR_CERRADO .

    LLAVE_ABIERTO  desplazar e ir al estado 86

    $default  reduce usando la regla 46 (expLogica)


estado 71

   47 expLogica: cuenta comparador cuenta .

    $default  reduce usando la regla 47 (expLogica)


estado 72

   11 cuenta: termino OP_SUMA cuenta .

    $default  reduce usando la regla 11 (cuenta)


estado 73

   12 cuenta: termino OP_RESTA cuenta .

    $default  reduce usando la regla 12 (cuenta)


estado 74

   15 termino: factor OP_DIVISION termino .

    $default  reduce usando la regla 15 (termino)


estado 75

   14 termino: factor OP_MULT termino .

    $default  reduce usando la regla 14 (termino)


estado 76

   43 condicion: expLogica OP_AND condicion .

    $default  reduce usando la regla 43 (condicion)


estado 77

   44 condicion: expLogica OP_OR condicion .

    $default  reduce usando la regla 44 (condicion)


estado 78

   39 bloqueIf: IF PAR_ABIERTO condicion PAR_CERRADO . LLAVE_ABIERTO bloque LLAVE_CERRADO resto_if
   40         | IF PAR_ABIERTO condicion PAR_CERRADO . sentencia

    WHILE          desplazar e ir al estado 1
    IF             desplazar e ir al estado 2
    PUT            desplazar e ir al estado 3
    GET            desplazar e ir al estado 4
    DIM            desplazar e ir al estado 5
    LLAVE_ABIERTO  desplazar e ir al estado 87
    ID             desplazar e ir al estado 6

    sentencia    ir al estado 88
    asignacion   ir al estado 10
    declaracion  ir al estado 11
    salida       ir al estado 12
    entrada      ir al estado 13
    bloqueWhile  ir al estado 14
    bloqueIf     ir al estado 15


estado 79

   26 variables: ID COMA . variables

    ID  desplazar e ir al estado 62

    variables  ir al estado 89


estado 80

   25 listaVariables: OP_LE variables OP_GE .

    $default  reduce usando la regla 25 (listaVariables)


estado 81

   28 listaTipos: OP_LE . tipos OP_GE

    INTEGER  desplazar e ir al estado 90
    FLOAT    desplazar e ir al estado 91
    STRING   desplazar e ir al estado 92

    tipos       ir al estado 93
    tipoDeDato  ir al estado 94


estado 82

   24 declaracion: DIM listaVariables AS listaTipos .

    $default  reduce usando la regla 24 (declaracion)


estado 83

   17 factor: PAR_ABIERTO cuenta . PAR_CERRADO

    PAR_CERRADO  desplazar e ir al estado 69


estado 84

   55 funcionContar: CONTAR PAR_ABIERTO cuenta PUNTO_COMA . listaFactores PAR_CERRADO

    COR_ABIERTO  desplazar e ir al estado 95

    listaFactores  ir al estado 96


estado 85

   46 expLogica: PAR_ABIERTO condicion PAR_CERRADO .

    $default  reduce usando la regla 46 (expLogica)


estado 86

   37 bloqueWhile: WHILE PAR_ABIERTO condicion PAR_CERRADO LLAVE_ABIERTO . bloque LLAVE_CERRADO

    WHILE  desplazar e ir al estado 1
    IF     desplazar e ir al estado 2
    PUT    desplazar e ir al estado 3
    GET    desplazar e ir al estado 4
    DIM    desplazar e ir al estado 5
    ID     desplazar e ir al estado 6

    bloque       ir al estado 97
    sentencia    ir al estado 9
    asignacion   ir al estado 10
    declaracion  ir al estado 11
    salida       ir al estado 12
    entrada      ir al estado 13
    bloqueWhile  ir al estado 14
    bloqueIf     ir al estado 15


estado 87

   39 bloqueIf: IF PAR_ABIERTO condicion PAR_CERRADO LLAVE_ABIERTO . bloque LLAVE_CERRADO resto_if

    WHILE  desplazar e ir al estado 1
    IF     desplazar e ir al estado 2
    PUT    desplazar e ir al estado 3
    GET    desplazar e ir al estado 4
    DIM    desplazar e ir al estado 5
    ID     desplazar e ir al estado 6

    bloque       ir al estado 98
    sentencia    ir al estado 9
    asignacion   ir al estado 10
    declaracion  ir al estado 11
    salida       ir al estado 12
    entrada      ir al estado 13
    bloqueWhile  ir al estado 14
    bloqueIf     ir al estado 15


estado 88

   40 bloqueIf: IF PAR_ABIERTO condicion PAR_CERRADO sentencia .

    $default  reduce usando la regla 40 (bloqueIf)


estado 89

   26 variables: ID COMA variables .

    $default  reduce usando la regla 26 (variables)


estado 90

   32 tipoDeDato: INTEGER .

    $default  reduce usando la regla 32 (tipoDeDato)


estado 91

   31 tipoDeDato: FLOAT .

    $default  reduce usando la regla 31 (tipoDeDato)


estado 92

   33 tipoDeDato: STRING .

    $default  reduce usando la regla 33 (tipoDeDato)


estado 93

   28 listaTipos: OP_LE tipos . OP_GE

    OP_GE  desplazar e ir al estado 99


estado 94

   29 tipos: tipoDeDato . COMA tipos
   30      | tipoDeDato .

    COMA  desplazar e ir al estado 100

    $default  reduce usando la regla 30 (tipos)


estado 95

   56 listaFactores: COR_ABIERTO . factores COR_CERRADO

    CONTAR         desplazar e ir al estado 16
    PAR_ABIERTO    desplazar e ir al estado 65
    CONST_ENTERA   desplazar e ir al estado 18
    CONST_REAL     desplazar e ir al estado 19
    CONST_BINARIA  desplazar e ir al estado 20
    CONST_HEXA     desplazar e ir al estado 21
    ID             desplazar e ir al estado 22

    factor         ir al estado 101
    funcionContar  ir al estado 28
    factores       ir al estado 102


estado 96

   55 funcionContar: CONTAR PAR_ABIERTO cuenta PUNTO_COMA listaFactores . PAR_CERRADO

    PAR_CERRADO  desplazar e ir al estado 103


estado 97

   37 bloqueWhile: WHILE PAR_ABIERTO condicion PAR_CERRADO LLAVE_ABIERTO bloque . LLAVE_CERRADO

    LLAVE_CERRADO  desplazar e ir al estado 104


estado 98

   39 bloqueIf: IF PAR_ABIERTO condicion PAR_CERRADO LLAVE_ABIERTO bloque . LLAVE_CERRADO resto_if

    LLAVE_CERRADO  desplazar e ir al estado 105


estado 99

   28 listaTipos: OP_LE tipos OP_GE .

    $default  reduce usando la regla 28 (listaTipos)


estado 100

   29 tipos: tipoDeDato COMA . tipos

    INTEGER  desplazar e ir al estado 90
    FLOAT    desplazar e ir al estado 91
    STRING   desplazar e ir al estado 92

    tipos       ir al estado 106
    tipoDeDato  ir al estado 94


estado 101

   57 factores: factor . COMA factores
   58         | factor .

    COMA  desplazar e ir al estado 107

    $default  reduce usando la regla 58 (factores)


estado 102

   56 listaFactores: COR_ABIERTO factores . COR_CERRADO

    COR_CERRADO  desplazar e ir al estado 108


estado 103

   55 funcionContar: CONTAR PAR_ABIERTO cuenta PUNTO_COMA listaFactores PAR_CERRADO .

    $default  reduce usando la regla 55 (funcionContar)


estado 104

   37 bloqueWhile: WHILE PAR_ABIERTO condicion PAR_CERRADO LLAVE_ABIERTO bloque LLAVE_CERRADO .

    $default  reduce usando la regla 37 (bloqueWhile)


estado 105

   39 bloqueIf: IF PAR_ABIERTO condicion PAR_CERRADO LLAVE_ABIERTO bloque LLAVE_CERRADO . resto_if

    WHILE  desplazar e ir al estado 1
    IF     desplazar e ir al estado 2
    ELSE   desplazar e ir al estado 109
    PUT    desplazar e ir al estado 3
    GET    desplazar e ir al estado 4
    DIM    desplazar e ir al estado 5
    ID     desplazar e ir al estado 6

    sentencia    ir al estado 110
    asignacion   ir al estado 10
    declaracion  ir al estado 11
    salida       ir al estado 12
    entrada      ir al estado 13
    bloqueWhile  ir al estado 14
    bloqueIf     ir al estado 15
    resto_if     ir al estado 111


estado 106

   29 tipos: tipoDeDato COMA tipos .

    $default  reduce usando la regla 29 (tipos)


estado 107

   57 factores: factor COMA . factores

    CONTAR         desplazar e ir al estado 16
    PAR_ABIERTO    desplazar e ir al estado 65
    CONST_ENTERA   desplazar e ir al estado 18
    CONST_REAL     desplazar e ir al estado 19
    CONST_BINARIA  desplazar e ir al estado 20
    CONST_HEXA     desplazar e ir al estado 21
    ID             desplazar e ir al estado 22

    factor         ir al estado 101
    funcionContar  ir al estado 28
    factores       ir al estado 112


estado 108

   56 listaFactores: COR_ABIERTO factores COR_CERRADO .

    $default  reduce usando la regla 56 (listaFactores)


estado 109

   41 resto_if: ELSE . LLAVE_ABIERTO bloque LLAVE_CERRADO

    LLAVE_ABIERTO  desplazar e ir al estado 113


estado 110

   42 resto_if: sentencia .

    $default  reduce usando la regla 42 (resto_if)


estado 111

   39 bloqueIf: IF PAR_ABIERTO condicion PAR_CERRADO LLAVE_ABIERTO bloque LLAVE_CERRADO resto_if .

    $default  reduce usando la regla 39 (bloqueIf)


estado 112

   57 factores: factor COMA factores .

    $default  reduce usando la regla 57 (factores)


estado 113

   41 resto_if: ELSE LLAVE_ABIERTO . bloque LLAVE_CERRADO

    WHILE  desplazar e ir al estado 1
    IF     desplazar e ir al estado 2
    PUT    desplazar e ir al estado 3
    GET    desplazar e ir al estado 4
    DIM    desplazar e ir al estado 5
    ID     desplazar e ir al estado 6

    bloque       ir al estado 114
    sentencia    ir al estado 9
    asignacion   ir al estado 10
    declaracion  ir al estado 11
    salida       ir al estado 12
    entrada      ir al estado 13
    bloqueWhile  ir al estado 14
    bloqueIf     ir al estado 15


estado 114

   41 resto_if: ELSE LLAVE_ABIERTO bloque . LLAVE_CERRADO

    LLAVE_CERRADO  desplazar e ir al estado 115


estado 115

   41 resto_if: ELSE LLAVE_ABIERTO bloque LLAVE_CERRADO .

    $default  reduce usando la regla 41 (resto_if)
