Gramática

    0 $accept: programa $end

    1 programa: bloque

    2 bloque: sentencia bloque
    3       | sentencia

    4 sentencia: asignacion PUNTO_COMA
    5          | declaracion PUNTO_COMA
    6          | salida PUNTO_COMA
    7          | entrada PUNTO_COMA
    8          | bloqueWhile
    9          | bloqueIf

   10 asignacion: ID OP_ASIGNACION cuenta

   11 cuenta: termino OP_SUMA cuenta
   12       | termino OP_RESTA cuenta
   13       | termino

   14 termino: factor OP_MULT termino
   15        | factor OP_DIVISION termino
   16        | factor

   17 factor: PAR_ABIERTO cuenta PAR_CERRADO
   18       | ID
   19       | constante
   20       | funcionContar

   21 declaracion: DIM listaVariables AS listaTipos

   22 listaVariables: OP_LE variables OP_GE

   23 variables: ID COMA variables
   24          | ID

   25 listaTipos: OP_LE tipos OP_GE

   26 tipos: tipoDeDato COMA tipos
   27      | tipoDeDato

   28 tipoDeDato: FLOAT
   29           | INTEGER
   30           | STRING

   31 salida: PUT ID
   32       | PUT CONST_STRING

   33 entrada: GET ID

   34 bloqueWhile: WHILE PAR_ABIERTO condicion PAR_CERRADO LLAVE_ABIERTO bloque LLAVE_CERRADO
   35            | WHILE PAR_ABIERTO condicion PAR_CERRADO sentencia

   36 bloqueIf: IF PAR_ABIERTO condicion PAR_CERRADO LLAVE_ABIERTO bloque LLAVE_CERRADO resto_if
   37         | IF PAR_ABIERTO condicion PAR_CERRADO sentencia

   38 resto_if: ELSE LLAVE_ABIERTO bloque LLAVE_CERRADO
   39         | sentencia

   40 condicion: expLogica OP_AND expLogica
   41          | expLogica OP_OR expLogica
   42          | OP_NOT expLogica
   43          | expLogica

   44 expLogica: PAR_ABIERTO condicion PAR_CERRADO
   45          | cuenta comparador cuenta

   46 comparador: OP_IGUAL
   47           | OP_LE
   48           | OP_LEQ
   49           | OP_GE
   50           | OP_GEQ
   51           | OP_NE

   52 funcionContar: CONTAR PAR_ABIERTO cuenta PUNTO_COMA listaConstantes PAR_CERRADO

   53 listaConstantes: COR_ABIERTO constantes COR_CERRADO

   54 constantes: constante COMA constantes
   55           | constante

   56 constante: CONST_BINARIA
   57          | CONST_HEXA
   58          | CONST_REAL
   59          | CONST_ENTERA


Terminales con las reglas donde aparecen

$end (0) 0
error (256)
WHILE (258) 34 35
IF (259) 36 37
ELSE (260) 38
PUT (261) 31 32
GET (262) 33
DIM (263) 21
AS (264) 21
CONTAR (265) 52
INTEGER (266) 29
FLOAT (267) 28
STRING (268) 30
LLAVE_ABIERTO (269) 34 36 38
LLAVE_CERRADO (270) 34 36 38
PAR_ABIERTO (271) 17 34 35 36 37 44 52
PAR_CERRADO (272) 17 34 35 36 37 44 52
COR_ABIERTO (273) 53
COR_CERRADO (274) 53
PUNTO_COMA (275) 4 5 6 7 52
COMA (276) 23 26 54
OP_ASIGNACION (277) 10
OP_SUMA (278) 11
OP_RESTA (279) 12
OP_DIVISION (280) 15
OP_MULT (281) 14
OP_LE (282) 22 25 47
OP_LEQ (283) 48
OP_GE (284) 22 25 49
OP_GEQ (285) 50
OP_NE (286) 51
OP_IGUAL (287) 46
OP_AND (288) 40
OP_OR (289) 41
OP_NOT (290) 42
CONST_ENTERA (291) 59
CONST_REAL (292) 58
CONST_STRING (293) 32
CONST_BINARIA (294) 56
CONST_HEXA (295) 57
ID (296) 10 18 23 24 31 33


No terminales con las reglas donde aparecen

$accept (42)
    en la izquierda: 0
programa (43)
    en la izquierda: 1, en la derecha: 0
bloque (44)
    en la izquierda: 2 3, en la derecha: 1 2 34 36 38
sentencia (45)
    en la izquierda: 4 5 6 7 8 9, en la derecha: 2 3 35 37 39
asignacion (46)
    en la izquierda: 10, en la derecha: 4
cuenta (47)
    en la izquierda: 11 12 13, en la derecha: 10 11 12 17 45 52
termino (48)
    en la izquierda: 14 15 16, en la derecha: 11 12 13 14 15
factor (49)
    en la izquierda: 17 18 19 20, en la derecha: 14 15 16
declaracion (50)
    en la izquierda: 21, en la derecha: 5
listaVariables (51)
    en la izquierda: 22, en la derecha: 21
variables (52)
    en la izquierda: 23 24, en la derecha: 22 23
listaTipos (53)
    en la izquierda: 25, en la derecha: 21
tipos (54)
    en la izquierda: 26 27, en la derecha: 25 26
tipoDeDato (55)
    en la izquierda: 28 29 30, en la derecha: 26 27
salida (56)
    en la izquierda: 31 32, en la derecha: 6
entrada (57)
    en la izquierda: 33, en la derecha: 7
bloqueWhile (58)
    en la izquierda: 34 35, en la derecha: 8
bloqueIf (59)
    en la izquierda: 36 37, en la derecha: 9
resto_if (60)
    en la izquierda: 38 39, en la derecha: 36
condicion (61)
    en la izquierda: 40 41 42 43, en la derecha: 34 35 36 37 44
expLogica (62)
    en la izquierda: 44 45, en la derecha: 40 41 42 43
comparador (63)
    en la izquierda: 46 47 48 49 50 51, en la derecha: 45
funcionContar (64)
    en la izquierda: 52, en la derecha: 20
listaConstantes (65)
    en la izquierda: 53, en la derecha: 52
constantes (66)
    en la izquierda: 54 55, en la derecha: 53 54
constante (67)
    en la izquierda: 56 57 58 59, en la derecha: 19 54 55


estado 0

    0 $accept: . programa $end

    WHILE  desplazar e ir al estado 1
    IF     desplazar e ir al estado 2
    PUT    desplazar e ir al estado 3
    GET    desplazar e ir al estado 4
    DIM    desplazar e ir al estado 5
    ID     desplazar e ir al estado 6

    programa     ir al estado 7
    bloque       ir al estado 8
    sentencia    ir al estado 9
    asignacion   ir al estado 10
    declaracion  ir al estado 11
    salida       ir al estado 12
    entrada      ir al estado 13
    bloqueWhile  ir al estado 14
    bloqueIf     ir al estado 15


estado 1

   34 bloqueWhile: WHILE . PAR_ABIERTO condicion PAR_CERRADO LLAVE_ABIERTO bloque LLAVE_CERRADO
   35            | WHILE . PAR_ABIERTO condicion PAR_CERRADO sentencia

    PAR_ABIERTO  desplazar e ir al estado 16


estado 2

   36 bloqueIf: IF . PAR_ABIERTO condicion PAR_CERRADO LLAVE_ABIERTO bloque LLAVE_CERRADO resto_if
   37         | IF . PAR_ABIERTO condicion PAR_CERRADO sentencia

    PAR_ABIERTO  desplazar e ir al estado 17


estado 3

   31 salida: PUT . ID
   32       | PUT . CONST_STRING

    CONST_STRING  desplazar e ir al estado 18
    ID            desplazar e ir al estado 19


estado 4

   33 entrada: GET . ID

    ID  desplazar e ir al estado 20


estado 5

   21 declaracion: DIM . listaVariables AS listaTipos

    OP_LE  desplazar e ir al estado 21

    listaVariables  ir al estado 22


estado 6

   10 asignacion: ID . OP_ASIGNACION cuenta

    OP_ASIGNACION  desplazar e ir al estado 23


estado 7

    0 $accept: programa . $end

    $end  desplazar e ir al estado 24


estado 8

    1 programa: bloque .

    $default  reduce usando la regla 1 (programa)


estado 9

    2 bloque: sentencia . bloque
    3       | sentencia .

    WHILE  desplazar e ir al estado 1
    IF     desplazar e ir al estado 2
    PUT    desplazar e ir al estado 3
    GET    desplazar e ir al estado 4
    DIM    desplazar e ir al estado 5
    ID     desplazar e ir al estado 6

    $default  reduce usando la regla 3 (bloque)

    bloque       ir al estado 25
    sentencia    ir al estado 9
    asignacion   ir al estado 10
    declaracion  ir al estado 11
    salida       ir al estado 12
    entrada      ir al estado 13
    bloqueWhile  ir al estado 14
    bloqueIf     ir al estado 15


estado 10

    4 sentencia: asignacion . PUNTO_COMA

    PUNTO_COMA  desplazar e ir al estado 26


estado 11

    5 sentencia: declaracion . PUNTO_COMA

    PUNTO_COMA  desplazar e ir al estado 27


estado 12

    6 sentencia: salida . PUNTO_COMA

    PUNTO_COMA  desplazar e ir al estado 28


estado 13

    7 sentencia: entrada . PUNTO_COMA

    PUNTO_COMA  desplazar e ir al estado 29


estado 14

    8 sentencia: bloqueWhile .

    $default  reduce usando la regla 8 (sentencia)


estado 15

    9 sentencia: bloqueIf .

    $default  reduce usando la regla 9 (sentencia)


estado 16

   34 bloqueWhile: WHILE PAR_ABIERTO . condicion PAR_CERRADO LLAVE_ABIERTO bloque LLAVE_CERRADO
   35            | WHILE PAR_ABIERTO . condicion PAR_CERRADO sentencia

    CONTAR         desplazar e ir al estado 30
    PAR_ABIERTO    desplazar e ir al estado 31
    OP_NOT         desplazar e ir al estado 32
    CONST_ENTERA   desplazar e ir al estado 33
    CONST_REAL     desplazar e ir al estado 34
    CONST_BINARIA  desplazar e ir al estado 35
    CONST_HEXA     desplazar e ir al estado 36
    ID             desplazar e ir al estado 37

    cuenta         ir al estado 38
    termino        ir al estado 39
    factor         ir al estado 40
    condicion      ir al estado 41
    expLogica      ir al estado 42
    funcionContar  ir al estado 43
    constante      ir al estado 44


estado 17

   36 bloqueIf: IF PAR_ABIERTO . condicion PAR_CERRADO LLAVE_ABIERTO bloque LLAVE_CERRADO resto_if
   37         | IF PAR_ABIERTO . condicion PAR_CERRADO sentencia

    CONTAR         desplazar e ir al estado 30
    PAR_ABIERTO    desplazar e ir al estado 31
    OP_NOT         desplazar e ir al estado 32
    CONST_ENTERA   desplazar e ir al estado 33
    CONST_REAL     desplazar e ir al estado 34
    CONST_BINARIA  desplazar e ir al estado 35
    CONST_HEXA     desplazar e ir al estado 36
    ID             desplazar e ir al estado 37

    cuenta         ir al estado 38
    termino        ir al estado 39
    factor         ir al estado 40
    condicion      ir al estado 45
    expLogica      ir al estado 42
    funcionContar  ir al estado 43
    constante      ir al estado 44


estado 18

   32 salida: PUT CONST_STRING .

    $default  reduce usando la regla 32 (salida)


estado 19

   31 salida: PUT ID .

    $default  reduce usando la regla 31 (salida)


estado 20

   33 entrada: GET ID .

    $default  reduce usando la regla 33 (entrada)


estado 21

   22 listaVariables: OP_LE . variables OP_GE

    ID  desplazar e ir al estado 46

    variables  ir al estado 47


estado 22

   21 declaracion: DIM listaVariables . AS listaTipos

    AS  desplazar e ir al estado 48


estado 23

   10 asignacion: ID OP_ASIGNACION . cuenta

    CONTAR         desplazar e ir al estado 30
    PAR_ABIERTO    desplazar e ir al estado 49
    CONST_ENTERA   desplazar e ir al estado 33
    CONST_REAL     desplazar e ir al estado 34
    CONST_BINARIA  desplazar e ir al estado 35
    CONST_HEXA     desplazar e ir al estado 36
    ID             desplazar e ir al estado 37

    cuenta         ir al estado 50
    termino        ir al estado 39
    factor         ir al estado 40
    funcionContar  ir al estado 43
    constante      ir al estado 44


estado 24

    0 $accept: programa $end .

    $default  aceptar


estado 25

    2 bloque: sentencia bloque .

    $default  reduce usando la regla 2 (bloque)


estado 26

    4 sentencia: asignacion PUNTO_COMA .

    $default  reduce usando la regla 4 (sentencia)


estado 27

    5 sentencia: declaracion PUNTO_COMA .

    $default  reduce usando la regla 5 (sentencia)


estado 28

    6 sentencia: salida PUNTO_COMA .

    $default  reduce usando la regla 6 (sentencia)


estado 29

    7 sentencia: entrada PUNTO_COMA .

    $default  reduce usando la regla 7 (sentencia)


estado 30

   52 funcionContar: CONTAR . PAR_ABIERTO cuenta PUNTO_COMA listaConstantes PAR_CERRADO

    PAR_ABIERTO  desplazar e ir al estado 51


estado 31

   17 factor: PAR_ABIERTO . cuenta PAR_CERRADO
   44 expLogica: PAR_ABIERTO . condicion PAR_CERRADO

    CONTAR         desplazar e ir al estado 30
    PAR_ABIERTO    desplazar e ir al estado 31
    OP_NOT         desplazar e ir al estado 32
    CONST_ENTERA   desplazar e ir al estado 33
    CONST_REAL     desplazar e ir al estado 34
    CONST_BINARIA  desplazar e ir al estado 35
    CONST_HEXA     desplazar e ir al estado 36
    ID             desplazar e ir al estado 37

    cuenta         ir al estado 52
    termino        ir al estado 39
    factor         ir al estado 40
    condicion      ir al estado 53
    expLogica      ir al estado 42
    funcionContar  ir al estado 43
    constante      ir al estado 44


estado 32

   42 condicion: OP_NOT . expLogica

    CONTAR         desplazar e ir al estado 30
    PAR_ABIERTO    desplazar e ir al estado 31
    CONST_ENTERA   desplazar e ir al estado 33
    CONST_REAL     desplazar e ir al estado 34
    CONST_BINARIA  desplazar e ir al estado 35
    CONST_HEXA     desplazar e ir al estado 36
    ID             desplazar e ir al estado 37

    cuenta         ir al estado 38
    termino        ir al estado 39
    factor         ir al estado 40
    expLogica      ir al estado 54
    funcionContar  ir al estado 43
    constante      ir al estado 44


estado 33

   59 constante: CONST_ENTERA .

    $default  reduce usando la regla 59 (constante)


estado 34

   58 constante: CONST_REAL .

    $default  reduce usando la regla 58 (constante)


estado 35

   56 constante: CONST_BINARIA .

    $default  reduce usando la regla 56 (constante)


estado 36

   57 constante: CONST_HEXA .

    $default  reduce usando la regla 57 (constante)


estado 37

   18 factor: ID .

    $default  reduce usando la regla 18 (factor)


estado 38

   45 expLogica: cuenta . comparador cuenta

    OP_LE     desplazar e ir al estado 55
    OP_LEQ    desplazar e ir al estado 56
    OP_GE     desplazar e ir al estado 57
    OP_GEQ    desplazar e ir al estado 58
    OP_NE     desplazar e ir al estado 59
    OP_IGUAL  desplazar e ir al estado 60

    comparador  ir al estado 61


estado 39

   11 cuenta: termino . OP_SUMA cuenta
   12       | termino . OP_RESTA cuenta
   13       | termino .

    OP_SUMA   desplazar e ir al estado 62
    OP_RESTA  desplazar e ir al estado 63

    $default  reduce usando la regla 13 (cuenta)


estado 40

   14 termino: factor . OP_MULT termino
   15        | factor . OP_DIVISION termino
   16        | factor .

    OP_DIVISION  desplazar e ir al estado 64
    OP_MULT      desplazar e ir al estado 65

    $default  reduce usando la regla 16 (termino)


estado 41

   34 bloqueWhile: WHILE PAR_ABIERTO condicion . PAR_CERRADO LLAVE_ABIERTO bloque LLAVE_CERRADO
   35            | WHILE PAR_ABIERTO condicion . PAR_CERRADO sentencia

    PAR_CERRADO  desplazar e ir al estado 66


estado 42

   40 condicion: expLogica . OP_AND expLogica
   41          | expLogica . OP_OR expLogica
   43          | expLogica .

    OP_AND  desplazar e ir al estado 67
    OP_OR   desplazar e ir al estado 68

    $default  reduce usando la regla 43 (condicion)


estado 43

   20 factor: funcionContar .

    $default  reduce usando la regla 20 (factor)


estado 44

   19 factor: constante .

    $default  reduce usando la regla 19 (factor)


estado 45

   36 bloqueIf: IF PAR_ABIERTO condicion . PAR_CERRADO LLAVE_ABIERTO bloque LLAVE_CERRADO resto_if
   37         | IF PAR_ABIERTO condicion . PAR_CERRADO sentencia

    PAR_CERRADO  desplazar e ir al estado 69


estado 46

   23 variables: ID . COMA variables
   24          | ID .

    COMA  desplazar e ir al estado 70

    $default  reduce usando la regla 24 (variables)


estado 47

   22 listaVariables: OP_LE variables . OP_GE

    OP_GE  desplazar e ir al estado 71


estado 48

   21 declaracion: DIM listaVariables AS . listaTipos

    OP_LE  desplazar e ir al estado 72

    listaTipos  ir al estado 73


estado 49

   17 factor: PAR_ABIERTO . cuenta PAR_CERRADO

    CONTAR         desplazar e ir al estado 30
    PAR_ABIERTO    desplazar e ir al estado 49
    CONST_ENTERA   desplazar e ir al estado 33
    CONST_REAL     desplazar e ir al estado 34
    CONST_BINARIA  desplazar e ir al estado 35
    CONST_HEXA     desplazar e ir al estado 36
    ID             desplazar e ir al estado 37

    cuenta         ir al estado 74
    termino        ir al estado 39
    factor         ir al estado 40
    funcionContar  ir al estado 43
    constante      ir al estado 44


estado 50

   10 asignacion: ID OP_ASIGNACION cuenta .

    $default  reduce usando la regla 10 (asignacion)


estado 51

   52 funcionContar: CONTAR PAR_ABIERTO . cuenta PUNTO_COMA listaConstantes PAR_CERRADO

    CONTAR         desplazar e ir al estado 30
    PAR_ABIERTO    desplazar e ir al estado 49
    CONST_ENTERA   desplazar e ir al estado 33
    CONST_REAL     desplazar e ir al estado 34
    CONST_BINARIA  desplazar e ir al estado 35
    CONST_HEXA     desplazar e ir al estado 36
    ID             desplazar e ir al estado 37

    cuenta         ir al estado 75
    termino        ir al estado 39
    factor         ir al estado 40
    funcionContar  ir al estado 43
    constante      ir al estado 44


estado 52

   17 factor: PAR_ABIERTO cuenta . PAR_CERRADO
   45 expLogica: cuenta . comparador cuenta

    PAR_CERRADO  desplazar e ir al estado 76
    OP_LE        desplazar e ir al estado 55
    OP_LEQ       desplazar e ir al estado 56
    OP_GE        desplazar e ir al estado 57
    OP_GEQ       desplazar e ir al estado 58
    OP_NE        desplazar e ir al estado 59
    OP_IGUAL     desplazar e ir al estado 60

    comparador  ir al estado 61


estado 53

   44 expLogica: PAR_ABIERTO condicion . PAR_CERRADO

    PAR_CERRADO  desplazar e ir al estado 77


estado 54

   42 condicion: OP_NOT expLogica .

    $default  reduce usando la regla 42 (condicion)


estado 55

   47 comparador: OP_LE .

    $default  reduce usando la regla 47 (comparador)


estado 56

   48 comparador: OP_LEQ .

    $default  reduce usando la regla 48 (comparador)


estado 57

   49 comparador: OP_GE .

    $default  reduce usando la regla 49 (comparador)


estado 58

   50 comparador: OP_GEQ .

    $default  reduce usando la regla 50 (comparador)


estado 59

   51 comparador: OP_NE .

    $default  reduce usando la regla 51 (comparador)


estado 60

   46 comparador: OP_IGUAL .

    $default  reduce usando la regla 46 (comparador)


estado 61

   45 expLogica: cuenta comparador . cuenta

    CONTAR         desplazar e ir al estado 30
    PAR_ABIERTO    desplazar e ir al estado 49
    CONST_ENTERA   desplazar e ir al estado 33
    CONST_REAL     desplazar e ir al estado 34
    CONST_BINARIA  desplazar e ir al estado 35
    CONST_HEXA     desplazar e ir al estado 36
    ID             desplazar e ir al estado 37

    cuenta         ir al estado 78
    termino        ir al estado 39
    factor         ir al estado 40
    funcionContar  ir al estado 43
    constante      ir al estado 44


estado 62

   11 cuenta: termino OP_SUMA . cuenta

    CONTAR         desplazar e ir al estado 30
    PAR_ABIERTO    desplazar e ir al estado 49
    CONST_ENTERA   desplazar e ir al estado 33
    CONST_REAL     desplazar e ir al estado 34
    CONST_BINARIA  desplazar e ir al estado 35
    CONST_HEXA     desplazar e ir al estado 36
    ID             desplazar e ir al estado 37

    cuenta         ir al estado 79
    termino        ir al estado 39
    factor         ir al estado 40
    funcionContar  ir al estado 43
    constante      ir al estado 44


estado 63

   12 cuenta: termino OP_RESTA . cuenta

    CONTAR         desplazar e ir al estado 30
    PAR_ABIERTO    desplazar e ir al estado 49
    CONST_ENTERA   desplazar e ir al estado 33
    CONST_REAL     desplazar e ir al estado 34
    CONST_BINARIA  desplazar e ir al estado 35
    CONST_HEXA     desplazar e ir al estado 36
    ID             desplazar e ir al estado 37

    cuenta         ir al estado 80
    termino        ir al estado 39
    factor         ir al estado 40
    funcionContar  ir al estado 43
    constante      ir al estado 44


estado 64

   15 termino: factor OP_DIVISION . termino

    CONTAR         desplazar e ir al estado 30
    PAR_ABIERTO    desplazar e ir al estado 49
    CONST_ENTERA   desplazar e ir al estado 33
    CONST_REAL     desplazar e ir al estado 34
    CONST_BINARIA  desplazar e ir al estado 35
    CONST_HEXA     desplazar e ir al estado 36
    ID             desplazar e ir al estado 37

    termino        ir al estado 81
    factor         ir al estado 40
    funcionContar  ir al estado 43
    constante      ir al estado 44


estado 65

   14 termino: factor OP_MULT . termino

    CONTAR         desplazar e ir al estado 30
    PAR_ABIERTO    desplazar e ir al estado 49
    CONST_ENTERA   desplazar e ir al estado 33
    CONST_REAL     desplazar e ir al estado 34
    CONST_BINARIA  desplazar e ir al estado 35
    CONST_HEXA     desplazar e ir al estado 36
    ID             desplazar e ir al estado 37

    termino        ir al estado 82
    factor         ir al estado 40
    funcionContar  ir al estado 43
    constante      ir al estado 44


estado 66

   34 bloqueWhile: WHILE PAR_ABIERTO condicion PAR_CERRADO . LLAVE_ABIERTO bloque LLAVE_CERRADO
   35            | WHILE PAR_ABIERTO condicion PAR_CERRADO . sentencia

    WHILE          desplazar e ir al estado 1
    IF             desplazar e ir al estado 2
    PUT            desplazar e ir al estado 3
    GET            desplazar e ir al estado 4
    DIM            desplazar e ir al estado 5
    LLAVE_ABIERTO  desplazar e ir al estado 83
    ID             desplazar e ir al estado 6

    sentencia    ir al estado 84
    asignacion   ir al estado 10
    declaracion  ir al estado 11
    salida       ir al estado 12
    entrada      ir al estado 13
    bloqueWhile  ir al estado 14
    bloqueIf     ir al estado 15


estado 67

   40 condicion: expLogica OP_AND . expLogica

    CONTAR         desplazar e ir al estado 30
    PAR_ABIERTO    desplazar e ir al estado 31
    CONST_ENTERA   desplazar e ir al estado 33
    CONST_REAL     desplazar e ir al estado 34
    CONST_BINARIA  desplazar e ir al estado 35
    CONST_HEXA     desplazar e ir al estado 36
    ID             desplazar e ir al estado 37

    cuenta         ir al estado 38
    termino        ir al estado 39
    factor         ir al estado 40
    expLogica      ir al estado 85
    funcionContar  ir al estado 43
    constante      ir al estado 44


estado 68

   41 condicion: expLogica OP_OR . expLogica

    CONTAR         desplazar e ir al estado 30
    PAR_ABIERTO    desplazar e ir al estado 31
    CONST_ENTERA   desplazar e ir al estado 33
    CONST_REAL     desplazar e ir al estado 34
    CONST_BINARIA  desplazar e ir al estado 35
    CONST_HEXA     desplazar e ir al estado 36
    ID             desplazar e ir al estado 37

    cuenta         ir al estado 38
    termino        ir al estado 39
    factor         ir al estado 40
    expLogica      ir al estado 86
    funcionContar  ir al estado 43
    constante      ir al estado 44


estado 69

   36 bloqueIf: IF PAR_ABIERTO condicion PAR_CERRADO . LLAVE_ABIERTO bloque LLAVE_CERRADO resto_if
   37         | IF PAR_ABIERTO condicion PAR_CERRADO . sentencia

    WHILE          desplazar e ir al estado 1
    IF             desplazar e ir al estado 2
    PUT            desplazar e ir al estado 3
    GET            desplazar e ir al estado 4
    DIM            desplazar e ir al estado 5
    LLAVE_ABIERTO  desplazar e ir al estado 87
    ID             desplazar e ir al estado 6

    sentencia    ir al estado 88
    asignacion   ir al estado 10
    declaracion  ir al estado 11
    salida       ir al estado 12
    entrada      ir al estado 13
    bloqueWhile  ir al estado 14
    bloqueIf     ir al estado 15


estado 70

   23 variables: ID COMA . variables

    ID  desplazar e ir al estado 46

    variables  ir al estado 89


estado 71

   22 listaVariables: OP_LE variables OP_GE .

    $default  reduce usando la regla 22 (listaVariables)


estado 72

   25 listaTipos: OP_LE . tipos OP_GE

    INTEGER  desplazar e ir al estado 90
    FLOAT    desplazar e ir al estado 91
    STRING   desplazar e ir al estado 92

    tipos       ir al estado 93
    tipoDeDato  ir al estado 94


estado 73

   21 declaracion: DIM listaVariables AS listaTipos .

    $default  reduce usando la regla 21 (declaracion)


estado 74

   17 factor: PAR_ABIERTO cuenta . PAR_CERRADO

    PAR_CERRADO  desplazar e ir al estado 76


estado 75

   52 funcionContar: CONTAR PAR_ABIERTO cuenta . PUNTO_COMA listaConstantes PAR_CERRADO

    PUNTO_COMA  desplazar e ir al estado 95


estado 76

   17 factor: PAR_ABIERTO cuenta PAR_CERRADO .

    $default  reduce usando la regla 17 (factor)


estado 77

   44 expLogica: PAR_ABIERTO condicion PAR_CERRADO .

    $default  reduce usando la regla 44 (expLogica)


estado 78

   45 expLogica: cuenta comparador cuenta .

    $default  reduce usando la regla 45 (expLogica)


estado 79

   11 cuenta: termino OP_SUMA cuenta .

    $default  reduce usando la regla 11 (cuenta)


estado 80

   12 cuenta: termino OP_RESTA cuenta .

    $default  reduce usando la regla 12 (cuenta)


estado 81

   15 termino: factor OP_DIVISION termino .

    $default  reduce usando la regla 15 (termino)


estado 82

   14 termino: factor OP_MULT termino .

    $default  reduce usando la regla 14 (termino)


estado 83

   34 bloqueWhile: WHILE PAR_ABIERTO condicion PAR_CERRADO LLAVE_ABIERTO . bloque LLAVE_CERRADO

    WHILE  desplazar e ir al estado 1
    IF     desplazar e ir al estado 2
    PUT    desplazar e ir al estado 3
    GET    desplazar e ir al estado 4
    DIM    desplazar e ir al estado 5
    ID     desplazar e ir al estado 6

    bloque       ir al estado 96
    sentencia    ir al estado 9
    asignacion   ir al estado 10
    declaracion  ir al estado 11
    salida       ir al estado 12
    entrada      ir al estado 13
    bloqueWhile  ir al estado 14
    bloqueIf     ir al estado 15


estado 84

   35 bloqueWhile: WHILE PAR_ABIERTO condicion PAR_CERRADO sentencia .

    $default  reduce usando la regla 35 (bloqueWhile)


estado 85

   40 condicion: expLogica OP_AND expLogica .

    $default  reduce usando la regla 40 (condicion)


estado 86

   41 condicion: expLogica OP_OR expLogica .

    $default  reduce usando la regla 41 (condicion)


estado 87

   36 bloqueIf: IF PAR_ABIERTO condicion PAR_CERRADO LLAVE_ABIERTO . bloque LLAVE_CERRADO resto_if

    WHILE  desplazar e ir al estado 1
    IF     desplazar e ir al estado 2
    PUT    desplazar e ir al estado 3
    GET    desplazar e ir al estado 4
    DIM    desplazar e ir al estado 5
    ID     desplazar e ir al estado 6

    bloque       ir al estado 97
    sentencia    ir al estado 9
    asignacion   ir al estado 10
    declaracion  ir al estado 11
    salida       ir al estado 12
    entrada      ir al estado 13
    bloqueWhile  ir al estado 14
    bloqueIf     ir al estado 15


estado 88

   37 bloqueIf: IF PAR_ABIERTO condicion PAR_CERRADO sentencia .

    $default  reduce usando la regla 37 (bloqueIf)


estado 89

   23 variables: ID COMA variables .

    $default  reduce usando la regla 23 (variables)


estado 90

   29 tipoDeDato: INTEGER .

    $default  reduce usando la regla 29 (tipoDeDato)


estado 91

   28 tipoDeDato: FLOAT .

    $default  reduce usando la regla 28 (tipoDeDato)


estado 92

   30 tipoDeDato: STRING .

    $default  reduce usando la regla 30 (tipoDeDato)


estado 93

   25 listaTipos: OP_LE tipos . OP_GE

    OP_GE  desplazar e ir al estado 98


estado 94

   26 tipos: tipoDeDato . COMA tipos
   27      | tipoDeDato .

    COMA  desplazar e ir al estado 99

    $default  reduce usando la regla 27 (tipos)


estado 95

   52 funcionContar: CONTAR PAR_ABIERTO cuenta PUNTO_COMA . listaConstantes PAR_CERRADO

    COR_ABIERTO  desplazar e ir al estado 100

    listaConstantes  ir al estado 101


estado 96

   34 bloqueWhile: WHILE PAR_ABIERTO condicion PAR_CERRADO LLAVE_ABIERTO bloque . LLAVE_CERRADO

    LLAVE_CERRADO  desplazar e ir al estado 102


estado 97

   36 bloqueIf: IF PAR_ABIERTO condicion PAR_CERRADO LLAVE_ABIERTO bloque . LLAVE_CERRADO resto_if

    LLAVE_CERRADO  desplazar e ir al estado 103


estado 98

   25 listaTipos: OP_LE tipos OP_GE .

    $default  reduce usando la regla 25 (listaTipos)


estado 99

   26 tipos: tipoDeDato COMA . tipos

    INTEGER  desplazar e ir al estado 90
    FLOAT    desplazar e ir al estado 91
    STRING   desplazar e ir al estado 92

    tipos       ir al estado 104
    tipoDeDato  ir al estado 94


estado 100

   53 listaConstantes: COR_ABIERTO . constantes COR_CERRADO

    CONST_ENTERA   desplazar e ir al estado 33
    CONST_REAL     desplazar e ir al estado 34
    CONST_BINARIA  desplazar e ir al estado 35
    CONST_HEXA     desplazar e ir al estado 36

    constantes  ir al estado 105
    constante   ir al estado 106


estado 101

   52 funcionContar: CONTAR PAR_ABIERTO cuenta PUNTO_COMA listaConstantes . PAR_CERRADO

    PAR_CERRADO  desplazar e ir al estado 107


estado 102

   34 bloqueWhile: WHILE PAR_ABIERTO condicion PAR_CERRADO LLAVE_ABIERTO bloque LLAVE_CERRADO .

    $default  reduce usando la regla 34 (bloqueWhile)


estado 103

   36 bloqueIf: IF PAR_ABIERTO condicion PAR_CERRADO LLAVE_ABIERTO bloque LLAVE_CERRADO . resto_if

    WHILE  desplazar e ir al estado 1
    IF     desplazar e ir al estado 2
    ELSE   desplazar e ir al estado 108
    PUT    desplazar e ir al estado 3
    GET    desplazar e ir al estado 4
    DIM    desplazar e ir al estado 5
    ID     desplazar e ir al estado 6

    sentencia    ir al estado 109
    asignacion   ir al estado 10
    declaracion  ir al estado 11
    salida       ir al estado 12
    entrada      ir al estado 13
    bloqueWhile  ir al estado 14
    bloqueIf     ir al estado 15
    resto_if     ir al estado 110


estado 104

   26 tipos: tipoDeDato COMA tipos .

    $default  reduce usando la regla 26 (tipos)


estado 105

   53 listaConstantes: COR_ABIERTO constantes . COR_CERRADO

    COR_CERRADO  desplazar e ir al estado 111


estado 106

   54 constantes: constante . COMA constantes
   55           | constante .

    COMA  desplazar e ir al estado 112

    $default  reduce usando la regla 55 (constantes)


estado 107

   52 funcionContar: CONTAR PAR_ABIERTO cuenta PUNTO_COMA listaConstantes PAR_CERRADO .

    $default  reduce usando la regla 52 (funcionContar)


estado 108

   38 resto_if: ELSE . LLAVE_ABIERTO bloque LLAVE_CERRADO

    LLAVE_ABIERTO  desplazar e ir al estado 113


estado 109

   39 resto_if: sentencia .

    $default  reduce usando la regla 39 (resto_if)


estado 110

   36 bloqueIf: IF PAR_ABIERTO condicion PAR_CERRADO LLAVE_ABIERTO bloque LLAVE_CERRADO resto_if .

    $default  reduce usando la regla 36 (bloqueIf)


estado 111

   53 listaConstantes: COR_ABIERTO constantes COR_CERRADO .

    $default  reduce usando la regla 53 (listaConstantes)


estado 112

   54 constantes: constante COMA . constantes

    CONST_ENTERA   desplazar e ir al estado 33
    CONST_REAL     desplazar e ir al estado 34
    CONST_BINARIA  desplazar e ir al estado 35
    CONST_HEXA     desplazar e ir al estado 36

    constantes  ir al estado 114
    constante   ir al estado 106


estado 113

   38 resto_if: ELSE LLAVE_ABIERTO . bloque LLAVE_CERRADO

    WHILE  desplazar e ir al estado 1
    IF     desplazar e ir al estado 2
    PUT    desplazar e ir al estado 3
    GET    desplazar e ir al estado 4
    DIM    desplazar e ir al estado 5
    ID     desplazar e ir al estado 6

    bloque       ir al estado 115
    sentencia    ir al estado 9
    asignacion   ir al estado 10
    declaracion  ir al estado 11
    salida       ir al estado 12
    entrada      ir al estado 13
    bloqueWhile  ir al estado 14
    bloqueIf     ir al estado 15


estado 114

   54 constantes: constante COMA constantes .

    $default  reduce usando la regla 54 (constantes)


estado 115

   38 resto_if: ELSE LLAVE_ABIERTO bloque . LLAVE_CERRADO

    LLAVE_CERRADO  desplazar e ir al estado 116


estado 116

   38 resto_if: ELSE LLAVE_ABIERTO bloque LLAVE_CERRADO .

    $default  reduce usando la regla 38 (resto_if)
