Gramática

    0 $accept: programa $end

    1 programa: bloque

    2 bloque: sentencia bloque
    3       | sentencia

    4 sentencia: asignacion PUNTO_COMA
    5          | declaracion PUNTO_COMA
    6          | salida PUNTO_COMA
    7          | entrada PUNTO_COMA
    8          | bloqueWhile
    9          | bloqueIf

   10 asignacion: ID OP_ASIGNACION cuenta

   11 cuenta: termino OP_SUMA cuenta
   12       | termino OP_RESTA cuenta
   13       | termino

   14 termino: factor OP_MULT termino
   15        | factor OP_DIVISION termino
   16        | factor

   17 factor: PAR_ABIERTO cuenta PAR_CERRADO
   18       | ID
   19       | constante
   20       | funcionContar

   21 declaracion: DIM OP_LE listaVariables OP_GE AS OP_LE listaTipos OP_GE

   22 listaVariables: listaVariables COMA ID
   23               | ID

   24 listaTipos: listaTipos COMA tipoDeDato
   25           | tipoDeDato

   26 tipoDeDato: FLOAT
   27           | INTEGER
   28           | STRING

   29 salida: PUT ID
   30       | PUT CONST_STRING

   31 entrada: GET ID

   32 bloqueWhile: WHILE PAR_ABIERTO condicion PAR_CERRADO LLAVE_ABIERTO bloque LLAVE_CERRADO
   33            | WHILE PAR_ABIERTO condicion PAR_CERRADO sentencia

   34 bloqueIf: IF PAR_ABIERTO condicion PAR_CERRADO LLAVE_ABIERTO bloque LLAVE_CERRADO ELSE LLAVE_ABIERTO bloque LLAVE_CERRADO
   35         | IF PAR_ABIERTO condicion PAR_CERRADO sentencia
   36         | IF PAR_ABIERTO condicion PAR_CERRADO LLAVE_ABIERTO bloque LLAVE_CERRADO

   37 condicion: expLogica OP_AND expLogica
   38          | expLogica OP_OR expLogica
   39          | OP_NOT expLogica
   40          | expLogica

   41 expLogica: PAR_ABIERTO condicion PAR_CERRADO
   42          | cuenta comparador cuenta

   43 comparador: OP_IGUAL
   44           | OP_LE
   45           | OP_LEQ
   46           | OP_GE
   47           | OP_GEQ
   48           | OP_NE

   49 funcionContar: CONTAR PAR_ABIERTO cuenta PUNTO_COMA listaConstantes PAR_CERRADO

   50 listaConstantes: COR_ABIERTO constantes COR_CERRADO

   51 constantes: constante COMA constantes
   52           | constante

   53 constante: CONST_BINARIA
   54          | CONST_HEXA
   55          | CONST_REAL
   56          | CONST_ENTERA


Terminales con las reglas donde aparecen

$end (0) 0
error (256)
WHILE (258) 32 33
IF (259) 34 35 36
ELSE (260) 34
PUT (261) 29 30
GET (262) 31
DIM (263) 21
AS (264) 21
CONTAR (265) 49
INTEGER (266) 27
FLOAT (267) 26
STRING (268) 28
LLAVE_ABIERTO (269) 32 34 36
LLAVE_CERRADO (270) 32 34 36
PAR_ABIERTO (271) 17 32 33 34 35 36 41 49
PAR_CERRADO (272) 17 32 33 34 35 36 41 49
COR_ABIERTO (273) 50
COR_CERRADO (274) 50
PUNTO_COMA (275) 4 5 6 7 49
COMA (276) 22 24 51
OP_ASIGNACION (277) 10
OP_SUMA (278) 11
OP_RESTA (279) 12
OP_DIVISION (280) 15
OP_MULT (281) 14
OP_LE (282) 21 44
OP_LEQ (283) 45
OP_GE (284) 21 46
OP_GEQ (285) 47
OP_NE (286) 48
OP_IGUAL (287) 43
OP_AND (288) 37
OP_OR (289) 38
OP_NOT (290) 39
CONST_ENTERA (291) 56
CONST_REAL (292) 55
CONST_STRING (293) 30
CONST_BINARIA (294) 53
CONST_HEXA (295) 54
ID (296) 10 18 22 23 29 31


No terminales con las reglas donde aparecen

$accept (42)
    en la izquierda: 0
programa (43)
    en la izquierda: 1, en la derecha: 0
bloque (44)
    en la izquierda: 2 3, en la derecha: 1 2 32 34 36
sentencia (45)
    en la izquierda: 4 5 6 7 8 9, en la derecha: 2 3 33 35
asignacion (46)
    en la izquierda: 10, en la derecha: 4
cuenta (47)
    en la izquierda: 11 12 13, en la derecha: 10 11 12 17 42 49
termino (48)
    en la izquierda: 14 15 16, en la derecha: 11 12 13 14 15
factor (49)
    en la izquierda: 17 18 19 20, en la derecha: 14 15 16
declaracion (50)
    en la izquierda: 21, en la derecha: 5
listaVariables (51)
    en la izquierda: 22 23, en la derecha: 21 22
listaTipos (52)
    en la izquierda: 24 25, en la derecha: 21 24
tipoDeDato (53)
    en la izquierda: 26 27 28, en la derecha: 24 25
salida (54)
    en la izquierda: 29 30, en la derecha: 6
entrada (55)
    en la izquierda: 31, en la derecha: 7
bloqueWhile (56)
    en la izquierda: 32 33, en la derecha: 8
bloqueIf (57)
    en la izquierda: 34 35 36, en la derecha: 9
condicion (58)
    en la izquierda: 37 38 39 40, en la derecha: 32 33 34 35 36 41
expLogica (59)
    en la izquierda: 41 42, en la derecha: 37 38 39 40
comparador (60)
    en la izquierda: 43 44 45 46 47 48, en la derecha: 42
funcionContar (61)
    en la izquierda: 49, en la derecha: 20
listaConstantes (62)
    en la izquierda: 50, en la derecha: 49
constantes (63)
    en la izquierda: 51 52, en la derecha: 50 51
constante (64)
    en la izquierda: 53 54 55 56, en la derecha: 19 51 52


estado 0

    0 $accept: . programa $end

    WHILE  desplazar e ir al estado 1
    IF     desplazar e ir al estado 2
    PUT    desplazar e ir al estado 3
    GET    desplazar e ir al estado 4
    DIM    desplazar e ir al estado 5
    ID     desplazar e ir al estado 6

    programa     ir al estado 7
    bloque       ir al estado 8
    sentencia    ir al estado 9
    asignacion   ir al estado 10
    declaracion  ir al estado 11
    salida       ir al estado 12
    entrada      ir al estado 13
    bloqueWhile  ir al estado 14
    bloqueIf     ir al estado 15


estado 1

   32 bloqueWhile: WHILE . PAR_ABIERTO condicion PAR_CERRADO LLAVE_ABIERTO bloque LLAVE_CERRADO
   33            | WHILE . PAR_ABIERTO condicion PAR_CERRADO sentencia

    PAR_ABIERTO  desplazar e ir al estado 16


estado 2

   34 bloqueIf: IF . PAR_ABIERTO condicion PAR_CERRADO LLAVE_ABIERTO bloque LLAVE_CERRADO ELSE LLAVE_ABIERTO bloque LLAVE_CERRADO
   35         | IF . PAR_ABIERTO condicion PAR_CERRADO sentencia
   36         | IF . PAR_ABIERTO condicion PAR_CERRADO LLAVE_ABIERTO bloque LLAVE_CERRADO

    PAR_ABIERTO  desplazar e ir al estado 17


estado 3

   29 salida: PUT . ID
   30       | PUT . CONST_STRING

    CONST_STRING  desplazar e ir al estado 18
    ID            desplazar e ir al estado 19


estado 4

   31 entrada: GET . ID

    ID  desplazar e ir al estado 20


estado 5

   21 declaracion: DIM . OP_LE listaVariables OP_GE AS OP_LE listaTipos OP_GE

    OP_LE  desplazar e ir al estado 21


estado 6

   10 asignacion: ID . OP_ASIGNACION cuenta

    OP_ASIGNACION  desplazar e ir al estado 22


estado 7

    0 $accept: programa . $end

    $end  desplazar e ir al estado 23


estado 8

    1 programa: bloque .

    $default  reduce usando la regla 1 (programa)


estado 9

    2 bloque: sentencia . bloque
    3       | sentencia .

    WHILE  desplazar e ir al estado 1
    IF     desplazar e ir al estado 2
    PUT    desplazar e ir al estado 3
    GET    desplazar e ir al estado 4
    DIM    desplazar e ir al estado 5
    ID     desplazar e ir al estado 6

    $default  reduce usando la regla 3 (bloque)

    bloque       ir al estado 24
    sentencia    ir al estado 9
    asignacion   ir al estado 10
    declaracion  ir al estado 11
    salida       ir al estado 12
    entrada      ir al estado 13
    bloqueWhile  ir al estado 14
    bloqueIf     ir al estado 15


estado 10

    4 sentencia: asignacion . PUNTO_COMA

    PUNTO_COMA  desplazar e ir al estado 25


estado 11

    5 sentencia: declaracion . PUNTO_COMA

    PUNTO_COMA  desplazar e ir al estado 26


estado 12

    6 sentencia: salida . PUNTO_COMA

    PUNTO_COMA  desplazar e ir al estado 27


estado 13

    7 sentencia: entrada . PUNTO_COMA

    PUNTO_COMA  desplazar e ir al estado 28


estado 14

    8 sentencia: bloqueWhile .

    $default  reduce usando la regla 8 (sentencia)


estado 15

    9 sentencia: bloqueIf .

    $default  reduce usando la regla 9 (sentencia)


estado 16

   32 bloqueWhile: WHILE PAR_ABIERTO . condicion PAR_CERRADO LLAVE_ABIERTO bloque LLAVE_CERRADO
   33            | WHILE PAR_ABIERTO . condicion PAR_CERRADO sentencia

    CONTAR         desplazar e ir al estado 29
    PAR_ABIERTO    desplazar e ir al estado 30
    OP_NOT         desplazar e ir al estado 31
    CONST_ENTERA   desplazar e ir al estado 32
    CONST_REAL     desplazar e ir al estado 33
    CONST_BINARIA  desplazar e ir al estado 34
    CONST_HEXA     desplazar e ir al estado 35
    ID             desplazar e ir al estado 36

    cuenta         ir al estado 37
    termino        ir al estado 38
    factor         ir al estado 39
    condicion      ir al estado 40
    expLogica      ir al estado 41
    funcionContar  ir al estado 42
    constante      ir al estado 43


estado 17

   34 bloqueIf: IF PAR_ABIERTO . condicion PAR_CERRADO LLAVE_ABIERTO bloque LLAVE_CERRADO ELSE LLAVE_ABIERTO bloque LLAVE_CERRADO
   35         | IF PAR_ABIERTO . condicion PAR_CERRADO sentencia
   36         | IF PAR_ABIERTO . condicion PAR_CERRADO LLAVE_ABIERTO bloque LLAVE_CERRADO

    CONTAR         desplazar e ir al estado 29
    PAR_ABIERTO    desplazar e ir al estado 30
    OP_NOT         desplazar e ir al estado 31
    CONST_ENTERA   desplazar e ir al estado 32
    CONST_REAL     desplazar e ir al estado 33
    CONST_BINARIA  desplazar e ir al estado 34
    CONST_HEXA     desplazar e ir al estado 35
    ID             desplazar e ir al estado 36

    cuenta         ir al estado 37
    termino        ir al estado 38
    factor         ir al estado 39
    condicion      ir al estado 44
    expLogica      ir al estado 41
    funcionContar  ir al estado 42
    constante      ir al estado 43


estado 18

   30 salida: PUT CONST_STRING .

    $default  reduce usando la regla 30 (salida)


estado 19

   29 salida: PUT ID .

    $default  reduce usando la regla 29 (salida)


estado 20

   31 entrada: GET ID .

    $default  reduce usando la regla 31 (entrada)


estado 21

   21 declaracion: DIM OP_LE . listaVariables OP_GE AS OP_LE listaTipos OP_GE

    ID  desplazar e ir al estado 45

    listaVariables  ir al estado 46


estado 22

   10 asignacion: ID OP_ASIGNACION . cuenta

    CONTAR         desplazar e ir al estado 29
    PAR_ABIERTO    desplazar e ir al estado 47
    CONST_ENTERA   desplazar e ir al estado 32
    CONST_REAL     desplazar e ir al estado 33
    CONST_BINARIA  desplazar e ir al estado 34
    CONST_HEXA     desplazar e ir al estado 35
    ID             desplazar e ir al estado 36

    cuenta         ir al estado 48
    termino        ir al estado 38
    factor         ir al estado 39
    funcionContar  ir al estado 42
    constante      ir al estado 43


estado 23

    0 $accept: programa $end .

    $default  aceptar


estado 24

    2 bloque: sentencia bloque .

    $default  reduce usando la regla 2 (bloque)


estado 25

    4 sentencia: asignacion PUNTO_COMA .

    $default  reduce usando la regla 4 (sentencia)


estado 26

    5 sentencia: declaracion PUNTO_COMA .

    $default  reduce usando la regla 5 (sentencia)


estado 27

    6 sentencia: salida PUNTO_COMA .

    $default  reduce usando la regla 6 (sentencia)


estado 28

    7 sentencia: entrada PUNTO_COMA .

    $default  reduce usando la regla 7 (sentencia)


estado 29

   49 funcionContar: CONTAR . PAR_ABIERTO cuenta PUNTO_COMA listaConstantes PAR_CERRADO

    PAR_ABIERTO  desplazar e ir al estado 49


estado 30

   17 factor: PAR_ABIERTO . cuenta PAR_CERRADO
   41 expLogica: PAR_ABIERTO . condicion PAR_CERRADO

    CONTAR         desplazar e ir al estado 29
    PAR_ABIERTO    desplazar e ir al estado 30
    OP_NOT         desplazar e ir al estado 31
    CONST_ENTERA   desplazar e ir al estado 32
    CONST_REAL     desplazar e ir al estado 33
    CONST_BINARIA  desplazar e ir al estado 34
    CONST_HEXA     desplazar e ir al estado 35
    ID             desplazar e ir al estado 36

    cuenta         ir al estado 50
    termino        ir al estado 38
    factor         ir al estado 39
    condicion      ir al estado 51
    expLogica      ir al estado 41
    funcionContar  ir al estado 42
    constante      ir al estado 43


estado 31

   39 condicion: OP_NOT . expLogica

    CONTAR         desplazar e ir al estado 29
    PAR_ABIERTO    desplazar e ir al estado 30
    CONST_ENTERA   desplazar e ir al estado 32
    CONST_REAL     desplazar e ir al estado 33
    CONST_BINARIA  desplazar e ir al estado 34
    CONST_HEXA     desplazar e ir al estado 35
    ID             desplazar e ir al estado 36

    cuenta         ir al estado 37
    termino        ir al estado 38
    factor         ir al estado 39
    expLogica      ir al estado 52
    funcionContar  ir al estado 42
    constante      ir al estado 43


estado 32

   56 constante: CONST_ENTERA .

    $default  reduce usando la regla 56 (constante)


estado 33

   55 constante: CONST_REAL .

    $default  reduce usando la regla 55 (constante)


estado 34

   53 constante: CONST_BINARIA .

    $default  reduce usando la regla 53 (constante)


estado 35

   54 constante: CONST_HEXA .

    $default  reduce usando la regla 54 (constante)


estado 36

   18 factor: ID .

    $default  reduce usando la regla 18 (factor)


estado 37

   42 expLogica: cuenta . comparador cuenta

    OP_LE     desplazar e ir al estado 53
    OP_LEQ    desplazar e ir al estado 54
    OP_GE     desplazar e ir al estado 55
    OP_GEQ    desplazar e ir al estado 56
    OP_NE     desplazar e ir al estado 57
    OP_IGUAL  desplazar e ir al estado 58

    comparador  ir al estado 59


estado 38

   11 cuenta: termino . OP_SUMA cuenta
   12       | termino . OP_RESTA cuenta
   13       | termino .

    OP_SUMA   desplazar e ir al estado 60
    OP_RESTA  desplazar e ir al estado 61

    $default  reduce usando la regla 13 (cuenta)


estado 39

   14 termino: factor . OP_MULT termino
   15        | factor . OP_DIVISION termino
   16        | factor .

    OP_DIVISION  desplazar e ir al estado 62
    OP_MULT      desplazar e ir al estado 63

    $default  reduce usando la regla 16 (termino)


estado 40

   32 bloqueWhile: WHILE PAR_ABIERTO condicion . PAR_CERRADO LLAVE_ABIERTO bloque LLAVE_CERRADO
   33            | WHILE PAR_ABIERTO condicion . PAR_CERRADO sentencia

    PAR_CERRADO  desplazar e ir al estado 64


estado 41

   37 condicion: expLogica . OP_AND expLogica
   38          | expLogica . OP_OR expLogica
   40          | expLogica .

    OP_AND  desplazar e ir al estado 65
    OP_OR   desplazar e ir al estado 66

    $default  reduce usando la regla 40 (condicion)


estado 42

   20 factor: funcionContar .

    $default  reduce usando la regla 20 (factor)


estado 43

   19 factor: constante .

    $default  reduce usando la regla 19 (factor)


estado 44

   34 bloqueIf: IF PAR_ABIERTO condicion . PAR_CERRADO LLAVE_ABIERTO bloque LLAVE_CERRADO ELSE LLAVE_ABIERTO bloque LLAVE_CERRADO
   35         | IF PAR_ABIERTO condicion . PAR_CERRADO sentencia
   36         | IF PAR_ABIERTO condicion . PAR_CERRADO LLAVE_ABIERTO bloque LLAVE_CERRADO

    PAR_CERRADO  desplazar e ir al estado 67


estado 45

   23 listaVariables: ID .

    $default  reduce usando la regla 23 (listaVariables)


estado 46

   21 declaracion: DIM OP_LE listaVariables . OP_GE AS OP_LE listaTipos OP_GE
   22 listaVariables: listaVariables . COMA ID

    COMA   desplazar e ir al estado 68
    OP_GE  desplazar e ir al estado 69


estado 47

   17 factor: PAR_ABIERTO . cuenta PAR_CERRADO

    CONTAR         desplazar e ir al estado 29
    PAR_ABIERTO    desplazar e ir al estado 47
    CONST_ENTERA   desplazar e ir al estado 32
    CONST_REAL     desplazar e ir al estado 33
    CONST_BINARIA  desplazar e ir al estado 34
    CONST_HEXA     desplazar e ir al estado 35
    ID             desplazar e ir al estado 36

    cuenta         ir al estado 70
    termino        ir al estado 38
    factor         ir al estado 39
    funcionContar  ir al estado 42
    constante      ir al estado 43


estado 48

   10 asignacion: ID OP_ASIGNACION cuenta .

    $default  reduce usando la regla 10 (asignacion)


estado 49

   49 funcionContar: CONTAR PAR_ABIERTO . cuenta PUNTO_COMA listaConstantes PAR_CERRADO

    CONTAR         desplazar e ir al estado 29
    PAR_ABIERTO    desplazar e ir al estado 47
    CONST_ENTERA   desplazar e ir al estado 32
    CONST_REAL     desplazar e ir al estado 33
    CONST_BINARIA  desplazar e ir al estado 34
    CONST_HEXA     desplazar e ir al estado 35
    ID             desplazar e ir al estado 36

    cuenta         ir al estado 71
    termino        ir al estado 38
    factor         ir al estado 39
    funcionContar  ir al estado 42
    constante      ir al estado 43


estado 50

   17 factor: PAR_ABIERTO cuenta . PAR_CERRADO
   42 expLogica: cuenta . comparador cuenta

    PAR_CERRADO  desplazar e ir al estado 72
    OP_LE        desplazar e ir al estado 53
    OP_LEQ       desplazar e ir al estado 54
    OP_GE        desplazar e ir al estado 55
    OP_GEQ       desplazar e ir al estado 56
    OP_NE        desplazar e ir al estado 57
    OP_IGUAL     desplazar e ir al estado 58

    comparador  ir al estado 59


estado 51

   41 expLogica: PAR_ABIERTO condicion . PAR_CERRADO

    PAR_CERRADO  desplazar e ir al estado 73


estado 52

   39 condicion: OP_NOT expLogica .

    $default  reduce usando la regla 39 (condicion)


estado 53

   44 comparador: OP_LE .

    $default  reduce usando la regla 44 (comparador)


estado 54

   45 comparador: OP_LEQ .

    $default  reduce usando la regla 45 (comparador)


estado 55

   46 comparador: OP_GE .

    $default  reduce usando la regla 46 (comparador)


estado 56

   47 comparador: OP_GEQ .

    $default  reduce usando la regla 47 (comparador)


estado 57

   48 comparador: OP_NE .

    $default  reduce usando la regla 48 (comparador)


estado 58

   43 comparador: OP_IGUAL .

    $default  reduce usando la regla 43 (comparador)


estado 59

   42 expLogica: cuenta comparador . cuenta

    CONTAR         desplazar e ir al estado 29
    PAR_ABIERTO    desplazar e ir al estado 47
    CONST_ENTERA   desplazar e ir al estado 32
    CONST_REAL     desplazar e ir al estado 33
    CONST_BINARIA  desplazar e ir al estado 34
    CONST_HEXA     desplazar e ir al estado 35
    ID             desplazar e ir al estado 36

    cuenta         ir al estado 74
    termino        ir al estado 38
    factor         ir al estado 39
    funcionContar  ir al estado 42
    constante      ir al estado 43


estado 60

   11 cuenta: termino OP_SUMA . cuenta

    CONTAR         desplazar e ir al estado 29
    PAR_ABIERTO    desplazar e ir al estado 47
    CONST_ENTERA   desplazar e ir al estado 32
    CONST_REAL     desplazar e ir al estado 33
    CONST_BINARIA  desplazar e ir al estado 34
    CONST_HEXA     desplazar e ir al estado 35
    ID             desplazar e ir al estado 36

    cuenta         ir al estado 75
    termino        ir al estado 38
    factor         ir al estado 39
    funcionContar  ir al estado 42
    constante      ir al estado 43


estado 61

   12 cuenta: termino OP_RESTA . cuenta

    CONTAR         desplazar e ir al estado 29
    PAR_ABIERTO    desplazar e ir al estado 47
    CONST_ENTERA   desplazar e ir al estado 32
    CONST_REAL     desplazar e ir al estado 33
    CONST_BINARIA  desplazar e ir al estado 34
    CONST_HEXA     desplazar e ir al estado 35
    ID             desplazar e ir al estado 36

    cuenta         ir al estado 76
    termino        ir al estado 38
    factor         ir al estado 39
    funcionContar  ir al estado 42
    constante      ir al estado 43


estado 62

   15 termino: factor OP_DIVISION . termino

    CONTAR         desplazar e ir al estado 29
    PAR_ABIERTO    desplazar e ir al estado 47
    CONST_ENTERA   desplazar e ir al estado 32
    CONST_REAL     desplazar e ir al estado 33
    CONST_BINARIA  desplazar e ir al estado 34
    CONST_HEXA     desplazar e ir al estado 35
    ID             desplazar e ir al estado 36

    termino        ir al estado 77
    factor         ir al estado 39
    funcionContar  ir al estado 42
    constante      ir al estado 43


estado 63

   14 termino: factor OP_MULT . termino

    CONTAR         desplazar e ir al estado 29
    PAR_ABIERTO    desplazar e ir al estado 47
    CONST_ENTERA   desplazar e ir al estado 32
    CONST_REAL     desplazar e ir al estado 33
    CONST_BINARIA  desplazar e ir al estado 34
    CONST_HEXA     desplazar e ir al estado 35
    ID             desplazar e ir al estado 36

    termino        ir al estado 78
    factor         ir al estado 39
    funcionContar  ir al estado 42
    constante      ir al estado 43


estado 64

   32 bloqueWhile: WHILE PAR_ABIERTO condicion PAR_CERRADO . LLAVE_ABIERTO bloque LLAVE_CERRADO
   33            | WHILE PAR_ABIERTO condicion PAR_CERRADO . sentencia

    WHILE          desplazar e ir al estado 1
    IF             desplazar e ir al estado 2
    PUT            desplazar e ir al estado 3
    GET            desplazar e ir al estado 4
    DIM            desplazar e ir al estado 5
    LLAVE_ABIERTO  desplazar e ir al estado 79
    ID             desplazar e ir al estado 6

    sentencia    ir al estado 80
    asignacion   ir al estado 10
    declaracion  ir al estado 11
    salida       ir al estado 12
    entrada      ir al estado 13
    bloqueWhile  ir al estado 14
    bloqueIf     ir al estado 15


estado 65

   37 condicion: expLogica OP_AND . expLogica

    CONTAR         desplazar e ir al estado 29
    PAR_ABIERTO    desplazar e ir al estado 30
    CONST_ENTERA   desplazar e ir al estado 32
    CONST_REAL     desplazar e ir al estado 33
    CONST_BINARIA  desplazar e ir al estado 34
    CONST_HEXA     desplazar e ir al estado 35
    ID             desplazar e ir al estado 36

    cuenta         ir al estado 37
    termino        ir al estado 38
    factor         ir al estado 39
    expLogica      ir al estado 81
    funcionContar  ir al estado 42
    constante      ir al estado 43


estado 66

   38 condicion: expLogica OP_OR . expLogica

    CONTAR         desplazar e ir al estado 29
    PAR_ABIERTO    desplazar e ir al estado 30
    CONST_ENTERA   desplazar e ir al estado 32
    CONST_REAL     desplazar e ir al estado 33
    CONST_BINARIA  desplazar e ir al estado 34
    CONST_HEXA     desplazar e ir al estado 35
    ID             desplazar e ir al estado 36

    cuenta         ir al estado 37
    termino        ir al estado 38
    factor         ir al estado 39
    expLogica      ir al estado 82
    funcionContar  ir al estado 42
    constante      ir al estado 43


estado 67

   34 bloqueIf: IF PAR_ABIERTO condicion PAR_CERRADO . LLAVE_ABIERTO bloque LLAVE_CERRADO ELSE LLAVE_ABIERTO bloque LLAVE_CERRADO
   35         | IF PAR_ABIERTO condicion PAR_CERRADO . sentencia
   36         | IF PAR_ABIERTO condicion PAR_CERRADO . LLAVE_ABIERTO bloque LLAVE_CERRADO

    WHILE          desplazar e ir al estado 1
    IF             desplazar e ir al estado 2
    PUT            desplazar e ir al estado 3
    GET            desplazar e ir al estado 4
    DIM            desplazar e ir al estado 5
    LLAVE_ABIERTO  desplazar e ir al estado 83
    ID             desplazar e ir al estado 6

    sentencia    ir al estado 84
    asignacion   ir al estado 10
    declaracion  ir al estado 11
    salida       ir al estado 12
    entrada      ir al estado 13
    bloqueWhile  ir al estado 14
    bloqueIf     ir al estado 15


estado 68

   22 listaVariables: listaVariables COMA . ID

    ID  desplazar e ir al estado 85


estado 69

   21 declaracion: DIM OP_LE listaVariables OP_GE . AS OP_LE listaTipos OP_GE

    AS  desplazar e ir al estado 86


estado 70

   17 factor: PAR_ABIERTO cuenta . PAR_CERRADO

    PAR_CERRADO  desplazar e ir al estado 72


estado 71

   49 funcionContar: CONTAR PAR_ABIERTO cuenta . PUNTO_COMA listaConstantes PAR_CERRADO

    PUNTO_COMA  desplazar e ir al estado 87


estado 72

   17 factor: PAR_ABIERTO cuenta PAR_CERRADO .

    $default  reduce usando la regla 17 (factor)


estado 73

   41 expLogica: PAR_ABIERTO condicion PAR_CERRADO .

    $default  reduce usando la regla 41 (expLogica)


estado 74

   42 expLogica: cuenta comparador cuenta .

    $default  reduce usando la regla 42 (expLogica)


estado 75

   11 cuenta: termino OP_SUMA cuenta .

    $default  reduce usando la regla 11 (cuenta)


estado 76

   12 cuenta: termino OP_RESTA cuenta .

    $default  reduce usando la regla 12 (cuenta)


estado 77

   15 termino: factor OP_DIVISION termino .

    $default  reduce usando la regla 15 (termino)


estado 78

   14 termino: factor OP_MULT termino .

    $default  reduce usando la regla 14 (termino)


estado 79

   32 bloqueWhile: WHILE PAR_ABIERTO condicion PAR_CERRADO LLAVE_ABIERTO . bloque LLAVE_CERRADO

    WHILE  desplazar e ir al estado 1
    IF     desplazar e ir al estado 2
    PUT    desplazar e ir al estado 3
    GET    desplazar e ir al estado 4
    DIM    desplazar e ir al estado 5
    ID     desplazar e ir al estado 6

    bloque       ir al estado 88
    sentencia    ir al estado 9
    asignacion   ir al estado 10
    declaracion  ir al estado 11
    salida       ir al estado 12
    entrada      ir al estado 13
    bloqueWhile  ir al estado 14
    bloqueIf     ir al estado 15


estado 80

   33 bloqueWhile: WHILE PAR_ABIERTO condicion PAR_CERRADO sentencia .

    $default  reduce usando la regla 33 (bloqueWhile)


estado 81

   37 condicion: expLogica OP_AND expLogica .

    $default  reduce usando la regla 37 (condicion)


estado 82

   38 condicion: expLogica OP_OR expLogica .

    $default  reduce usando la regla 38 (condicion)


estado 83

   34 bloqueIf: IF PAR_ABIERTO condicion PAR_CERRADO LLAVE_ABIERTO . bloque LLAVE_CERRADO ELSE LLAVE_ABIERTO bloque LLAVE_CERRADO
   36         | IF PAR_ABIERTO condicion PAR_CERRADO LLAVE_ABIERTO . bloque LLAVE_CERRADO

    WHILE  desplazar e ir al estado 1
    IF     desplazar e ir al estado 2
    PUT    desplazar e ir al estado 3
    GET    desplazar e ir al estado 4
    DIM    desplazar e ir al estado 5
    ID     desplazar e ir al estado 6

    bloque       ir al estado 89
    sentencia    ir al estado 9
    asignacion   ir al estado 10
    declaracion  ir al estado 11
    salida       ir al estado 12
    entrada      ir al estado 13
    bloqueWhile  ir al estado 14
    bloqueIf     ir al estado 15


estado 84

   35 bloqueIf: IF PAR_ABIERTO condicion PAR_CERRADO sentencia .

    $default  reduce usando la regla 35 (bloqueIf)


estado 85

   22 listaVariables: listaVariables COMA ID .

    $default  reduce usando la regla 22 (listaVariables)


estado 86

   21 declaracion: DIM OP_LE listaVariables OP_GE AS . OP_LE listaTipos OP_GE

    OP_LE  desplazar e ir al estado 90


estado 87

   49 funcionContar: CONTAR PAR_ABIERTO cuenta PUNTO_COMA . listaConstantes PAR_CERRADO

    COR_ABIERTO  desplazar e ir al estado 91

    listaConstantes  ir al estado 92


estado 88

   32 bloqueWhile: WHILE PAR_ABIERTO condicion PAR_CERRADO LLAVE_ABIERTO bloque . LLAVE_CERRADO

    LLAVE_CERRADO  desplazar e ir al estado 93


estado 89

   34 bloqueIf: IF PAR_ABIERTO condicion PAR_CERRADO LLAVE_ABIERTO bloque . LLAVE_CERRADO ELSE LLAVE_ABIERTO bloque LLAVE_CERRADO
   36         | IF PAR_ABIERTO condicion PAR_CERRADO LLAVE_ABIERTO bloque . LLAVE_CERRADO

    LLAVE_CERRADO  desplazar e ir al estado 94


estado 90

   21 declaracion: DIM OP_LE listaVariables OP_GE AS OP_LE . listaTipos OP_GE

    INTEGER  desplazar e ir al estado 95
    FLOAT    desplazar e ir al estado 96
    STRING   desplazar e ir al estado 97

    listaTipos  ir al estado 98
    tipoDeDato  ir al estado 99


estado 91

   50 listaConstantes: COR_ABIERTO . constantes COR_CERRADO

    CONST_ENTERA   desplazar e ir al estado 32
    CONST_REAL     desplazar e ir al estado 33
    CONST_BINARIA  desplazar e ir al estado 34
    CONST_HEXA     desplazar e ir al estado 35

    constantes  ir al estado 100
    constante   ir al estado 101


estado 92

   49 funcionContar: CONTAR PAR_ABIERTO cuenta PUNTO_COMA listaConstantes . PAR_CERRADO

    PAR_CERRADO  desplazar e ir al estado 102


estado 93

   32 bloqueWhile: WHILE PAR_ABIERTO condicion PAR_CERRADO LLAVE_ABIERTO bloque LLAVE_CERRADO .

    $default  reduce usando la regla 32 (bloqueWhile)


estado 94

   34 bloqueIf: IF PAR_ABIERTO condicion PAR_CERRADO LLAVE_ABIERTO bloque LLAVE_CERRADO . ELSE LLAVE_ABIERTO bloque LLAVE_CERRADO
   36         | IF PAR_ABIERTO condicion PAR_CERRADO LLAVE_ABIERTO bloque LLAVE_CERRADO .

    ELSE  desplazar e ir al estado 103

    $default  reduce usando la regla 36 (bloqueIf)


estado 95

   27 tipoDeDato: INTEGER .

    $default  reduce usando la regla 27 (tipoDeDato)


estado 96

   26 tipoDeDato: FLOAT .

    $default  reduce usando la regla 26 (tipoDeDato)


estado 97

   28 tipoDeDato: STRING .

    $default  reduce usando la regla 28 (tipoDeDato)


estado 98

   21 declaracion: DIM OP_LE listaVariables OP_GE AS OP_LE listaTipos . OP_GE
   24 listaTipos: listaTipos . COMA tipoDeDato

    COMA   desplazar e ir al estado 104
    OP_GE  desplazar e ir al estado 105


estado 99

   25 listaTipos: tipoDeDato .

    $default  reduce usando la regla 25 (listaTipos)


estado 100

   50 listaConstantes: COR_ABIERTO constantes . COR_CERRADO

    COR_CERRADO  desplazar e ir al estado 106


estado 101

   51 constantes: constante . COMA constantes
   52           | constante .

    COMA  desplazar e ir al estado 107

    $default  reduce usando la regla 52 (constantes)


estado 102

   49 funcionContar: CONTAR PAR_ABIERTO cuenta PUNTO_COMA listaConstantes PAR_CERRADO .

    $default  reduce usando la regla 49 (funcionContar)


estado 103

   34 bloqueIf: IF PAR_ABIERTO condicion PAR_CERRADO LLAVE_ABIERTO bloque LLAVE_CERRADO ELSE . LLAVE_ABIERTO bloque LLAVE_CERRADO

    LLAVE_ABIERTO  desplazar e ir al estado 108


estado 104

   24 listaTipos: listaTipos COMA . tipoDeDato

    INTEGER  desplazar e ir al estado 95
    FLOAT    desplazar e ir al estado 96
    STRING   desplazar e ir al estado 97

    tipoDeDato  ir al estado 109


estado 105

   21 declaracion: DIM OP_LE listaVariables OP_GE AS OP_LE listaTipos OP_GE .

    $default  reduce usando la regla 21 (declaracion)


estado 106

   50 listaConstantes: COR_ABIERTO constantes COR_CERRADO .

    $default  reduce usando la regla 50 (listaConstantes)


estado 107

   51 constantes: constante COMA . constantes

    CONST_ENTERA   desplazar e ir al estado 32
    CONST_REAL     desplazar e ir al estado 33
    CONST_BINARIA  desplazar e ir al estado 34
    CONST_HEXA     desplazar e ir al estado 35

    constantes  ir al estado 110
    constante   ir al estado 101


estado 108

   34 bloqueIf: IF PAR_ABIERTO condicion PAR_CERRADO LLAVE_ABIERTO bloque LLAVE_CERRADO ELSE LLAVE_ABIERTO . bloque LLAVE_CERRADO

    WHILE  desplazar e ir al estado 1
    IF     desplazar e ir al estado 2
    PUT    desplazar e ir al estado 3
    GET    desplazar e ir al estado 4
    DIM    desplazar e ir al estado 5
    ID     desplazar e ir al estado 6

    bloque       ir al estado 111
    sentencia    ir al estado 9
    asignacion   ir al estado 10
    declaracion  ir al estado 11
    salida       ir al estado 12
    entrada      ir al estado 13
    bloqueWhile  ir al estado 14
    bloqueIf     ir al estado 15


estado 109

   24 listaTipos: listaTipos COMA tipoDeDato .

    $default  reduce usando la regla 24 (listaTipos)


estado 110

   51 constantes: constante COMA constantes .

    $default  reduce usando la regla 51 (constantes)


estado 111

   34 bloqueIf: IF PAR_ABIERTO condicion PAR_CERRADO LLAVE_ABIERTO bloque LLAVE_CERRADO ELSE LLAVE_ABIERTO bloque . LLAVE_CERRADO

    LLAVE_CERRADO  desplazar e ir al estado 112


estado 112

   34 bloqueIf: IF PAR_ABIERTO condicion PAR_CERRADO LLAVE_ABIERTO bloque LLAVE_CERRADO ELSE LLAVE_ABIERTO bloque LLAVE_CERRADO .

    $default  reduce usando la regla 34 (bloqueIf)
